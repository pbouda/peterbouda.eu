<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Peter Bouda - Qt</title><link href="https://www.peterbouda.eu/" rel="alternate"></link><link href="https://www.peterbouda.eu/feeds/qt.atom.xml" rel="self"></link><id>https://www.peterbouda.eu/</id><updated>2015-05-04T11:47:00+01:00</updated><subtitle>Natural Language Processing Consultant</subtitle><entry><title>Die Brummbeere: an embedded ownCloud music player</title><link href="https://www.peterbouda.eu/die-brummbeere-an-embedded-owncloud-music-player.html" rel="alternate"></link><published>2015-05-04T11:47:00+01:00</published><updated>2015-05-04T11:47:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2015-05-04:/die-brummbeere-an-embedded-owncloud-music-player.html</id><summary type="html">&lt;p&gt;I recently &lt;a class="reference external" href="https://www.peterbouda.eu/twomusic-open-source-audio-player-for-owncloud.html"&gt;published here a short post&lt;/a&gt; about
TwoMusic, an open source music player for ownCloud. As I got interested in
embedded systems and embedded development the last few weeks, I turned the
player into a project for the Raspberry and other boards that run Linux. My
first goal was …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently &lt;a class="reference external" href="https://www.peterbouda.eu/twomusic-open-source-audio-player-for-owncloud.html"&gt;published here a short post&lt;/a&gt; about
TwoMusic, an open source music player for ownCloud. As I got interested in
embedded systems and embedded development the last few weeks, I turned the
player into a project for the Raspberry and other boards that run Linux. My
first goal was to boot directly into a minimal Linux system that supports Qt and
its multimedia module. The book &amp;#8220;&lt;a class="reference external" href="http://www.amazon.de/gp/product/386490143X/ref=as_li_tl?ie=UTF8&amp;amp;camp=1638&amp;amp;creative=6742&amp;amp;creativeASIN=386490143X&amp;amp;linkCode=as2&amp;amp;tag=jsusde-21&amp;amp;linkId=BJJLZYFHUKSX4EHC"&gt;Embedded Linux lernen mit dem Raspberry Pi&lt;/a&gt;&amp;#8221;
was a very helpful introduction about the whole procedure, and I recommend it
to anyone who reads&amp;nbsp;German.&lt;/p&gt;
&lt;p&gt;In the end I came up with my first embedded Linux system that boots the Qt
music player with touch screen support. To reflect the focus on embedded
platforms and especially the Raspberry I changed the project name to &amp;#8220;Die
Brummbeere&amp;#8221;. The documentation of the project on GitHub now contains a longer
description about &lt;a class="reference external" href="http://brummbeere.readthedocs.org/en/latest/raspi.html"&gt;how to build your own embedded system&lt;/a&gt; that boots Die
Brummbeere, so I won&amp;#8217;t go into details here. As a summary, with all the work
that is done around Linux, the Raspberry, Qt and buildroot, it was amazingly
easy to build your own embedded device. I really felt like on the shoulders of
giants during the development of the project and hope to be able to give back
in the&amp;nbsp;future&amp;#8230;&lt;/p&gt;
&lt;p&gt;Die Brummbeere still runs on desktop computers (and probably mobile phones), but
the user interface does not really integrate into anything existing. My goal
over the next weeks is to understand the cross-platform opportunities of Qt
regarding user interfaces better. Maybe develop some kind of responsive approach
to Qt GUIs that allows to share most of the &lt;span class="caps"&gt;QML&lt;/span&gt; code. I really like what
&lt;a class="reference external" href="http://techcrunch.com/2015/04/29/microsoft-announces-continuum-turning-windows-10-phones-into-desktops/"&gt;Microsoft presented as their Continuum approach&lt;/a&gt;,
I am very curious how you could mimic that with&amp;nbsp;Qt.&lt;/p&gt;
</content><category term="Qt"></category><category term="Qt"></category><category term="Embedded"></category><category term="IoT"></category><category term="ownCloud"></category><category term="Music"></category></entry><entry><title>TwoMusic: Open Source audio player for ownCloud</title><link href="https://www.peterbouda.eu/twomusic-open-source-audio-player-for-owncloud.html" rel="alternate"></link><published>2015-03-17T08:30:00+00:00</published><updated>2015-03-17T08:30:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2015-03-17:/twomusic-open-source-audio-player-for-owncloud.html</id><summary type="html">&lt;p&gt;I started to work a new Qt application recently, a music player for ownCloud. It is very similar to my &amp;#8220;Music In The Sky&amp;#8221; Windows Phone app, the main difference is that it loads your music from ownCloud instead of OneDrive. The main feature still is the folder navigation, so …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I started to work a new Qt application recently, a music player for ownCloud. It is very similar to my &amp;#8220;Music In The Sky&amp;#8221; Windows Phone app, the main difference is that it loads your music from ownCloud instead of OneDrive. The main feature still is the folder navigation, so now library or whatever is build from your music. I still prefer to have my own structure for my music, without any library, so basically the player is built for my own needs. The app is published under the &lt;span class="caps"&gt;GPL&lt;/span&gt; v2, and if you know how to compile Qt application you may already find it usable&amp;#8230; There is still a lot to improve, but my focus is now on how to run this app on different platforms. I am very curious to see how easy/difficult it is to adapt a modern, &lt;span class="caps"&gt;QML&lt;/span&gt;-based app to all kinds of mobile and desktop environments. Here is the Github&amp;nbsp;link:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/twomusic"&gt;https://github.com/pbouda/twomusic&lt;/a&gt;&lt;/p&gt;
</content><category term="Qt"></category><category term="Qt"></category><category term="Apps"></category><category term="Music"></category></entry></feed>