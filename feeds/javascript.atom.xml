<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Peter Bouda - JavaScript</title><link href="https://www.peterbouda.eu/" rel="alternate"></link><link href="https://www.peterbouda.eu/feeds/javascript.atom.xml" rel="self"></link><id>https://www.peterbouda.eu/</id><updated>2016-03-17T16:29:00+00:00</updated><subtitle>Natural Language Processing Consultant</subtitle><entry><title>The current state of JavaScript ecosystem</title><link href="https://www.peterbouda.eu/the-current-state-of-javascript-ecosystem.html" rel="alternate"></link><published>2016-03-17T16:29:00+00:00</published><updated>2016-03-17T16:29:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2016-03-17:/the-current-state-of-javascript-ecosystem.html</id><summary type="html">&lt;p&gt;There is currently a lot of talk about the problems of the current JavaScript ecosystem, only sometimes there are also solutions mentioned. In general it seems there is a consensus that tooling, libraries and frameworks are changing very rapidly and it&amp;#8217;s hard to keep track with the changes and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There is currently a lot of talk about the problems of the current JavaScript ecosystem, only sometimes there are also solutions mentioned. In general it seems there is a consensus that tooling, libraries and frameworks are changing very rapidly and it&amp;#8217;s hard to keep track with the changes and choose a future-proof solution for your next project. Here are two links with a good summary of the&amp;nbsp;situation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@ericclemmons/javascript-fatigue-48d4011b6fc4#.6kwb84p07"&gt;Javascript&amp;nbsp;Fatigue&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://segment.com/blog/the-deep-roots-of-js-fatigue/"&gt;The Deep Roots of Javascript&amp;nbsp;Fatigue&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When you read the first post carefully I think it mentions one of the sources of the problem: that there was not much going on for a while. The situation was kind of stuck due to problems in the specification process, so now everybody is trying to catch up. And of course it is kind of a trend in general to always choose the latest technology whether you really know it makes sense or not. You do an online search for the best &lt;span class="caps"&gt;JS&lt;/span&gt; framework and then go with React, so React will get popular. That creates a snowball effect on its own. But the posts also have an outlook that is often mention: 2016 will be the year of consolidation, so in a few month we will have a better picture. I agree to that. Whatever happens, things will stay&amp;nbsp;interesting!&lt;/p&gt;</content><category term="JavaScript"></category><category term="JavaScript"></category></entry></feed>