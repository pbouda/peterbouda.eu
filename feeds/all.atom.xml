<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Peter Bouda</title><link href="https://www.peterbouda.eu/" rel="alternate"></link><link href="https://www.peterbouda.eu/feeds/all.atom.xml" rel="self"></link><id>https://www.peterbouda.eu/</id><updated>2025-09-30T10:36:00+01:00</updated><subtitle>Natural Language Processing Consultant</subtitle><entry><title>🔬 Fascinating research from NVIDIA: Small Language Models are the Future of Agentic AI</title><link href="https://www.peterbouda.eu/fascinating-research-from-nvidia-small-language-models-are-the-future-of-agentic-ai.html" rel="alternate"></link><published>2025-09-30T10:36:00+01:00</published><updated>2025-09-30T10:36:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2025-09-30:/fascinating-research-from-nvidia-small-language-models-are-the-future-of-agentic-ai.html</id><summary type="html">&lt;p&gt;While everyone&amp;#8217;s focused on making models bigger, this paper makes a compelling case for going smaller—especially for agentic &lt;span class="caps"&gt;AI&lt;/span&gt;&amp;nbsp;systems.&lt;/p&gt;
&lt;p&gt;The core insight: Most &lt;span class="caps"&gt;AI&lt;/span&gt; agents don&amp;#8217;t need vast general knowledge. They perform specialized, repetitive tasks where fine-tuned small language models (SLMs) are not just sufficient—they …&lt;/p&gt;</summary><content type="html">&lt;p&gt;While everyone&amp;#8217;s focused on making models bigger, this paper makes a compelling case for going smaller—especially for agentic &lt;span class="caps"&gt;AI&lt;/span&gt;&amp;nbsp;systems.&lt;/p&gt;
&lt;p&gt;The core insight: Most &lt;span class="caps"&gt;AI&lt;/span&gt; agents don&amp;#8217;t need vast general knowledge. They perform specialized, repetitive tasks where fine-tuned small language models (SLMs) are not just sufficient—they&amp;#8217;re&amp;nbsp;superior.&lt;/p&gt;
&lt;p&gt;Why this matters for&amp;nbsp;Europe:&lt;/p&gt;
&lt;p&gt;⚡ Energy efficiency at scale – SLMs consume significantly less power than their large counterparts. As &lt;span class="caps"&gt;AI&lt;/span&gt; deployment grows, this shift could dramatically reduce the carbon footprint and operational costs of &lt;span class="caps"&gt;AI&lt;/span&gt; infrastructure across the &lt;span class="caps"&gt;EU&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;🇪🇺 Sovereign technology advantage – Smaller models are far more economical to train and deploy. This lowers barriers for European companies and research institutions to develop and control their own &lt;span class="caps"&gt;AI&lt;/span&gt; technologies, reducing dependence on hyperscale infrastructure and foreign tech&amp;nbsp;giants.&lt;/p&gt;
&lt;p&gt;🎯 Task-specific fine-tuning – The paper demonstrates that SLMs fine-tuned for specific workflows can match or exceed the performance of general-purpose LLMs in agentic systems, while being orders of magnitude more&amp;nbsp;cost-effective.&lt;/p&gt;
&lt;p&gt;For Europe&amp;#8217;s &lt;span class="caps"&gt;AI&lt;/span&gt; strategy—balancing innovation, sovereignty, and sustainability—this approach could be&amp;nbsp;transformative.&lt;/p&gt;
&lt;p&gt;Full paper: &lt;a href="https://research.nvidia.com/labs/lpr/slm-agents/"&gt;https://research.nvidia.com/labs/lpr/slm-agents/&lt;/a&gt;&lt;/p&gt;</content><category term="AI"></category><category term="AI"></category></entry><entry><title>Talk about multilingual agent evaluation</title><link href="https://www.peterbouda.eu/talk-about-multilingual-agent-evaluation.html" rel="alternate"></link><published>2025-09-11T09:20:00+01:00</published><updated>2025-09-11T09:20:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2025-09-11:/talk-about-multilingual-agent-evaluation.html</id><summary type="html">&lt;p&gt;This Thursday, today, I am happy to give a talk about multilingual agents and their performance on European languages
&lt;a href="https://luma.com/bszaz8e3"&gt;at the &lt;span class="caps"&gt;AI&lt;/span&gt; Agent World Tour: Lisbon MLOps Meetup&lt;/a&gt;. We tested a few LLMs that you can run on
consumer GPUs to find out which work best for agentic use cases …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This Thursday, today, I am happy to give a talk about multilingual agents and their performance on European languages
&lt;a href="https://luma.com/bszaz8e3"&gt;at the &lt;span class="caps"&gt;AI&lt;/span&gt; Agent World Tour: Lisbon MLOps Meetup&lt;/a&gt;. We tested a few LLMs that you can run on
consumer GPUs to find out which work best for agentic use cases. I hope to see you&amp;nbsp;there!&lt;/p&gt;
&lt;p&gt;We just released the repository so you can find all code, results and visualizations&amp;nbsp;here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Nodehaus/evaluation/tree/main/multilingual_agent"&gt;https://github.com/Nodehaus/evaluation/tree/main/multilingual_agent&lt;/a&gt;&lt;/p&gt;</content><category term="AI"></category><category term="AI"></category></entry><entry><title>The Great European AI Language Championship</title><link href="https://www.peterbouda.eu/the-great-european-ai-language-championship.html" rel="alternate"></link><published>2025-09-01T14:42:00+01:00</published><updated>2025-09-01T14:42:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2025-09-01:/the-great-european-ai-language-championship.html</id><summary type="html">&lt;p&gt;We published &lt;a href="https://substack.com/home/post/p-172471752"&gt;an article today about our multilingual evaluation of smaller LLMs&lt;/a&gt; using the belebele dataset.
&lt;a href="https://github.com/facebookresearch/belebele"&gt;Belebele&lt;/a&gt; is an easy-to-use dataset with multiple choice question in 122 langauge variants, we focussed on 8 European languages.
The gemma-3 models performed best, but open models like OLLMo-2 showed quite good performance, too …&lt;/p&gt;</summary><content type="html">&lt;p&gt;We published &lt;a href="https://substack.com/home/post/p-172471752"&gt;an article today about our multilingual evaluation of smaller LLMs&lt;/a&gt; using the belebele dataset.
&lt;a href="https://github.com/facebookresearch/belebele"&gt;Belebele&lt;/a&gt; is an easy-to-use dataset with multiple choice question in 122 langauge variants, we focussed on 8 European languages.
The gemma-3 models performed best, but open models like OLLMo-2 showed quite good performance, too! Read more in the full&amp;nbsp;article:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://substack.com/home/post/p-172471752"&gt;https://substack.com/home/post/p-172471752&lt;/a&gt;&lt;/p&gt;</content><category term="AI"></category><category term="AI"></category></entry><entry><title>Running tinygrad with CUDA on NixOS</title><link href="https://www.peterbouda.eu/running-tinygrad-with-cuda-on-nixos.html" rel="alternate"></link><published>2025-06-16T08:40:00+01:00</published><updated>2025-06-16T08:40:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2025-06-16:/running-tinygrad-with-cuda-on-nixos.html</id><summary type="html">&lt;p&gt;I started to play around with NixOS a few weeks ago and until now I am quite happy with it. I installed it on an older
&lt;span class="caps"&gt;PC&lt;/span&gt; with a Geforce &lt;span class="caps"&gt;GT&lt;/span&gt; 1030 and wanted to see if I get tinygrad running with the &lt;span class="caps"&gt;CUDA&lt;/span&gt; back-end on it. I learned about …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I started to play around with NixOS a few weeks ago and until now I am quite happy with it. I installed it on an older
&lt;span class="caps"&gt;PC&lt;/span&gt; with a Geforce &lt;span class="caps"&gt;GT&lt;/span&gt; 1030 and wanted to see if I get tinygrad running with the &lt;span class="caps"&gt;CUDA&lt;/span&gt; back-end on it. I learned about
nix-shell and, after a while, was able to set up such a shell that supports tinygrad on &lt;span class="caps"&gt;CUDA&lt;/span&gt;. I was not able to find
examples that worked directly for my use case, so I will post that here, for future reference. The main customizations
for me&amp;nbsp;were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adding clang as the shell&amp;nbsp;compiler&lt;/li&gt;
&lt;li&gt;LD_LIBRARY_PATH&amp;nbsp;needs &lt;code&gt;${pkgs.cudatoolkit}/lib&lt;/code&gt; for &lt;code&gt;libnvrtc.so&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;I&amp;nbsp;added &lt;code&gt;NIX_ENFORCE_NO_NATIVE=0&lt;/code&gt; so that tinygrad can&amp;nbsp;pass &lt;code&gt;-march=native&lt;/code&gt; to&amp;nbsp;clang&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is my complete&amp;nbsp;nix-shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;nixpkgs&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="n"&gt;clangStdenv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mkDerivation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;clang-nix-shell&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;# nativeBuildInputs is usually what you want -- tools you need to run&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;nativeBuildInputs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buildPackages&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;python312&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;uv&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;buildInputs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gitRepo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gnupg&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;autoconf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;curl&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;procps&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gnumake&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;m4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gperf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unzip&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cudatoolkit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;linuxPackages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nvidia_x11&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;libGLU&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;libGL&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;xorg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;libXi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xorg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;libXmu&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;freeglut&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;xorg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;libXext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xorg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;libX11&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xorg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;libXv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xorg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;libXrandr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;zlib&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ncurses5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stdenv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;binutils&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;shellHook&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CUDA_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cudatoolkit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linuxPackages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nvidia_x11&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ncurses5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cudatoolkit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;EXTRA_LDFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-L/lib -L$&lt;/span&gt;&lt;span class="si"&gt;{pkgs.linuxPackages.nvidia_x11}&lt;/span&gt;&lt;span class="s2"&gt;/lib&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;EXTRA_CCFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-I/usr/include&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;NIX_ENFORCE_NO_NATIVE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You might also need to remove&amp;nbsp;the &lt;code&gt;--target&lt;/code&gt; argument to clang from the&amp;nbsp;tinygrad &lt;code&gt;runtime/ops_cpu.py&lt;/code&gt;. It gave me
warning, but I am not sure if it actually &lt;a href="https://github.com/NixOS/nixpkgs/pull/323869"&gt;breaks things&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;14&lt;/span&gt;&lt;span class="n"&gt;c14&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;march&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;native&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;unknown&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;elf&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;O2&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fPIC&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ffreestanding&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;fn&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nostdlib&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;fn&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ident&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;]&lt;/span&gt;
&lt;span class="o"&gt;---&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;march&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;native&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;O2&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fPIC&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ffreestanding&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;fn&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nostdlib&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;fn&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ident&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="AI"></category><category term="AI"></category></entry><entry><title>Major progress in AI!</title><link href="https://www.peterbouda.eu/major-progress-in-ai.html" rel="alternate"></link><published>2020-08-01T09:15:00+01:00</published><updated>2020-08-01T09:15:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2020-08-01:/major-progress-in-ai.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/data/home/pbouda/yolov3/utils/utils.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;load_classes&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/data/anaconda/envs/py35/lib/python3.5/encodings/ascii.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;UnicodeDecodeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;codec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t decode byte 0xc4 in position 157 …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/data/home/pbouda/yolov3/utils/utils.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;load_classes&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/data/anaconda/envs/py35/lib/python3.5/encodings/ascii.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;UnicodeDecodeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;codec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t decode byte 0xc4 in position 157: ordinal not in range(128)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Well, it can recognize objects in videos but no non-&lt;span class="caps"&gt;ASCII&lt;/span&gt; characters in object
names. We&amp;#8217;ll have to wait until computers get faster and better&amp;nbsp;;)&lt;/p&gt;</content><category term="Treasures"></category><category term="AI"></category></entry><entry><title>BrickBand - Make Music With Bricks</title><link href="https://www.peterbouda.eu/brickband-make-music-with-bricks.html" rel="alternate"></link><published>2020-04-08T13:22:00+01:00</published><updated>2020-04-08T13:22:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2020-04-08:/brickband-make-music-with-bricks.html</id><content type="html">&lt;p&gt;BrickBand was a follow-up of my &lt;a href="https://www.computerworld.com.pt/2011/11/14/lego-coding-ganha-5%c2%aa-edicao-do-codebits/"&gt;Lego Coding&lt;/a&gt; idea, using bricks to create patterns for&amp;nbsp;music.&lt;/p&gt;
&lt;p&gt;This app is not available anymore, as Windows Phone was shut&amp;nbsp;down.&lt;/p&gt;</content><category term="Videos"></category><category term="AR"></category><category term="HCI"></category></entry><entry><title>Google Übersetz</title><link href="https://www.peterbouda.eu/google-ubersetz.html" rel="alternate"></link><published>2020-04-07T08:24:00+01:00</published><updated>2020-04-07T08:24:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2020-04-07:/google-ubersetz.html</id><content type="html">&lt;p&gt;You are hereby ordered to&amp;nbsp;read:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.teachyoubackwards.com/"&gt;Teach You Backwards: An In-Depth Study of Googe Translate for 103 Languages&lt;/a&gt; by Martin&amp;nbsp;Benjamin&lt;/p&gt;</content><category term="Treasures"></category><category term="NLP"></category></entry><entry><title>Going to the moon by building towers</title><link href="https://www.peterbouda.eu/going-to-the-moon-by-building-towers.html" rel="alternate"></link><published>2020-04-06T08:33:00+01:00</published><updated>2020-04-06T08:33:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2020-04-06:/going-to-the-moon-by-building-towers.html</id><summary type="html">&lt;p&gt;&lt;a href="https://thegradient.pub/a-speech-to-text-practitioners-criticisms-of-industry-and-academia/"&gt;This article&lt;/a&gt; was published on Hacker News today, a good overview and
criticism of the current hype around &lt;span class="caps"&gt;NLP&lt;/span&gt; and speech-to-text in general. I like
this&amp;nbsp;comparison:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Stable production-grade &lt;span class="caps"&gt;NLP&lt;/span&gt; models usually are built upon data which is several orders of magnitude larger or the task at hand should be …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://thegradient.pub/a-speech-to-text-practitioners-criticisms-of-industry-and-academia/"&gt;This article&lt;/a&gt; was published on Hacker News today, a good overview and
criticism of the current hype around &lt;span class="caps"&gt;NLP&lt;/span&gt; and speech-to-text in general. I like
this&amp;nbsp;comparison:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Stable production-grade &lt;span class="caps"&gt;NLP&lt;/span&gt; models usually are built upon data which is several orders of magnitude larger or the task at hand should be much more simple. For example - it is safe to assume that a neural network can do &lt;span class="caps"&gt;NER&lt;/span&gt; reliably, but as for answering questions or maintaining dialogue - this is just science fiction now. I like an apt analogy - building &lt;span class="caps"&gt;AGI&lt;/span&gt; with transformers is like going to the Moon by building&amp;nbsp;towers&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Treasures"></category><category term="AI"></category><category term="NLP"></category></entry><entry><title>The Future is the Past - Moving on</title><link href="https://www.peterbouda.eu/the-future-is-the-past-moving-on.html" rel="alternate"></link><published>2020-04-04T12:54:00+01:00</published><updated>2020-04-04T12:54:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2020-04-04:/the-future-is-the-past-moving-on.html</id><summary type="html">&lt;p&gt;After reading the millionth &amp;#8220;Corona and the future of work&amp;#8221; post you might
actually want to go to hibernate mode and wake up after everything settled to
see that nothing changed. But what would be a &amp;#8220;change&amp;#8221; anyway? I prefer to see
the current crisis as an accelerator, so things …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After reading the millionth &amp;#8220;Corona and the future of work&amp;#8221; post you might
actually want to go to hibernate mode and wake up after everything settled to
see that nothing changed. But what would be a &amp;#8220;change&amp;#8221; anyway? I prefer to see
the current crisis as an accelerator, so things in a lot of places are moving a
bit faster in the directions they moved anyway. Home office, authoritarian
instruments, precariat. Let&amp;#8217;s see if we later recognize the net outcome as
positive or&amp;nbsp;negative.&lt;/p&gt;
&lt;p&gt;It seems to be a good time to think about past, current and future developments,
so here are some thoughts on how I would like to continue. My personal interest
in web development ceased to exists. In a world with negative prizes for oil I
hereby declare a negative interest in web development. It was a good source of
income and for a while even interesting to learn. But by now I got enough of
Scrum (and anything else that you might or might not call Agile), test-driven
development and the next framework that tries (but does not come even close) to
re-invent stuff from the 90ies that proved to be better. Fortunately we got rid
of bosses that command us around, but now we let our methodologies do it. And I
understand that in a world without cultural progress there is a human need to
create the illusion of it. Our idea of the future has shrunken to the presention
of the latest phone or JavaScript framework. But well, the worst thing is that I
am just bored to tears working on web projects. Too often I feel like Sisyphos,
rolling my tasks to the Done column and then falling back to the Backlog where a
never-ending list is waiting. I do not even remember the last time I was working
on something interesting. Time to move on. Or better: address this from
different angle. Not dropping out but focussing the&amp;nbsp;efforts.&lt;/p&gt;
&lt;p&gt;I still like working with computers. If someone would force me to describe what
a computer is too me I would call it &amp;#8220;the world&amp;#8217;s most complex toy&amp;#8221;. I never
seriously used any (social) web platform (as a consumer I would call the modern
web: &lt;span class="caps"&gt;TV&lt;/span&gt; and one of my music sources). I always enjoyed to think about computer
projects that were never done before. That display some kind of magic that the
user enjoys. When human and computer do something together that neither of them
could do alone. That is where computer technologies can provide something useful
to humankind, in my opinion. Here is a practical example: besides web
development I was here and there (lately more and more) working in natural
language processing. There is basic technology like speech recognition and
machine translation, but this is stuff is not too interesing to me. Humans can
transcribe and translate, and I will not live long enough to see computers come
even close to human performance (let&amp;#8217;s ignore articifial benchmarks that we use
nowadays to evaluate &lt;span class="caps"&gt;NLP&lt;/span&gt;). But speech recognition, for example, has great
potential to introduce new interaction between humans and machines, and this is
the part that make it interesting. How do we merge computation into task-solving
to generate new opportunities in creating and&amp;nbsp;inventing?&lt;/p&gt;
&lt;p&gt;A very good example of this approach is &lt;a href="https://dynamicland.org/"&gt;Dynamicland&lt;/a&gt;.
An awesome project and Bret Victor is involved (you are hereby ordered to watch
all his videos on Youtube). This is basic research in communication design and
human-computer interaction. Let&amp;#8217;s not invent new terms here just to mimic some
kind of progress. I am currently collecting and refreshing some of my projects
to see what they could contribute in this area. The funny thing is: of all the
different projects that I implemented, the ones that involve a lot of
human-computer interaction are by far the ones that I care(d) most about. There
are even some award-winning ideas among them that I did not follow-up on. I
always went back to web development. Not anymore. I might use web technologies
for my projects, but I am not a web developer. I build the future of
human-computer&amp;nbsp;interaction.&lt;/p&gt;</content><category term="Treasures"></category><category term="HCI"></category></entry><entry><title>Video: Poio Predictive Text</title><link href="https://www.peterbouda.eu/video-poio-predictive-text.html" rel="alternate"></link><published>2020-04-04T10:12:00+01:00</published><updated>2020-04-04T10:12:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2020-04-04:/video-poio-predictive-text.html</id><content type="html">&lt;p&gt;Here is my talk &amp;#8220;Poio Predictive Text - Grassroots Technology for Langage
Diversity&amp;#8221; at the Coding For Language Communities Devroom at
&lt;a href="https://fosdem.org/2020/"&gt;&lt;span class="caps"&gt;FOSDEM&lt;/span&gt; 2020&lt;/a&gt;.&lt;/p&gt;</content><category term="Videos"></category><category term="Poio"></category><category term="Language Technologies"></category></entry><entry><title>Angular Seed Project with LoopBack</title><link href="https://www.peterbouda.eu/angular-seed-project-with-loopback.html" rel="alternate"></link><published>2017-05-04T15:44:00+01:00</published><updated>2017-05-04T15:44:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2017-05-04:/angular-seed-project-with-loopback.html</id><summary type="html">&lt;p&gt;Around a month ago I published a post about
&lt;a href="https://www.peterbouda.eu/angular-seed-project-with-firebase.html"&gt;my Angular Seed Project with Firebase&lt;/a&gt;.
Since then I tried to promote this seed to a couple of friends in Germany, who
were not really happy to host their data on Firebase. So I started to refactor
the back-end to &lt;a href="http://loopback.io/"&gt;LoopBack …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Around a month ago I published a post about
&lt;a href="https://www.peterbouda.eu/angular-seed-project-with-firebase.html"&gt;my Angular Seed Project with Firebase&lt;/a&gt;.
Since then I tried to promote this seed to a couple of friends in Germany, who
were not really happy to host their data on Firebase. So I started to refactor
the back-end to &lt;a href="http://loopback.io/"&gt;LoopBack&lt;/a&gt;, which is an awesome JavaScript
framework for rapid back-end development based on
&lt;a href="http://expressjs.com"&gt;Express&lt;/a&gt;. I used LoopBack for my latest major consulting
project and think that the development experience is awesome. There is a great
&lt;a href="http://loopback.io/doc/en/lb3/AngularJS-JavaScript-SDK.html"&gt;client &lt;span class="caps"&gt;SDK&lt;/span&gt; for Angular&lt;/a&gt;,
which makes connecting an Angular front-end super easy. Both AngularJS and
Angular are supported, so I could just attach my Angular front-end and replace
the&amp;nbsp;Firebase &lt;code&gt;AuthService&lt;/code&gt; with a LoopBack version. It even supports
Firebase-like real-time communication via the
&lt;a href="http://fireloop.io/"&gt;FireLoop platform&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Meanwhile I also decided to replace MongoDB with a PostgreSQL database. I know
that document data stores are nowadays quite popular, but the explicit schemas
of relational databases have advantages in the long run, in my opinion. They
make sure that you have to think about migrations whenever you change the data
and forces some kind of versioning of data and &lt;span class="caps"&gt;API&lt;/span&gt;, which reduces the risks of
complex errors when your app grows.
&lt;a href="https://blog.scottnonnenberg.com/hard-won-lessons-five-years-with-node-js/#data-apis-and-versions"&gt;This great blog post&lt;/a&gt;
of Scott Nonnenberg was quite inspiring and it gives a good overview of best
practices for future-proof JavaScript&amp;nbsp;back-ends.&lt;/p&gt;
&lt;p&gt;Finally, I am now running on a stack of PostgreSQL + LoopBack + Angular +
Node.js, which I call the &amp;#8220;&lt;span class="caps"&gt;PLAN&lt;/span&gt; stack&amp;#8221; 😃.
&lt;a href="https://radialspark.github.io/PLAN-App-Accelerator/architecture.html"&gt;Though I am not the first one&lt;/a&gt;
who came up with the idea. I still think the new seed project for my &lt;span class="caps"&gt;PLAN&lt;/span&gt; stack
is a good starting point for modern web&amp;nbsp;applications:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ng-lisbon/angular-loopback-seed"&gt;https://github.com/ng-lisbon/angular-loopback-seed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Check out &lt;a href="http://www.ng-lisbon.com"&gt;our trainings at ng-lisbon&lt;/a&gt; if
you want to learn more about Angular and the &lt;span class="caps"&gt;PLAN&lt;/span&gt;&amp;nbsp;stack!&lt;/p&gt;
&lt;p&gt;I am happy to get any feedback, let me know what you think about the seed. Is
it useful, and what could be&amp;nbsp;improved?&lt;/p&gt;</content><category term="Angular"></category><category term="Angular"></category><category term="JavaScript"></category><category term="LoopBack"></category></entry><entry><title>Angular Workshop at TUGA IT 2017 in Lisbon</title><link href="https://www.peterbouda.eu/angular-workshop-at-tuga-it-2017-in-lisbon.html" rel="alternate"></link><published>2017-04-10T16:37:00+01:00</published><updated>2017-04-10T16:37:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2017-04-10:/angular-workshop-at-tuga-it-2017-in-lisbon.html</id><summary type="html">&lt;p&gt;I am happy to announce my next public Angular workshop, at the
&lt;a href="TUGA IT 2017 conference"&gt;http://tugait.pt/2017/&lt;/a&gt;. The workshop will take
place on May 18th, and it will be a joint workshop about Angular and Xamarin.
Get ready for a full day of cross-platform development! For those of you that
are …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am happy to announce my next public Angular workshop, at the
&lt;a href="TUGA IT 2017 conference"&gt;http://tugait.pt/2017/&lt;/a&gt;. The workshop will take
place on May 18th, and it will be a joint workshop about Angular and Xamarin.
Get ready for a full day of cross-platform development! For those of you that
are planning to build a web application, and specifically those that want to
roll out their app on multiple platforms, this will be a perfect opportunity
to get into two of the major platforms for modern app development! Sign up
for the workshop here, there is still some time left for Early Bird&amp;nbsp;tickets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://app.weventual.com/detalheEvento.action?iDEvento=4134"&gt;https://app.weventual.com/detalheEvento.action?iDEvento=4134&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Get up-to-speed with all the new features and improvements in recent Angular
versions to develop your first web application with the help of this
superheroic&amp;nbsp;framework!&lt;/p&gt;
&lt;p&gt;The workshop will be &amp;#8220;hands on&amp;#8221;, i.e. we will architect a little (demo? no!)
real-world Angular application with user registration, login and basic
interaction with user data. You will learn about all the key concepts of
Angular to develop and maintain complex web applications and how to publish
them. The basic application we will develop can act as a cornerstone for your
own next-generation web idea and will give you a quick start into modern web
application&amp;nbsp;development.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Events"></category><category term="Angular"></category><category term="JavaScript"></category><category term="Lisbon"></category></entry><entry><title>Angular Seed Project with Firebase</title><link href="https://www.peterbouda.eu/angular-seed-project-with-firebase.html" rel="alternate"></link><published>2017-03-28T16:44:00+01:00</published><updated>2017-03-28T16:44:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2017-03-28:/angular-seed-project-with-firebase.html</id><summary type="html">&lt;p&gt;To learn more about &lt;a href="https://github.com/angular/angularfire2"&gt;Firebase&lt;/a&gt;, and
specifically how to connect an Angular application to it, I started to
implement a
&lt;a href="https://github.com/pbouda/angular-firebase-seed"&gt;little seed project&lt;/a&gt; that
provides basic functionality to register users via e-mail/password combination
and let them login to a profile page. Registered and confirmed users can
currently change their …&lt;/p&gt;</summary><content type="html">&lt;p&gt;To learn more about &lt;a href="https://github.com/angular/angularfire2"&gt;Firebase&lt;/a&gt;, and
specifically how to connect an Angular application to it, I started to
implement a
&lt;a href="https://github.com/pbouda/angular-firebase-seed"&gt;little seed project&lt;/a&gt; that
provides basic functionality to register users via e-mail/password combination
and let them login to a profile page. Registered and confirmed users can
currently change their mail address in their password in the profile. I used
the &lt;a href="https://ng-bootstrap.github.io"&gt;ng-bootstrap module&lt;/a&gt; for the &lt;span class="caps"&gt;UI&lt;/span&gt;, which was
a great opportunity to learn some basics about Bootrap 4&amp;nbsp;also.&lt;/p&gt;
&lt;p&gt;The usage of the angularfire2 module was a bit tricky, some functionality is
not (yet) available in the module and one has to use the JavaScript firebase
&lt;span class="caps"&gt;SDK&lt;/span&gt;, which is fortunately part of the angularfire2 module. Have a look at the
&lt;a href="https://github.com/pbouda/angular-firebase-seed/blob/master/src/app/shared/auth.service.ts"&gt;AuthService&lt;/a&gt;
class to sees some&amp;nbsp;details.&lt;/p&gt;
&lt;p&gt;I hope that this project serves well as the basis of my next web projects, I
also plan to update it regularly whenever I learn something or when new
versions of Angular and the &lt;span class="caps"&gt;CLI&lt;/span&gt; are published. Currently it uses Angular 4.0.0
and version 1.0.0 of the &lt;span class="caps"&gt;CLI&lt;/span&gt;, so everything is shiny new :) The project is
available on&amp;nbsp;Github:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ng-lisbon/angular-firebase-seed"&gt;https://github.com/ng-lisbon/angular-firebase-seed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I am happy to get any feedback, let me know what you think about the seed. Is
it useful, and what could be&amp;nbsp;improved?&lt;/p&gt;</content><category term="Angular"></category><category term="Angular"></category><category term="JavaScript"></category><category term="Firebase"></category></entry><entry><title>Angular Lisbon Meetup in February</title><link href="https://www.peterbouda.eu/angular-lisbon-meetup-in-february.html" rel="alternate"></link><published>2017-02-10T09:00:00+00:00</published><updated>2017-02-10T09:00:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2017-02-10:/angular-lisbon-meetup-in-february.html</id><summary type="html">&lt;p&gt;It&amp;#8217;s Angular Meetup time in Lisbon again! On February 21st we will have an
awesome talk by &lt;a href="https://twitter.com/esperancaJS"&gt;Pedro Esperança&lt;/a&gt; about the
Angular ng-cli. Pedro will also introduce you to Angular 2 in general, so this
talk target beginners and intermediate Angular hackers specifically. Don&amp;#8217;t
miss&amp;nbsp;it!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.meetup.com/AngularJS-Portugal/events/237227360/"&gt;https://www …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;It&amp;#8217;s Angular Meetup time in Lisbon again! On February 21st we will have an
awesome talk by &lt;a href="https://twitter.com/esperancaJS"&gt;Pedro Esperança&lt;/a&gt; about the
Angular ng-cli. Pedro will also introduce you to Angular 2 in general, so this
talk target beginners and intermediate Angular hackers specifically. Don&amp;#8217;t
miss&amp;nbsp;it!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.meetup.com/AngularJS-Portugal/events/237227360/"&gt;https://www.meetup.com/AngularJS-Portugal/events/237227360/&lt;/a&gt;&lt;/p&gt;</content><category term="Events"></category><category term="Angular"></category><category term="JavaScript"></category><category term="Lisbon"></category></entry><entry><title>Talk about Angular 2 at LXJS Lisbon</title><link href="https://www.peterbouda.eu/talk-about-angular-2-at-lxjs-lisbon.html" rel="alternate"></link><published>2016-10-11T14:34:00+01:00</published><updated>2016-10-11T14:34:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2016-10-11:/talk-about-angular-2-at-lxjs-lisbon.html</id><summary type="html">&lt;p&gt;Next week I will be giving a talk at the &lt;span class="caps"&gt;LXJS&lt;/span&gt; Meetup at Uniplaces in Lisbon, about
&amp;#8220;Rapid cross-platform development with Angular 2&amp;#8221;. I heard there will be a wrestling
match at the end of the event, between the React and the Angular supporters. So
join in and show your …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Next week I will be giving a talk at the &lt;span class="caps"&gt;LXJS&lt;/span&gt; Meetup at Uniplaces in Lisbon, about
&amp;#8220;Rapid cross-platform development with Angular 2&amp;#8221;. I heard there will be a wrestling
match at the end of the event, between the React and the Angular supporters. So
join in and show your superheroic Angular&amp;nbsp;powers!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.meetup.com/lxjs-lisbon/events/234442525/"&gt;https://www.meetup.com/lxjs-lisbon/events/234442525/&lt;/a&gt;&lt;/p&gt;</content><category term="Events"></category><category term="Angular"></category><category term="JavaScript"></category><category term="Lisbon"></category></entry><entry><title>Migration einer App von Angular 1 nach Angular 2</title><link href="https://www.peterbouda.eu/migration-einer-app-von-angular-1-nach-angular-2.html" rel="alternate"></link><published>2016-06-07T14:05:00+01:00</published><updated>2016-06-07T14:05:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2016-06-07:/migration-einer-app-von-angular-1-nach-angular-2.html</id><summary type="html">&lt;p&gt;Vor zwei Wochen habe ich in Lissabon einen Vortrag über &lt;a href="http://www.meetup.com/AngularJS-Portugal/events/230723687/"&gt;die Migration von Angular 1 nach Angular 2&lt;/a&gt; gehalten. Dazu habe ich eine kleine App portiert, die ich vor einiger Zeit schon als Fingerübung als Grundgerüst einer Angular-App in purer &lt;span class="caps"&gt;ES6&lt;/span&gt;-Syntax entwickelt habe. Das Hauptziel war eben jener Minimalismus …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Vor zwei Wochen habe ich in Lissabon einen Vortrag über &lt;a href="http://www.meetup.com/AngularJS-Portugal/events/230723687/"&gt;die Migration von Angular 1 nach Angular 2&lt;/a&gt; gehalten. Dazu habe ich eine kleine App portiert, die ich vor einiger Zeit schon als Fingerübung als Grundgerüst einer Angular-App in purer &lt;span class="caps"&gt;ES6&lt;/span&gt;-Syntax entwickelt habe. Das Hauptziel war eben jener Minimalismus, also ein möglichst kleiner gulp-Prozess und möglichst wenige Laufzeitabhängigkeiten. Diese App findet ihr&amp;nbsp;hier:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pbouda/angular-es6-boilerplate"&gt;https://github.com/pbouda/angular-es6-boilerplate&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Die App ist ein kleiner &lt;span class="caps"&gt;RSS&lt;/span&gt;-Feedreader, der aber letztendlich gar kein &lt;span class="caps"&gt;RSS&lt;/span&gt; lädt sondern schon eine geparste &lt;span class="caps"&gt;JSON&lt;/span&gt;-Version&amp;#8230; Also ein &lt;span class="caps"&gt;JSON&lt;/span&gt;-Feedreader&amp;nbsp;:-)&lt;/p&gt;
&lt;p&gt;Der Angular-2-Port war dann die nächste Herausforderung, weil ich weiterhin bei &lt;span class="caps"&gt;ES6&lt;/span&gt; bleiben und nicht noch TypeScript zum Projekt hinzufügen wollte. Letztendlich blieb es dann auch bei kleineren Änderungen für die ersten Schritte hin zu Angular 2, wobei die Nachforschung teilweise doch zeitintensiv war, weil viele der Online-Tutorials eben auf TyeScript&amp;nbsp;setzen.&lt;/p&gt;
&lt;p&gt;Die ersten Schritte bei der Portierung werden am Besten im Vergleich der Branches des git-Repositories sichtbar. Hier nur ein schneller Überblick, mehr Details werde ich dann in kommenden Posts&amp;nbsp;veröffentlichen.&lt;/p&gt;
&lt;p&gt;Als Erstes habe ich einfach alle Angular-2-Abhängigkeiten zum Projekt hinzugefügt, und die App&amp;nbsp;per &lt;code&gt;UpgradeAdapter&lt;/code&gt; initialisiert:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pbouda/angular-es6-boilerplate/compare/master...step1/addangular2"&gt;https://github.com/pbouda/angular-es6-boilerplate/compare/master&amp;#8230;step1/addangular2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Im Zweiten Schritt habe ich dann die&amp;nbsp;Komponente &lt;code&gt;RssFeedListComponent&lt;/code&gt; nach Angular 2 portiert und das entsprechende Template angepasst. Da Angular 2 bestimmte Syntax-Features kommender JavaScript- bzw. eben derzeitiger TypeScript-Versionen benutzt (wie &lt;a href="https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841#.v0nqw1gyr"&gt;Dekatoren&lt;/a&gt;), musste ich außerdem das&amp;nbsp;preset &lt;code&gt;anguar2&lt;/code&gt; zu meinen babelify-Setup&amp;nbsp;hinzufügen:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pbouda/angular-es6-boilerplate/compare/step1/addangular2...step2/upgradecomponent"&gt;https://github.com/pbouda/angular-es6-boilerplate/compare/step1/addangular2&amp;#8230;step2/upgradecomponent&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dabei habe ich auch jshint erst einmal entfernt, um die Sache nicht zu verkomplizieren. Alternativ hätte ich auch die Dekoratoren u.a. für jshint ausklammern können. Ich plane aber dann in Zukunft &lt;a href="http://eslint.org/"&gt;eslint&lt;/a&gt; zu benutzen, da es sich besser an den eigenen Stil anpassen&amp;nbsp;lässt.&lt;/p&gt;
&lt;p&gt;Als besondere Stolperstelle erwies sich die &amp;#8220;Rückportierung&amp;#8221; der Komponente&amp;nbsp;von &lt;code&gt;component&lt;/code&gt; nach &lt;code&gt;directive&lt;/code&gt;. Der ansonsten sehr nützliche &lt;a href="https://angular.io/docs/ts/latest/guide/upgrade.html"&gt;Angular-2-Upgrade-Guide&lt;/a&gt; empfiehlt zunächst, möglichst alle Direktiven&amp;nbsp;in &lt;code&gt;component&lt;/code&gt;-Aufrufe umzuwandeln. Jedoch lassen sich diese dann &lt;em&gt;nicht&lt;/em&gt;&amp;nbsp;per &lt;code&gt;upgradeAdapter.downgradeNg2Component&lt;/code&gt; füttern, diese Downgrades basieren weiterhin auf Direktiven. Allein damit habe ich einige Stunden verbracht, bis ich herausgefunden haben, warum meine Komponente partout nicht funktionieren&amp;nbsp;wollte&amp;#8230;&lt;/p&gt;
&lt;p&gt;Am Ende lief die App dann aber als Hybrid-Applikation sowohl mit Angular 1 als auch Angular 2, und wenn man die Problemstellen kennt bleiben die Anpassungsarbeiten bei einer solch kleinen App auch im Rahmen. Ich werde demnächst die Portierung einer Produktivanwendung in Angriff nehmen, dann werde ich sicher weitere Erkenntnisse gewinnen und euch hier&amp;nbsp;mitteilen.&lt;/p&gt;</content><category term="Angular"></category><category term="Angular"></category><category term="JavaScript"></category></entry><entry><title>Making an Angular UI Bootstrap accordion scrolling to top when opening</title><link href="https://www.peterbouda.eu/making-an-angular-ui-bootstrap-accordion-scrolling-to-top-when-opening.html" rel="alternate"></link><published>2016-05-12T11:23:00+01:00</published><updated>2016-05-12T11:23:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2016-05-12:/making-an-angular-ui-bootstrap-accordion-scrolling-to-top-when-opening.html</id><summary type="html">&lt;p&gt;I am using the &lt;a href="https://angular-ui.github.io/bootstrap/"&gt;&lt;span class="caps"&gt;UI&lt;/span&gt; Bootstrap Angular directives&lt;/a&gt;,
specifically the accordion directive, within one of our projects at &lt;span class="caps"&gt;MAJ&lt;/span&gt; Digital.
Now I was looking for a way to scroll to the top of the accordion content,
when it is too large to fit on a screen. By default, the directive …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am using the &lt;a href="https://angular-ui.github.io/bootstrap/"&gt;&lt;span class="caps"&gt;UI&lt;/span&gt; Bootstrap Angular directives&lt;/a&gt;,
specifically the accordion directive, within one of our projects at &lt;span class="caps"&gt;MAJ&lt;/span&gt; Digital.
Now I was looking for a way to scroll to the top of the accordion content,
when it is too large to fit on a screen. By default, the directive will be opened
at the middle of the content, so the user does not see the top and bottom of the
panel. A compact solution requires jQuery, for example in a directive like
the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;use strict&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * Makes the `uib-accordion-group` element scroll to top on the&lt;/span&gt;
&lt;span class="cm"&gt;     * `shown.bs.collapse` event. We use it in bootstrap accordions, when the&lt;/span&gt;
&lt;span class="cm"&gt;     * user opens one of the accordion items this directive will scroll the&lt;/span&gt;
&lt;span class="cm"&gt;     * item to the top of the screen.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;angular&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;app.shared&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;directive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;scrollTop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;restrict&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collapsing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;jqElement&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$watch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;jqElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.panel-collapse&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;hasClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;collapsing&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collapsing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;jqElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;panel-open&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;html,body&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;jqElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;20&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;500&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collapsing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can then use&amp;nbsp;the &lt;code&gt;scroll-top&lt;/code&gt; directive on&amp;nbsp;the &lt;code&gt;uib-accordion-group&lt;/code&gt;, just like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;uib-accordion-group&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;is-open=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;status.openPanel&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;scroll-top&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
...
&lt;span class="nt"&gt;&amp;lt;/uib-accordion-group&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Angular"></category><category term="Angular"></category><category term="JavaScript"></category></entry><entry><title>Talk about Angular at AngularJS Portugal</title><link href="https://www.peterbouda.eu/talk-about-angular-at-angularjs-portugal.html" rel="alternate"></link><published>2016-05-10T10:58:00+01:00</published><updated>2016-05-10T10:58:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2016-05-10:/talk-about-angular-at-angularjs-portugal.html</id><content type="html">&lt;p&gt;Next week I will be giving a talk at the AngularJS Portugal Meetup, about porting an app from Angular 1 to Angular 2. Hope to meet you&amp;nbsp;there!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.meetup.com/AngularJS-Portugal/events/230723687/"&gt;http://www.meetup.com/AngularJS-Portugal/events/230723687/&lt;/a&gt;&lt;/p&gt;</content><category term="Angular"></category><category term="Angular"></category><category term="JavaScript"></category><category term="Lisbon"></category></entry><entry><title>The current state of JavaScript ecosystem</title><link href="https://www.peterbouda.eu/the-current-state-of-javascript-ecosystem.html" rel="alternate"></link><published>2016-03-17T16:29:00+00:00</published><updated>2016-03-17T16:29:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2016-03-17:/the-current-state-of-javascript-ecosystem.html</id><summary type="html">&lt;p&gt;There is currently a lot of talk about the problems of the current JavaScript ecosystem, only sometimes there are also solutions mentioned. In general it seems there is a consensus that tooling, libraries and frameworks are changing very rapidly and it&amp;#8217;s hard to keep track with the changes and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There is currently a lot of talk about the problems of the current JavaScript ecosystem, only sometimes there are also solutions mentioned. In general it seems there is a consensus that tooling, libraries and frameworks are changing very rapidly and it&amp;#8217;s hard to keep track with the changes and choose a future-proof solution for your next project. Here are two links with a good summary of the&amp;nbsp;situation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@ericclemmons/javascript-fatigue-48d4011b6fc4#.6kwb84p07"&gt;Javascript&amp;nbsp;Fatigue&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://segment.com/blog/the-deep-roots-of-js-fatigue/"&gt;The Deep Roots of Javascript&amp;nbsp;Fatigue&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When you read the first post carefully I think it mentions one of the sources of the problem: that there was not much going on for a while. The situation was kind of stuck due to problems in the specification process, so now everybody is trying to catch up. And of course it is kind of a trend in general to always choose the latest technology whether you really know it makes sense or not. You do an online search for the best &lt;span class="caps"&gt;JS&lt;/span&gt; framework and then go with React, so React will get popular. That creates a snowball effect on its own. But the posts also have an outlook that is often mention: 2016 will be the year of consolidation, so in a few month we will have a better picture. I agree to that. Whatever happens, things will stay&amp;nbsp;interesting!&lt;/p&gt;</content><category term="JavaScript"></category><category term="JavaScript"></category></entry><entry><title>Users, Computers, and Interfaces</title><link href="https://www.peterbouda.eu/users-computers-and-interfaces.html" rel="alternate"></link><published>2015-12-13T17:43:00+00:00</published><updated>2015-12-13T17:43:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2015-12-13:/users-computers-and-interfaces.html</id><summary type="html">&lt;p&gt;&lt;em&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;[&amp;#8230;] the &lt;span class="caps"&gt;IT&lt;/span&gt; industry, software giants and online service providers are on a crusade to get rid of the word &lt;span class="caps"&gt;USER&lt;/span&gt; per se. &amp;#8216;People, not users&amp;#8217; (Don Norman). Not only users, but also Computers and Interfaces are disappearing as notion and words. Now days they are referred as Technology and Experience …&lt;/em&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;[&amp;#8230;] the &lt;span class="caps"&gt;IT&lt;/span&gt; industry, software giants and online service providers are on a crusade to get rid of the word &lt;span class="caps"&gt;USER&lt;/span&gt; per se. &amp;#8216;People, not users&amp;#8217; (Don Norman). Not only users, but also Computers and Interfaces are disappearing as notion and words. Now days they are referred as Technology and Experience. It is one of the biggest hypocrisis of our times that prevents users from seeing their computers and see themselves as a class, as a force. We are all turned into customers.&amp;#8221;&lt;/em&gt;, &lt;a href="http://www.exacteditions.com/read/neural/issue-51-46159/36/3"&gt;Oila Lialina interview, Neural Issue 51, p. 34&lt;/a&gt;.&lt;/p&gt;</content><category term="Treasures"></category><category term="Angular"></category><category term="JavaScript"></category></entry><entry><title>September Qt Drink-up Lisbon</title><link href="https://www.peterbouda.eu/september-qt-drink-up-lisbon.html" rel="alternate"></link><published>2015-09-04T17:15:00+01:00</published><updated>2015-09-04T17:15:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2015-09-04:/september-qt-drink-up-lisbon.html</id><content type="html">&lt;p&gt;Time for the next Qt Meetup Lisbon, this time it will be a casual meeting in a
beautiful&amp;nbsp;location:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.meetup.com/Qt-Meetup-Lisbon/events/225120324/"&gt;http://www.meetup.com/Qt-Meetup-Lisbon/events/225120324/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Taking place September 29th, 19:00, at the Quiosque do Miradouro de Santa
Catarina. Join in and meet the trolls of&amp;nbsp;Lisbon!&lt;/p&gt;
</content><category term="Events"></category><category term="Qt"></category></entry><entry><title>Update of Embedded Qt with Buildroot project</title><link href="https://www.peterbouda.eu/update-of-embedded-qt-with-buildroot-project.html" rel="alternate"></link><published>2015-07-28T09:23:00+01:00</published><updated>2015-07-28T09:23:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2015-07-28:/update-of-embedded-qt-with-buildroot-project.html</id><summary type="html">&lt;p&gt;I while ago I published a first version of my &lt;a class="reference external" href="https://www.peterbouda.eu/embedded-qt-with-buildroot.html"&gt;Buildroot configuration for
Embedded Qt development&lt;/a&gt;. Since then the
project evolved and there are now a few important additions&amp;nbsp;available:&lt;/p&gt;
&lt;p&gt;1) I added a helper script &lt;tt class="docutils literal"&gt;build.sh&lt;/tt&gt; to the project that starts the whole
configuration and build process. No …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I while ago I published a first version of my &lt;a class="reference external" href="https://www.peterbouda.eu/embedded-qt-with-buildroot.html"&gt;Buildroot configuration for
Embedded Qt development&lt;/a&gt;. Since then the
project evolved and there are now a few important additions&amp;nbsp;available:&lt;/p&gt;
&lt;p&gt;1) I added a helper script &lt;tt class="docutils literal"&gt;build.sh&lt;/tt&gt; to the project that starts the whole
configuration and build process. No need to enter shell commands manually
anymore! You can pass a parameter to the script, to choose a configuration.
Currently, the main purpose is to either load the configuration for the
Raspberry A/B(+) or the one for the Raspberry 2. Check the
&lt;span class="caps"&gt;README&lt;/span&gt; how it&amp;nbsp;works.&lt;/p&gt;
&lt;p&gt;2) I added a first test configuration that uses systemd as init system. I am now
using systemd in my project &lt;a class="reference external" href="http://brummbeere.readthedocs.org/"&gt;Die Brummbeere&lt;/a&gt;
to be able to set a dependency on network access before I start the app, and
thought that it makes sense to make the configuration available. The
configuration just uses the standard setup of systemd on Buildroot. You can
use the systemd configuration via passing an option to the &lt;tt class="docutils literal"&gt;build.sh&lt;/tt&gt; script
or manully load it in Buildroot as explained in the &lt;span class="caps"&gt;README&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;3) I added support for remote deployment via Qt Creator. I had to change from
the Dropbear &lt;span class="caps"&gt;SSH&lt;/span&gt; server to OpenSSH for that, as for some reason Qt Creator just
could not copy files to the Raspberry via Dropbear. Now everything works and
I added a chapter with the setup process in Qt Creator to the &lt;span class="caps"&gt;README&lt;/span&gt;. With
screenshots and everything, to make it easy for everyone to use remote&amp;nbsp;deployment.&lt;/p&gt;
&lt;p&gt;And here is the&amp;nbsp;repository:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/buildroot-qt-dev"&gt;https://github.com/pbouda/buildroot-qt-dev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Happy embedded&amp;nbsp;development!&lt;/p&gt;
</content><category term="Embedded"></category><category term="Qt"></category><category term="Buildroot"></category></entry><entry><title>Video: Die Brummbeere in Action</title><link href="https://www.peterbouda.eu/video-die-brummbeere-in-action.html" rel="alternate"></link><published>2015-07-03T12:31:00+01:00</published><updated>2015-07-03T12:31:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2015-07-03:/video-die-brummbeere-in-action.html</id><content type="html">&lt;p&gt;Watch Die Brummbeere in action. More&amp;nbsp;info:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://brummbeere.readthedocs.org/en/latest/"&gt;http://brummbeere.readthedocs.org/en/latest/&lt;/a&gt;&lt;/p&gt;
</content><category term="Videos"></category><category term="Qt"></category><category term="Brummbeere"></category><category term="Buildroot"></category><category term="Raspberry"></category></entry><entry><title>First Qt Meetup Lisbon</title><link href="https://www.peterbouda.eu/first-qt-meetup-lisbon.html" rel="alternate"></link><published>2015-07-03T10:04:00+01:00</published><updated>2015-07-03T10:04:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2015-07-03:/first-qt-meetup-lisbon.html</id><summary type="html">&lt;p&gt;Will you be in Lisbon midth of July and want to learn more about Qt on embedded devices? Then come to the first Qt Meetup Lisbon on July 14th, 19:00h at Startup Campus powered by Banif. I will give a talk about using Buildroot for Embedded Qt development. You …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Will you be in Lisbon midth of July and want to learn more about Qt on embedded devices? Then come to the first Qt Meetup Lisbon on July 14th, 19:00h at Startup Campus powered by Banif. I will give a talk about using Buildroot for Embedded Qt development. You can find more info about the Meetup&amp;nbsp;here:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.meetup.com/de/Qt-Meetup-Lisbon/events/223329154/"&gt;http://www.meetup.com/de/Qt-Meetup-Lisbon/events/223329154/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Join in and meet the trolls of&amp;nbsp;Lisbon!&lt;/p&gt;
</content><category term="Events"></category><category term="Qt"></category><category term="Buildroot"></category></entry><entry><title>Embedded Qt with Buildroot</title><link href="https://www.peterbouda.eu/embedded-qt-with-buildroot.html" rel="alternate"></link><published>2015-06-03T17:04:00+01:00</published><updated>2015-06-03T17:04:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2015-06-03:/embedded-qt-with-buildroot.html</id><summary type="html">&lt;p&gt;I already posted about my project &lt;a class="reference external" href="https://www.peterbouda.eu/die-brummbeere-an-embedded-owncloud-music-player.html"&gt;Die Brummbeere&lt;/a&gt;,
an ownCloud music player built with Qt. For the development on the Raspberry,
I am heavily dependent on &lt;a class="reference external" href="http://buildroot.net/"&gt;Buildroot&lt;/a&gt;, which is an
awesome project to quickly build your own Linux system with customized libraries
and applications. Qt5 is part of the packages …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I already posted about my project &lt;a class="reference external" href="https://www.peterbouda.eu/die-brummbeere-an-embedded-owncloud-music-player.html"&gt;Die Brummbeere&lt;/a&gt;,
an ownCloud music player built with Qt. For the development on the Raspberry,
I am heavily dependent on &lt;a class="reference external" href="http://buildroot.net/"&gt;Buildroot&lt;/a&gt;, which is an
awesome project to quickly build your own Linux system with customized libraries
and applications. Qt5 is part of the packages provided by Buildroot, but it
still took me a while to figure out all the dependencies that I need to have
OpenGL support, build a usable Qt multimedia module and get network access with
&lt;span class="caps"&gt;SSL&lt;/span&gt;/&lt;span class="caps"&gt;TLS&lt;/span&gt; support. I thought that this setup might be intersting to others and
extracted the basic configuration from the Die Brummbeere project and created
a seperate Buildroot project that just compiles Qt, with support for remote
deployment in Qt Creator via &lt;span class="caps"&gt;SSH&lt;/span&gt;. In the end it&amp;#8217;s just a Buildroot configuration
files and a few simple scripts. Oh, and a &lt;span class="caps"&gt;README&lt;/span&gt;, of course :-) It&amp;#8217;s available
on&amp;nbsp;GitHub:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/buildroot-qt-dev"&gt;https://github.com/pbouda/buildroot-qt-dev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let me know if you think this is&amp;nbsp;useful!&lt;/p&gt;
</content><category term="Embedded"></category><category term="Qt"></category><category term="Buildroot"></category></entry><entry><title>Building scons packages with buildroot</title><link href="https://www.peterbouda.eu/building-scons-packages-with-buildroot.html" rel="alternate"></link><published>2015-05-25T12:13:00+01:00</published><updated>2015-05-25T12:13:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2015-05-25:/building-scons-packages-with-buildroot.html</id><summary type="html">&lt;p&gt;For my hardware project &lt;a class="reference external" href="http://brummbeere.readthedocs.org/en/latest/"&gt;Die Brummbeere&lt;/a&gt; I started to work with
buildroot a lot. For sound visualization in Die Brummbeere I wanted to use
&lt;a class="reference external" href="https://github.com/alex-berman/sonotopy"&gt;the sonotopy library&lt;/a&gt;, and use my
existing buildroot toolchain to compile it for the Raspberry. Unfortunately, it
didn&amp;#8217;t work out of the box. First, it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For my hardware project &lt;a class="reference external" href="http://brummbeere.readthedocs.org/en/latest/"&gt;Die Brummbeere&lt;/a&gt; I started to work with
buildroot a lot. For sound visualization in Die Brummbeere I wanted to use
&lt;a class="reference external" href="https://github.com/alex-berman/sonotopy"&gt;the sonotopy library&lt;/a&gt;, and use my
existing buildroot toolchain to compile it for the Raspberry. Unfortunately, it
didn&amp;#8217;t work out of the box. First, it was not quite clear how to build scons
for the host, but a quick search for scons and buildroot led me&amp;nbsp;to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;host-scons
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After that I started to create my own package for sonotopy based on the
information in the buildroot documentation. I added a &lt;tt class="docutils literal"&gt;Config.in&lt;/tt&gt; and
&lt;tt class="docutils literal"&gt;sonotopy.mk&lt;/tt&gt; file that I copied from another scons-based package in buildroot
(benejson) and modified them, but without luck. My &lt;tt class="docutils literal"&gt;Config.in&lt;/tt&gt; contains:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;config BR2_PACKAGE_SONOTOPY
             bool &amp;quot;sonotopy&amp;quot;
             select HOST_SCONS
             depeds on BR2_PACKAGE_FFTW
             help
                     Sonotopy is a C++ library for perceptually analyzing the contents of
                     an acoustic signal in real time.

                     https://github.com/alex-berman/sonotopy
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;My &lt;tt class="docutils literal"&gt;sonotopy.mk&lt;/tt&gt; is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;################################################################################
#
# sonotopy
#
################################################################################

SONOTOPY_VERSION = master
SONOTOPY_SOURCE = master.tar.gz
SONOTOPY_SITE = https://github.com/pbouda/sonotopy/archive/
SONOTOPY_LICENSE = GPLv3+
SONOTOPY_LICENSE_FILES = LICENSE
SONOTOPY_INSTALL_STAGING = YES
SONOTOPY_DEPENDENCIES = host-scons

define SONOTOPY_BUILD_CMDS
        (cd $(@D); \
                $(TARGET_CONFIGURE_OPTS) CROSS=$(TARGET_CROSS) \
                $(SCONS))
endef

define SONOTOPY_INSTALL_STATIC_LIB
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/sonotopy.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/sonotopy.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/AudioParameters.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/AudioParameters.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/BeatTracker.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/BeatTracker.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/CircleMap.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/CircleMap.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/CircleMapParameters.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/CircleMapParameters.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/CircleTopology.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/CircleTopology.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/CircularBuffer.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/CircularBuffer.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/DisjointGridMap.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/DisjointGridMap.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/DisjointGridTopology.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/DisjointGridTopology.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/EventDetector.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/EventDetector.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/GridMap.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/GridMap.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/GridMapParameters.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/GridMapParameters.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/Normalizer.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/Normalizer.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/Random.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/Random.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/RectGridTopology.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/RectGridTopology.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/Smoother.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/Smoother.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/SOM.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/SOM.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/SpectrumAnalyzer.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/SpectrumAnalyzer.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/SpectrumAnalyzerParameters.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/SpectrumAnalyzerParameters.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/SpectrumBinDivider.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/SpectrumBinDivider.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/SpectrumMap.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/SpectrumMap.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/SpectrumMapParameters.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/SpectrumMapParameters.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/Stopwatch.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/Stopwatch.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/Topology.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/Topology.hpp; \
        $(INSTALL) -D -m 0644 $(@D)/include/sonotopy/TwoDimArray.hpp \
                $(STAGING_DIR)/usr/include/sonotopy/TwoDimArray.hpp
        $(INSTALL) -D -m 0644 $(@D)/build/release/src/libsonotopy.a \
                $(1)/usr/lib/libsonotopy.a
endef

define SONOTOPY_INSTALL_STAGING_CMDS
        $(call SONOTOPY_INSTALL_STATIC_LIB,$(STAGING_DIR))
endef

$(eval $(generic-package))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The package compiles fine, but the architecture of resulting binary file is that
of my host, and not of my target (the Raspberry). Luckily, I got some help on
the buildroot &lt;span class="caps"&gt;IRC&lt;/span&gt; channel. I had to still modify sonotopy&amp;#8217;s &lt;tt class="docutils literal"&gt;SConstruct&lt;/tt&gt; file,
so that it uses the &lt;tt class="docutils literal"&gt;&lt;span class="caps"&gt;CROSS&lt;/span&gt;&lt;/tt&gt; environment variable to set the correct compiler
and linker&amp;nbsp;variables:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;CROSS&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cross&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CROSS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CROSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cross&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cross&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;gcc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CXX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cross&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;g++&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cross&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ld&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now sonotopy compiled fine and I could use it in my projects on the Raspberry.
To try it out you may just use my own fork of sonotopy on&amp;nbsp;GitHub:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/sonotopy"&gt;https://github.com/pbouda/sonotopy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sonotopy comes with a few examples with requirements that I didn&amp;#8217;t want to
compile for my project. I already have Qt with audio input and output, so I
build a little Qt project to visualize the GridMap calculations of sonotopy
in a &lt;span class="caps"&gt;QML&lt;/span&gt; view. The project is called Sonobeere, the current tree with the
GridMap example is on&amp;nbsp;GitHub:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/sonobeere/tree/5a6efd0275cea9f4dd1c3920def19766663b0f8f"&gt;https://github.com/pbouda/sonobeere/tree/5a6efd0275cea9f4dd1c3920def19766663b0f8f&lt;/a&gt;&lt;/p&gt;
</content><category term="Embedded"></category><category term="Buildroot"></category><category term="Scons"></category><category term="Qt"></category></entry><entry><title>Die Brummbeere: an embedded ownCloud music player</title><link href="https://www.peterbouda.eu/die-brummbeere-an-embedded-owncloud-music-player.html" rel="alternate"></link><published>2015-05-04T11:47:00+01:00</published><updated>2015-05-04T11:47:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2015-05-04:/die-brummbeere-an-embedded-owncloud-music-player.html</id><summary type="html">&lt;p&gt;I recently &lt;a class="reference external" href="https://www.peterbouda.eu/twomusic-open-source-audio-player-for-owncloud.html"&gt;published here a short post&lt;/a&gt; about
TwoMusic, an open source music player for ownCloud. As I got interested in
embedded systems and embedded development the last few weeks, I turned the
player into a project for the Raspberry and other boards that run Linux. My
first goal was …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently &lt;a class="reference external" href="https://www.peterbouda.eu/twomusic-open-source-audio-player-for-owncloud.html"&gt;published here a short post&lt;/a&gt; about
TwoMusic, an open source music player for ownCloud. As I got interested in
embedded systems and embedded development the last few weeks, I turned the
player into a project for the Raspberry and other boards that run Linux. My
first goal was to boot directly into a minimal Linux system that supports Qt and
its multimedia module. The book &amp;#8220;&lt;a class="reference external" href="http://www.amazon.de/gp/product/386490143X/ref=as_li_tl?ie=UTF8&amp;amp;camp=1638&amp;amp;creative=6742&amp;amp;creativeASIN=386490143X&amp;amp;linkCode=as2&amp;amp;tag=jsusde-21&amp;amp;linkId=BJJLZYFHUKSX4EHC"&gt;Embedded Linux lernen mit dem Raspberry Pi&lt;/a&gt;&amp;#8221;
was a very helpful introduction about the whole procedure, and I recommend it
to anyone who reads&amp;nbsp;German.&lt;/p&gt;
&lt;p&gt;In the end I came up with my first embedded Linux system that boots the Qt
music player with touch screen support. To reflect the focus on embedded
platforms and especially the Raspberry I changed the project name to &amp;#8220;Die
Brummbeere&amp;#8221;. The documentation of the project on GitHub now contains a longer
description about &lt;a class="reference external" href="http://brummbeere.readthedocs.org/en/latest/raspi.html"&gt;how to build your own embedded system&lt;/a&gt; that boots Die
Brummbeere, so I won&amp;#8217;t go into details here. As a summary, with all the work
that is done around Linux, the Raspberry, Qt and buildroot, it was amazingly
easy to build your own embedded device. I really felt like on the shoulders of
giants during the development of the project and hope to be able to give back
in the&amp;nbsp;future&amp;#8230;&lt;/p&gt;
&lt;p&gt;Die Brummbeere still runs on desktop computers (and probably mobile phones), but
the user interface does not really integrate into anything existing. My goal
over the next weeks is to understand the cross-platform opportunities of Qt
regarding user interfaces better. Maybe develop some kind of responsive approach
to Qt GUIs that allows to share most of the &lt;span class="caps"&gt;QML&lt;/span&gt; code. I really like what
&lt;a class="reference external" href="http://techcrunch.com/2015/04/29/microsoft-announces-continuum-turning-windows-10-phones-into-desktops/"&gt;Microsoft presented as their Continuum approach&lt;/a&gt;,
I am very curious how you could mimic that with&amp;nbsp;Qt.&lt;/p&gt;
</content><category term="Qt"></category><category term="Qt"></category><category term="Embedded"></category><category term="IoT"></category><category term="ownCloud"></category><category term="Music"></category></entry><entry><title>IndieWeb Update</title><link href="https://www.peterbouda.eu/indieweb-update.html" rel="alternate"></link><published>2015-03-20T09:50:00+00:00</published><updated>2015-03-20T09:50:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2015-03-20:/indieweb-update.html</id><summary type="html">&lt;p&gt;I changed the way I receive &lt;a class="reference external" href="http://indiewebcamp.com/webmention"&gt;webmentions&lt;/a&gt; last week, and could finally test it yesterday together with &lt;a class="reference external" href="https://microblog.pierre-o.fr/2015/and-now-you-have-one"&gt;Pierre&lt;/a&gt; at the Internet Freedom Lisbon Meetup. It worked :-). I want to stay as static as possible with my website, so I chose to use &lt;a class="reference external" href="https://webmention.io"&gt;webmention.io&lt;/a&gt; as service within a static &lt;a class="reference external" href="http://docs.getpelican.com/en/3.5.0/"&gt;pelican …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I changed the way I receive &lt;a class="reference external" href="http://indiewebcamp.com/webmention"&gt;webmentions&lt;/a&gt; last week, and could finally test it yesterday together with &lt;a class="reference external" href="https://microblog.pierre-o.fr/2015/and-now-you-have-one"&gt;Pierre&lt;/a&gt; at the Internet Freedom Lisbon Meetup. It worked :-). I want to stay as static as possible with my website, so I chose to use &lt;a class="reference external" href="https://webmention.io"&gt;webmention.io&lt;/a&gt; as service within a static &lt;a class="reference external" href="http://docs.getpelican.com/en/3.5.0/"&gt;pelican&lt;/a&gt; site. Maybe I&amp;#8217;ll have a deeper look into &lt;a class="reference external" href="https://bear.im/bearlog/2015/005/indieweb-example-python-flask-app"&gt;the Indieweb Example Python Flask App&lt;/a&gt; to run everything on my server, as I already have another Flask app running there anyway. Good to see the IndieWeb technology&amp;nbsp;growing!&lt;/p&gt;
</content><category term="Treasures"></category><category term="Indie"></category><category term="IndieWeb"></category></entry><entry><title>TwoMusic: Open Source audio player for ownCloud</title><link href="https://www.peterbouda.eu/twomusic-open-source-audio-player-for-owncloud.html" rel="alternate"></link><published>2015-03-17T08:30:00+00:00</published><updated>2015-03-17T08:30:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2015-03-17:/twomusic-open-source-audio-player-for-owncloud.html</id><summary type="html">&lt;p&gt;I started to work a new Qt application recently, a music player for ownCloud. It is very similar to my &amp;#8220;Music In The Sky&amp;#8221; Windows Phone app, the main difference is that it loads your music from ownCloud instead of OneDrive. The main feature still is the folder navigation, so …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I started to work a new Qt application recently, a music player for ownCloud. It is very similar to my &amp;#8220;Music In The Sky&amp;#8221; Windows Phone app, the main difference is that it loads your music from ownCloud instead of OneDrive. The main feature still is the folder navigation, so now library or whatever is build from your music. I still prefer to have my own structure for my music, without any library, so basically the player is built for my own needs. The app is published under the &lt;span class="caps"&gt;GPL&lt;/span&gt; v2, and if you know how to compile Qt application you may already find it usable&amp;#8230; There is still a lot to improve, but my focus is now on how to run this app on different platforms. I am very curious to see how easy/difficult it is to adapt a modern, &lt;span class="caps"&gt;QML&lt;/span&gt;-based app to all kinds of mobile and desktop environments. Here is the Github&amp;nbsp;link:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/twomusic"&gt;https://github.com/pbouda/twomusic&lt;/a&gt;&lt;/p&gt;
</content><category term="Qt"></category><category term="Qt"></category><category term="Apps"></category><category term="Music"></category></entry><entry><title>Mark Fisher über kulturellen Fortschritt</title><link href="https://www.peterbouda.eu/mark-fisher-uber-kulturellen-fortschritt.html" rel="alternate"></link><published>2015-03-05T15:20:00+00:00</published><updated>2015-03-05T15:20:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2015-03-05:/mark-fisher-uber-kulturellen-fortschritt.html</id><summary type="html">&lt;p&gt;Interessantes Zitat aus einem &lt;a class="reference external" href="http://www.zeit.de/2015/07/kuenstliche-intelligenz-mark-fisher"&gt;Zeit-Artikel über Mark Fisher&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
Fishers These: Während die technologische Entwicklung durch das Internet und die zugehörigen Kommunikationsgeräte einer schwer begreiflichen Beschleunigung unterliegt, hat der kulturelle Fortschritt sich bis zum Stillstand verlangsamt. Schleichend ist die Idee des Neuen, wie sie die Avantgarden des 20. Jahrhunderts prägte, aus …&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Interessantes Zitat aus einem &lt;a class="reference external" href="http://www.zeit.de/2015/07/kuenstliche-intelligenz-mark-fisher"&gt;Zeit-Artikel über Mark Fisher&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
Fishers These: Während die technologische Entwicklung durch das Internet und die zugehörigen Kommunikationsgeräte einer schwer begreiflichen Beschleunigung unterliegt, hat der kulturelle Fortschritt sich bis zum Stillstand verlangsamt. Schleichend ist die Idee des Neuen, wie sie die Avantgarden des 20. Jahrhunderts prägte, aus dem zeitgenössischen Denken verschwunden – bis hin zu jenem Zustand, den wir Postmoderne zu nennen pflegen, Fisher zufolge eine ebenso euphemistische wie hilflose Umschreibung für den Sachverhalt, dass die Vorstellung von Zukunft auf die Präsentation des jeweils neuesten Smartphones zusammengeschrumpft ist.&lt;/blockquote&gt;
</content><category term="Treasures"></category><category term="Philosophy"></category><category term="Culture"></category></entry><entry><title>Update für die OpenGL-Renderschleife in PyQt</title><link href="https://www.peterbouda.eu/update-fur-die-opengl-renderschleife-in-pyqt.html" rel="alternate"></link><published>2015-01-30T11:00:00+00:00</published><updated>2015-01-30T11:00:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2015-01-30:/update-fur-die-opengl-renderschleife-in-pyqt.html</id><summary type="html">&lt;p&gt;Ich versuche gerade mich in das Thema Raytraching bzw. Raymarching einzuarbeiten. Dabei bin wieder auf mein Qt-OpenGL-Programmgerüst zurückgekommen, dass ich in &lt;a class="reference external" href="https://www.peterbouda.eu/revisiting-pyqt-and-opengl.html"&gt;einem meiner letzten Artikel&lt;/a&gt; beschrieben habe. Leider hat das Skript nicht auf Anhieb auf einem neuen Rechner funktioniert, was ich auf unterschiedliche Implementierungen der OpenGL-Bibliothek in Qt oder gar …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ich versuche gerade mich in das Thema Raytraching bzw. Raymarching einzuarbeiten. Dabei bin wieder auf mein Qt-OpenGL-Programmgerüst zurückgekommen, dass ich in &lt;a class="reference external" href="https://www.peterbouda.eu/revisiting-pyqt-and-opengl.html"&gt;einem meiner letzten Artikel&lt;/a&gt; beschrieben habe. Leider hat das Skript nicht auf Anhieb auf einem neuen Rechner funktioniert, was ich auf unterschiedliche Implementierungen der OpenGL-Bibliothek in Qt oder gar den Grafiktreiber zurückführe. Bestimme von mir verwendete Befehle erzeugten Fehlermeldungen, u.a. konnte ich das OpenGL-Viereck für das Fraktal nicht per &lt;tt class="docutils literal"&gt;QL_QUADS&lt;/tt&gt; zeichnen. Ich habe also das Programmgerüst etwas angepasst und auf reine OpenGL &lt;span class="caps"&gt;ES&lt;/span&gt; 2.0 Befehle reduziert. Statt einem Viereck zeichne ich jetzt zwei Dreiecke, die ich per &lt;em&gt;Vertex Array&lt;/em&gt; übergebe. Ich benutze dafür die Methode &lt;tt class="docutils literal"&gt;glDrawElements()&lt;/tt&gt;, der ich die Indizes auf die einzelnen Dreickspunkte im &lt;em&gt;Vertex Array&lt;/em&gt; übergebe. Die &lt;tt class="docutils literal"&gt;render&lt;/tt&gt;-Schleife sieht jetzt in etwa folgendermaßen&amp;nbsp;aus:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glViewport&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glClear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GL_COLOR_BUFFER_BIT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;program&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;vertices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
     &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;indices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;B&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glEnableVertexAttribArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vAttr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glVertexAttribPointer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vAttr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GL_FLOAT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GL_FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glDrawElements&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GL_TRIANGLES&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GL_UNSIGNED_BYTE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indices&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glDisableVertexAttribArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vAttr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;program&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;release&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Diese Gerüst eignet sich damit auch hervorragend für erste Raymarching-Experimente, da letztendlich wiederum nur ein simples Viereck mit den Eckpunkten &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;[-1,&lt;/span&gt; &lt;span class="pre"&gt;-1]&lt;/span&gt;&lt;/tt&gt; und &lt;tt class="docutils literal"&gt;[1, 1]&lt;/tt&gt; gezeichnet wird. In dieses hinein lassen sich dann per Shader Fraktale oder eben Raytracing-Objekte zeichen. Allgemein scheint PyQt eine schöne Umgebung für Shader-Experimente zu sein, wie ich immer wieder festestellen muss. Mit dem Programmgerüst kann man schnell die Shader sowie deren Input und Output modifizieren. Der Screenshot oben basiert auf den Shadern des &lt;a class="reference external" href="http://www.iquilezles.org/www/material/isystem1k4k/isystem1k4k.htm"&gt;4k-Intro-Frameworks von iquilezles.org&lt;/a&gt;, eine fantastische Website zum Thema Grafikprogrammierung und &lt;a class="reference external" href="http://www.iquilezles.org/www/articles/distfunctions/distfunctions.htm"&gt;interessanten Artikeln zum Thema Raymarching&lt;/a&gt;. Hier ist noch der Link zu meinem aktuellen Experiment, das die oben abgebildete Kugel rendert, und das die OpenGL-Renderschleife in Aktion&amp;nbsp;zeigt:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/stuff/blob/master/opengl/pyqt/raymarching.py"&gt;https://github.com/pbouda/stuff/blob/master/opengl/pyqt/raymarching.py&lt;/a&gt;&lt;/p&gt;
</content><category term="Graphics"></category><category term="PyQt"></category><category term="OpenGL"></category><category term="Raymarching"></category></entry><entry><title>IndieWeb</title><link href="https://www.peterbouda.eu/indieweb.html" rel="alternate"></link><published>2014-08-05T20:31:00+01:00</published><updated>2014-08-05T20:31:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2014-08-05:/indieweb.html</id><content type="html">&lt;p&gt;This blog is now part of the &lt;a class="reference external" href="http://indiewebcamp.com/"&gt;IndieWeb&lt;/a&gt;, &amp;#8220;a people-focused alternative to the &amp;#8216;corporate web&amp;#8217;&amp;#8221;. I am sitting here with &lt;a class="reference external" href="http://www.pierre-o.fr/blog/2014/07/30/indieweb/"&gt;Pierre Ozoux&lt;/a&gt; in front of the café &amp;#8220;i legal&amp;#8221;, Alfama, Lisbon at at meetup of the &lt;a class="reference external" href="http://www.meetup.com/Internet-Freedom-Lisbon/events/197769702/"&gt;Internet Freedom Lisbon&lt;/a&gt;, setting up IndieWeb blogs and translating free software&amp;nbsp;sites.&lt;/p&gt;
</content><category term="Treasures"></category><category term="Indie"></category><category term="IndieWeb"></category></entry><entry><title>Revisiting PyQt and OpenGL</title><link href="https://www.peterbouda.eu/revisiting-pyqt-and-opengl.html" rel="alternate"></link><published>2014-07-23T10:00:00+01:00</published><updated>2014-07-23T10:00:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2014-07-23:/revisiting-pyqt-and-opengl.html</id><summary type="html">&lt;p&gt;It&amp;#8217;s been I while since I used OpenGL with PyQt, for example in my &lt;a class="reference external" href="https://www.peterbouda.eu/live-coding-glsl-shaders-with-ipython.html"&gt;live coding experiments with &lt;span class="caps"&gt;GLSL&lt;/span&gt; shaders&lt;/a&gt;. Those were still done with PyQt4 and the good old &lt;tt class="docutils literal"&gt;QGLWidget&lt;/tt&gt;. In Qt5 the preferred way to render in OpenGL canvases is to use the new &lt;tt class="docutils literal"&gt;QOpenGL*&lt;/tt&gt; classes. Those …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It&amp;#8217;s been I while since I used OpenGL with PyQt, for example in my &lt;a class="reference external" href="https://www.peterbouda.eu/live-coding-glsl-shaders-with-ipython.html"&gt;live coding experiments with &lt;span class="caps"&gt;GLSL&lt;/span&gt; shaders&lt;/a&gt;. Those were still done with PyQt4 and the good old &lt;tt class="docutils literal"&gt;QGLWidget&lt;/tt&gt;. In Qt5 the preferred way to render in OpenGL canvases is to use the new &lt;tt class="docutils literal"&gt;QOpenGL*&lt;/tt&gt; classes. Those have the advantage that they provide a full collection of OpenGL drawing functions, so it is not necessary to import any external OpenGL library (like PyOpenGL) anymore. The disadvantage is that there is currently no convenient way to create and initialize such a window with a nice render function, as was provided by the &lt;tt class="docutils literal"&gt;QGLWidget&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;I finally collected some code from the PyQt5 OpenGL examples and with some modification I was able to run it (&lt;a class="reference external" href="https://github.com/baoboa/pyqt5/blob/master/examples/opengl/openglwindow.py"&gt;from the snapshot of PyQt5 on Github&lt;/a&gt;). Their class &lt;tt class="docutils literal"&gt;OpenGLWindow&lt;/tt&gt; provides what you need for the first steps, you can just subclass it and add your code to your own &lt;tt class="docutils literal"&gt;render()&lt;/tt&gt; function. I added some more interesting shaders from &lt;a class="reference external" href="http://www.iquilezles.org/www/material/nvscene2008/rwwtt.pdf"&gt;here&lt;/a&gt;, et voilà le&amp;nbsp;chocolat:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/stuff/blob/master/opengl/pyqt/chocolux.py"&gt;https://github.com/pbouda/stuff/blob/master/opengl/pyqt/chocolux.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Time to connect this with some live&amp;nbsp;coding&amp;#8230;&lt;/p&gt;
</content><category term="Graphics"></category><category term="PyQt"></category><category term="OpenGL"></category></entry><entry><title>Live Coding with Kivy and IPython</title><link href="https://www.peterbouda.eu/live-coding-with-kivy-and-ipython.html" rel="alternate"></link><published>2014-07-02T10:00:00+01:00</published><updated>2014-07-02T10:00:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2014-07-02:/live-coding-with-kivy-and-ipython.html</id><summary type="html">&lt;p&gt;I recently began to implement some game prototypes with the help of &lt;a class="reference external" href="http://kivy.org/"&gt;Kivy&lt;/a&gt;, a very interesting Python library originally developed to prototype innovative user interfaces. Combined with IPython, Kivy could also be interesting for &lt;a class="reference external" href="https://www.peterbouda.eu/live-coding-glsl-shaders-with-ipython.html"&gt;live coding&lt;/a&gt;, and so I checked out how the &lt;a class="reference external" href="http://minrk.github.io/ipython-doc/dev/api/generated/IPython.lib.inputhook.html"&gt;input hooks for other event loops&lt;/a&gt; work …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently began to implement some game prototypes with the help of &lt;a class="reference external" href="http://kivy.org/"&gt;Kivy&lt;/a&gt;, a very interesting Python library originally developed to prototype innovative user interfaces. Combined with IPython, Kivy could also be interesting for &lt;a class="reference external" href="https://www.peterbouda.eu/live-coding-glsl-shaders-with-ipython.html"&gt;live coding&lt;/a&gt;, and so I checked out how the &lt;a class="reference external" href="http://minrk.github.io/ipython-doc/dev/api/generated/IPython.lib.inputhook.html"&gt;input hooks for other event loops&lt;/a&gt; work in IPython. Currently, there are hooks for Qt, glut, pyglet, &lt;span class="caps"&gt;GTK&lt;/span&gt;, wx and tk build in. That means that you can use any of those frameworks to develop &lt;span class="caps"&gt;GUI&lt;/span&gt; apps interactively from within an IPython&amp;nbsp;shell.&lt;/p&gt;
&lt;p&gt;For Kivy, I copied one of the existing hooks and came up with the following&amp;nbsp;code:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/stuff/blob/master/kivy_livecode/helpers.py"&gt;https://github.com/pbouda/stuff/blob/master/kivy_livecode/helpers.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The function &lt;tt class="docutils literal"&gt;enable_kivy()&lt;/tt&gt; would return an Kivy &lt;tt class="docutils literal"&gt;app&lt;/tt&gt; object that you can then use to add widget interactively. Just start an IPython shell and add a rectangle to a Kivy window, for&amp;nbsp;example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;helpers&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;helpers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enable_kivy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kivy.graphics&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Rectangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;850&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately, you have to patch the Kivy sources to run in interactive mode at the moment. Kivy has a so-called &lt;tt class="docutils literal"&gt;slave&lt;/tt&gt; mode, but it is not available when you call the default &lt;tt class="docutils literal"&gt;run()&lt;/tt&gt; method on the &lt;tt class="docutils literal"&gt;App&lt;/tt&gt; object. Here is a simple patch that just pipes the &lt;tt class="docutils literal"&gt;slave&lt;/tt&gt; parameter to the &lt;tt class="docutils literal"&gt;runcTouchApp()&lt;/tt&gt; method and will allow you to start the Kivy app in slave&amp;nbsp;mode:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/kivy/commit/e1659dea1986f4a6006193d697c86d3694652cc1"&gt;https://github.com/pbouda/kivy/commit/e1659dea1986f4a6006193d697c86d3694652cc1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Have&amp;nbsp;fun!&lt;/p&gt;
</content><category term="Python"></category><category term="Kivy"></category><category term="IPython"></category><category term="Live Coding"></category></entry><entry><title>Video: Open Source Technologies for Language Diversity</title><link href="https://www.peterbouda.eu/video-open-source-technologies-for-language-diversity.html" rel="alternate"></link><published>2014-06-29T11:29:00+01:00</published><updated>2014-06-29T11:29:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2014-06-29:/video-open-source-technologies-for-language-diversity.html</id><content type="html">&lt;p&gt;Our talk at Codebits&amp;nbsp;2014.&lt;/p&gt;
</content><category term="Videos"></category><category term="Poio"></category></entry><entry><title>The Spelling Loom: a word game for Minderico</title><link href="https://www.peterbouda.eu/the-spelling-loom-a-word-game-for-minderico.html" rel="alternate"></link><published>2014-05-12T11:22:00+01:00</published><updated>2014-05-12T11:22:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2014-05-12:/the-spelling-loom-a-word-game-for-minderico.html</id><summary type="html">&lt;p&gt;An event that I try to to visit every year here in Portugal is
&lt;a class="reference external" href="https://codebits.eu/"&gt;Codebits&lt;/a&gt;. The core of it is a 48h coding competition,
in which teams develop a new and creative idea during Codebits and present it
on a big stage at the end of the event. The audience …&lt;/p&gt;</summary><content type="html">&lt;p&gt;An event that I try to to visit every year here in Portugal is
&lt;a class="reference external" href="https://codebits.eu/"&gt;Codebits&lt;/a&gt;. The core of it is a 48h coding competition,
in which teams develop a new and creative idea during Codebits and present it
on a big stage at the end of the event. The audience and a jury selects
the best projects after the presentation. This year I had the idea to develop
a word game that would teach
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Minderico_language"&gt;Minderico&lt;/a&gt; vocabulary to
kids. The user interface was inspired by traditional textile
production in Minde, which is still done on weaving looms. The final game is
about patterns: in language, textile and music. The user literally weaves the
solution to build a pattern that is then transformed into sound. The idea
was quite a success, as Microsoft selected us as GameDev VIPs at the beginning
of the event, and in the end we won the 1st prize of the&amp;nbsp;audience!&lt;/p&gt;
&lt;p&gt;What you can seen here is the first version, a prototype, which I want to finish
over the next week and then pulblish as open&amp;nbsp;source.&lt;/p&gt;
</content><category term="Videos"></category><category term="HCI"></category></entry><entry><title>Visualizing Swadesh words in dictionaries</title><link href="https://www.peterbouda.eu/visualizing-swadesh-words-in-dictionaries.html" rel="alternate"></link><published>2014-02-14T11:29:00+00:00</published><updated>2014-02-14T11:29:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2014-02-14:/visualizing-swadesh-words-in-dictionaries.html</id><summary type="html">&lt;div class="section" id="swadesh-viewer-for-dictionary-data"&gt;
&lt;h2&gt;Swadesh viewer for dictionary&amp;nbsp;data&lt;/h2&gt;
&lt;p&gt;In this tutorial we will demonstrate how to extract entries that contain
words from a &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Swadesh_list"&gt;Swadesh
list&lt;/a&gt; from data in
digitized dictionaries. The translation graph connects entries in
dioctionaries, via annotation for &amp;#8220;heads&amp;#8221; and &amp;#8220;translations&amp;#8221; within the
dictionary. We will demonstrate how to visualize this …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="swadesh-viewer-for-dictionary-data"&gt;
&lt;h2&gt;Swadesh viewer for dictionary&amp;nbsp;data&lt;/h2&gt;
&lt;p&gt;In this tutorial we will demonstrate how to extract entries that contain
words from a &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Swadesh_list"&gt;Swadesh
list&lt;/a&gt; from data in
digitized dictionaries. The translation graph connects entries in
dioctionaries, via annotation for &amp;#8220;heads&amp;#8221; and &amp;#8220;translations&amp;#8221; within the
dictionary. We will demonstrate how to visualize this data with a
plotting library and hwo to export parts of the graph to &lt;span class="caps"&gt;JSON&lt;/span&gt; for
interactive visualizations in the&amp;nbsp;web.&lt;/p&gt;
&lt;p&gt;You can download this tutorial as &lt;a class="reference external" href="http://ipython.org/ipython-doc/dev/interactive/htmlnotebook.html"&gt;IPython
notebook&lt;/a&gt;&amp;nbsp;here:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/notebooks/blob/master/Swadesh%20viewer%20for%20dictionary%20data.ipynb"&gt;https://github.com/pbouda/notebooks/blob/master/Swadesh%20viewer%20for%20dictionary%20data.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="data"&gt;
&lt;h3&gt;Data&lt;/h3&gt;
&lt;p&gt;For this tutorial we will use data from the project &amp;#8220;&lt;a class="reference external" href="http://www.quanthistling.info/"&gt;Quantitative
Historical Linguistics&lt;/a&gt;&amp;#8220;. The
website of the project provides a &lt;span class="caps"&gt;ZIP&lt;/span&gt; package of GrAF/&lt;span class="caps"&gt;XML&lt;/span&gt; files for the
printed sources that were digitized within the&amp;nbsp;project:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.quanthistling.info/data/downloads/xml/data.zip"&gt;http://www.quanthistling.info/data/downloads/xml/data.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;span class="caps"&gt;ZIP&lt;/span&gt; package contains several files encoded as described in the &lt;a class="reference external" href="http://www.iso.org/iso/catalogue_detail.htm?csnumber=37326"&gt;&lt;span class="caps"&gt;ISO&lt;/span&gt;
standard
24612&lt;/a&gt;
&amp;#8220;Linguistic annotation framework (&lt;span class="caps"&gt;LAF&lt;/span&gt;)&amp;#8221;. The QuantHistLing data contains
dictionary and wordlist sources. Those were first tokenized into
entries, for each entry you will find annotations for at least the head
word(s) (&amp;#8220;head&amp;#8221; annotation) and translation(s) (&amp;#8220;translation&amp;#8221;
annotation) in the case of dictionaries. We will only use the
dictionaries of the &amp;#8220;Witotoan&amp;#8221; compoment in this tutorial. The &lt;span class="caps"&gt;ZIP&lt;/span&gt;
package also contains a &lt;span class="caps"&gt;CSV&lt;/span&gt; file &amp;#8220;sources.csv&amp;#8221; with some information for
each source, for example the languages as &lt;span class="caps"&gt;ISO&lt;/span&gt; codes, type of source,
etc. Be aware that the &lt;span class="caps"&gt;ZIP&lt;/span&gt; package contains a filtered version of the
sources: only entries that contain a Spanish word that is part of the
Spanish swadesh list are included in the download&amp;nbsp;package.&lt;/p&gt;
&lt;p&gt;For a simple example how to parse one of the source please see&amp;nbsp;here:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://graf-python.readthedocs.org/en/latest/Querying%20GrAF%20graphs.html"&gt;http://graf-python.readthedocs.org/en/latest/Querying%20GrAF%20graphs.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-are-translation-graphs"&gt;
&lt;h3&gt;What are translation&amp;nbsp;graphs?&lt;/h3&gt;
&lt;p&gt;In our case, translation graphs are graphs that connect all spanish
translation with every head word that we find for each translation in
our sources. The idea is that spanish is some kind of interlingua in our
case: if a string of a spanish translation in one source matches a
string in another source this will only be &lt;em&gt;one&lt;/em&gt; node in our graph. For
the head words, this is not the case: matching strings in head words in
different source are different nodes in the graph. This holds even if
the different sources describe the same language, as different sources
will use different&amp;nbsp;orthographies.&lt;/p&gt;
&lt;p&gt;To fullfil that need, head words are internally represented as a string
with two parts: the head word and its source. Both parts are seperated
by a pipe symbol &amp;#8220;|&amp;#8221;. For example, in a &lt;a class="reference external" href="http://en.wikipedia.org/wiki/DOT_language"&gt;&lt;span class="caps"&gt;DOT&lt;/span&gt;
file&lt;/a&gt; such a node looks
like&amp;nbsp;this:&lt;/p&gt;
&lt;blockquote&gt;
&amp;#8220;ócáji|thiesen1998&amp;#8221; [lang=boa, source=thiesen1998_25_339];&lt;/blockquote&gt;
&lt;p&gt;The square brackets contain additional attributes here. These attributes
are not part of the node&amp;#8217;s name, they contain just additonal information
that we store with the&amp;nbsp;nodes.&lt;/p&gt;
&lt;p&gt;In comparison, a spanish translation looks like&amp;nbsp;this:&lt;/p&gt;
&lt;blockquote&gt;
&amp;#8220;vaca&amp;#8221; [lang=spa];&lt;/blockquote&gt;
&lt;p&gt;There is no attribute &amp;#8220;source&amp;#8221; here, as this translation might occur in
several sources. An edge connecting the two nodes looks like&amp;nbsp;this:&lt;/p&gt;
&lt;blockquote&gt;
&amp;#8220;vaca&amp;#8221; &amp;#8212; &amp;#8220;ócáji|thiesen1998&amp;#8221;;&lt;/blockquote&gt;
&lt;p&gt;To handle such graphs our scripts use the &lt;a class="reference external" href="http://networkx.lanl.gov/"&gt;NetworkX Python
library&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="requirements"&gt;
&lt;h3&gt;Requirements&lt;/h3&gt;
&lt;p&gt;The following Python libraries are required to process the GrAF/&lt;span class="caps"&gt;XML&lt;/span&gt;
files and create the translation&amp;nbsp;graphs:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;NetworkX: &lt;a class="reference external" href="http://networkx.lanl.gov/"&gt;http://networkx.lanl.gov/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;graf-python: &lt;a class="reference external" href="https://github.com/cidles/graf-python"&gt;https://github.com/cidles/graf-python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;requests: &lt;a class="reference external" href="http://docs.python-requests.org/en/latest/"&gt;http://docs.python-requests.org/en/latest/&lt;/a&gt; (only if you
want automated download of the&amp;nbsp;data)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To visualize the graphs we use the &lt;a class="reference external" href="http://d3js.org/"&gt;D3.js&lt;/a&gt; library,
but we will load this on-the-fly when we start with the&amp;nbsp;visualization.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;codecs&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;glob&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;networkx&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;graf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="get-witotoan-sources"&gt;
&lt;h3&gt;Get Witotoan&amp;nbsp;sources&lt;/h3&gt;
&lt;p&gt;In the first step we download and extract the data. You may change to a
local &amp;#8220;tmp&amp;#8221; directory before the download or just download the data to
the current working directory. For this you need to install the Python
library &lt;tt class="docutils literal"&gt;requests&lt;/tt&gt;. You may also download and extract the data
manually, the data is only downloaded for you if the file
&lt;tt class="docutils literal"&gt;sources.csv&lt;/tt&gt; is not&amp;nbsp;found.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/Users/pbouda/Projects/git-github/notebooks/swadeshviewer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sources.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zipfile&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;http://www.quanthistling.info/data/downloads/xml/data.zip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;data.zip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;wb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zipfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ZipFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;data.zip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extractall&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we open the file &amp;#8220;sources.csv&amp;#8221; and read out all the sources that are
part of the component &amp;#8220;Witotoan&amp;#8221; and that are dictionaries. We will
store a list of those source in &lt;tt class="docutils literal"&gt;witotoan_sources&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sources&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sources.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rU&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;delimiter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;witotoan_sources&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Witotoan&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dictionary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;witotoan_sources&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="graf-to-networkx"&gt;
&lt;h3&gt;GrAF to&amp;nbsp;NetworkX&lt;/h3&gt;
&lt;p&gt;Next we define a helper function that transform a GrAF graph into a
networkx graph. For this we traverse the graph by querying for all
entries. For each entry we look for connected nodes that have &amp;#8220;head&amp;#8221; or
&amp;#8220;translation&amp;#8221; annotation. All of those nodes that are Spanish are stored
in the list &lt;tt class="docutils literal"&gt;spa&lt;/tt&gt;. All non-Spanish annotations are stored in
&lt;tt class="docutils literal"&gt;others&lt;/tt&gt;. In the end the collected annotation are added to the new
networkx graph, and each spanish node is connected to all the other
nodes for each&amp;nbsp;entry:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;graf_to_networkx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;graf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;networkx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Graph&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;graf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;spa&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;others&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;node_id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;..entry&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos_on_page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node_id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;..&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out_edges&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;annotations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_first&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;head&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;annotations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_first&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;translation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="c1"&gt;# get lang&lt;/span&gt;
                    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;links&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;annotations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_first&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;iso-639-3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;annotations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_first&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;substring&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;spa&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                                &lt;span class="n"&gt;spa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;annotations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_first&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;substring&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                                &lt;span class="k"&gt;break&lt;/span&gt;
                            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                                &lt;span class="n"&gt;others&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;annotations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_first&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;substring&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;annotations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_first&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;substring&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                                &lt;span class="k"&gt;break&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spa&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;spa&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attr_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;lang&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;spa&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
                    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;translation&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;others&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{0}&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;{1}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;translation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;attr_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="s2"&gt;&amp;quot;lang&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;others&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;translation&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                            &lt;span class="s2"&gt;&amp;quot;source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="s2"&gt;&amp;quot;page&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="s2"&gt;&amp;quot;pos_on_page&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pos_on_page&lt;/span&gt;
                        &lt;span class="p"&gt;})&lt;/span&gt;
                        &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_edge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{0}&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;{1}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;translation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="parse-graf-xml-files"&gt;
&lt;h3&gt;Parse GrAF/&lt;span class="caps"&gt;XML&lt;/span&gt;&amp;nbsp;files&lt;/h3&gt;
&lt;p&gt;Now we parse all the &lt;span class="caps"&gt;XML&lt;/span&gt; files of the extracted &lt;span class="caps"&gt;ZIP&lt;/span&gt; package. For this we
traverse through all the directories that have a name in
`witotoan_sources&amp;#8217;. The files we are looking for are the
&amp;#8220;-dictinterpretation.xml&amp;#8221; files within each directory, as those contain
the annotations for &amp;#8220;heads&amp;#8221; and&amp;nbsp;&amp;#8220;translations&amp;#8221;.&lt;/p&gt;
&lt;p&gt;First we create an empty list &lt;tt class="docutils literal"&gt;graphs&lt;/tt&gt; that will later store all the
networkx&amp;nbsp;graphs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;graf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GraphParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;graphs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then we loop through all the Witotoan sources, parse the &lt;span class="caps"&gt;XML&lt;/span&gt; files and
transform the graphs into networkx graph by calling the helper function
that we defined above. We print a progress report within the loop, as
parsing and transformation might take some&amp;nbsp;time:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;witotoan_sources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dict-*-dictinterpretation.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Parsing &lt;/span&gt;&lt;span class="si"&gt;{0}&lt;/span&gt;&lt;span class="s2"&gt;...&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;graf_graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;graf_to_networkx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;graf_graph&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;graphs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre class="literal-block"&gt;
Parsing thiesen1998/dict-thiesen1998-25-339-dictinterpretation.xml...
Parsing minor1987/dict-minor1987-1-126-dictinterpretation.xml...
Parsing minor1971/dict-minor1971-3-74-dictinterpretation.xml...
Parsing burtch1983/dict-burtch1983-19-262-dictinterpretation.xml...
Parsing leach1969/dict-leach1969-67-161-dictinterpretation.xml...
Parsing walton1997/dict-walton1997-9-120-dictinterpretation.xml...
Parsing preuss1994/dict-preuss1994-797-912-dictinterpretation.xml...
OK
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="merge-all-graphs"&gt;
&lt;h3&gt;Merge all&amp;nbsp;graphs&lt;/h3&gt;
&lt;p&gt;Now we can merge all the individual graphs for each source into one big
graph. This will collapse all Spanish nodes and so connect the nodes
that have a common Spanish&amp;nbsp;translation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;copy&lt;/span&gt;
&lt;span class="n"&gt;combined_graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deepcopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;graphs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;gr&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;graphs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;gr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;combined_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n2&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;gr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;edges_iter&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;combined_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_edge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;edge&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;n2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We count the nodes in the graph and the &lt;a class="reference external" href="http://networkx.lanl.gov/reference/generated/networkx.algorithms.components.connected.number_connected_components.html#networkx.algorithms.components.connected.number_connected_components"&gt;number of connected
components&lt;/a&gt;
to get an impression how the graph &amp;#8220;looks&amp;#8221;. The number of nodes is much
higher then the number of connected components, so we already have a lot
of the nodes connected in groups, either as a consequence from being
part of one dictionary entry or through the merge we did via the Spanish&amp;nbsp;node:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;combined_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre class="literal-block"&gt;
23749
&lt;/pre&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;networkx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;algorithms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number_connected_components&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;combined_graph&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre class="literal-block"&gt;
4614
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="extract-a-subgraph-for-all-the-words-in-the-spanish-swadesh-list"&gt;
&lt;h3&gt;Extract a subgraph for all the words in the Spanish Swadesh&amp;nbsp;list&lt;/h3&gt;
&lt;p&gt;Next we will extract a subgraph from full graph. We will only search for
nodes that have a Spanish word that is a part of the &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Swadesh_list"&gt;Swadesh
list&lt;/a&gt;. The &lt;a class="reference external" href="http://www.nltk.org/"&gt;Natural
Language Toolkit (&lt;span class="caps"&gt;NLTK&lt;/span&gt;)&lt;/a&gt; contains Swadesh lists
for several languages and we will use &lt;span class="caps"&gt;NLTK&lt;/span&gt;&amp;#8217;s version of the Spanish
list. You don&amp;#8217;t need to install the &lt;span class="caps"&gt;NLTK&lt;/span&gt; library (although I recommend
learning about it!), as we will load the data directly from the &lt;span class="caps"&gt;NLTK&lt;/span&gt;
github repository. Again, we use &lt;tt class="docutils literal"&gt;requests&lt;/tt&gt; to download the data, but
you may also download and extract the data&amp;nbsp;manually.&lt;/p&gt;
&lt;p&gt;First we download and extract the Swadesh&amp;nbsp;data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#os.chdir(&amp;quot;c:/Users/Peter/Documents/Corpora/qlc&amp;quot;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;swadesh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;es&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zipfile&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;https://github.com/nltk/nltk_data/blob/gh-pages/packages/corpora/swadesh.zip?raw=true&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;swadesh.zip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;wb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zipfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ZipFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;swadesh.zip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extractall&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, we get all the Spanish words from the Swadesh&amp;nbsp;file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;swadesh_words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;swadesh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;es&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;swadesh_words&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we are ready to loop through the graph and find all nodes are part
of the Swadesh list. We will store all those nodes and their connections
in seperate graphs, one graph for each Swadesh term. This allows us to
use different word lists later, for example to extract semantic domains
like &lt;em&gt;body parts&lt;/em&gt;, &lt;em&gt;food&lt;/em&gt;,&amp;nbsp;etc.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;swadesh_graphs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;swadesh_words&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;swadesh_graphs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;networkx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Graph&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;combined_graph&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;lang&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;combined_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; \
            &lt;span class="n"&gt;combined_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lang&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;spa&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# get the index of the word in the Swadesh list&lt;/span&gt;
        &lt;span class="n"&gt;swadesh_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;swadesh&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;swadesh_words&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;concepts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;swadesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;concepts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;swadesh_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;swadesh_index&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;continue&lt;/span&gt;
        &lt;span class="n"&gt;swadesh_graphs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;swadesh_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;combined_graph&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;lang&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;combined_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; \
                    &lt;span class="n"&gt;combined_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lang&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;spa&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;|&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;combined_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lang&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;combined_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;page&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;pos_on_page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;combined_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pos_on_page&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;swadesh_graphs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;swadesh_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;swadesh_graphs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;swadesh_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_edge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;swadesh_graphs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;swadesh_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;attr_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;data_source&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s2"&gt;&amp;quot;page&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s2"&gt;&amp;quot;pos_on_page&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pos_on_page&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
                &lt;span class="n"&gt;swadesh_graphs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;swadesh_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_edge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="export-the-subgraph-as-json-data"&gt;
&lt;h3&gt;Export the subgraph as &lt;span class="caps"&gt;JSON&lt;/span&gt;&amp;nbsp;data&lt;/h3&gt;
&lt;p&gt;Another method to visualize the graph is the &lt;a class="reference external" href="http://d3js.org/"&gt;D3 Javascript
library&lt;/a&gt;. For this we need to export the graph as
&lt;span class="caps"&gt;JSON&lt;/span&gt; data that will be loaded by a &lt;span class="caps"&gt;HTML&lt;/span&gt; document. The networkx contains
a &lt;tt class="docutils literal"&gt;networkx.readwrite.json_graph&lt;/tt&gt; module that allows us to easily
transform the graph into a &lt;span class="caps"&gt;JSON&lt;/span&gt; document. The &lt;span class="caps"&gt;JSON&lt;/span&gt; data structure can
then be writte to a file with the help of the Python &lt;tt class="docutils literal"&gt;json&lt;/tt&gt; module:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;networkx.readwrite&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;json_graph&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;swadesh_graphs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;json_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node_link_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;swadesh_data_&lt;/span&gt;&lt;span class="si"&gt;{0}&lt;/span&gt;&lt;span class="s2"&gt;.json&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;swadesh_words&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;swadesh_list.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally we need to create a &lt;span class="caps"&gt;HTML&lt;/span&gt; file to display the data. You can
download an &lt;span class="caps"&gt;HTML&lt;/span&gt; file form&amp;nbsp;here:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/notebooks/blob/master/swadeshviewer/index.html"&gt;https://github.com/pbouda/notebooks/blob/master/swadeshviewer/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Put the file &lt;tt class="docutils literal"&gt;index.html&lt;/tt&gt; into the folder with the &lt;span class="caps"&gt;JSON&lt;/span&gt; files. Then
open the file in any browser. You can view an online version&amp;nbsp;here:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.peterbouda.eu/tutorials/swadeshviewer/index.html"&gt;http://www.peterbouda.eu/tutorials/swadeshviewer/index.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Language"></category><category term="IPython"></category><category term="Swadesh"></category><category term="Witotoan"></category></entry><entry><title>pressagio: A predictive text system in Python</title><link href="https://www.peterbouda.eu/pressagio-a-predictive-text-system-in-python.html" rel="alternate"></link><published>2013-11-04T13:56:00+00:00</published><updated>2013-11-04T13:56:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2013-11-04:/pressagio-a-predictive-text-system-in-python.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://media.cidles.eu/poio/pressagio/"&gt;Pressagio&lt;/a&gt; is a predictive text
library that I am currently working on. It is written in Python and I started
this project as a pure Python port of the amazing &lt;a class="reference external" href="http://presage.sourceforge.net/"&gt;presage library&lt;/a&gt;. The original idea was to implement text
prediction on mobile phones for under-resourced languages like Bavarian or
Sorbian …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://media.cidles.eu/poio/pressagio/"&gt;Pressagio&lt;/a&gt; is a predictive text
library that I am currently working on. It is written in Python and I started
this project as a pure Python port of the amazing &lt;a class="reference external" href="http://presage.sourceforge.net/"&gt;presage library&lt;/a&gt;. The original idea was to implement text
prediction on mobile phones for under-resourced languages like Bavarian or
Sorbian, but pressagio could of course be used for any language for which some
corpus is available. You can try out an online demo of the text prediction
on the &lt;a class="reference external" href="http://www.poio.eu/"&gt;Poio website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is a short introduction how to build an n-gram model for a language
that you want to support via pressagio. First, you have to prepare some text
file that contains raw text, without markup or any other content. A good
example is the output of the &lt;a class="reference external" href="https://www.peterbouda.eu/parsing-wikipedia-dumps-and-conversion-to-iso-24612-graf-xml.html"&gt;Wikipedia to GrAF conversion that I described
a few weeks ago&lt;/a&gt;.
The GrAF package contains a .txt file that we will use for the tutorial in this&amp;nbsp;post.&lt;/p&gt;
&lt;div class="section" id="build-the-n-gram-model"&gt;
&lt;h2&gt;Build the n-gram&amp;nbsp;model&lt;/h2&gt;
&lt;p&gt;We will build and store an n-gram model to allow text prediction for Bavarian.
A sqlite database will store the model, so that you do not need any other
database system on your computer. Python supports sqlite out-of-the-box.
Besides sqlite, pressagio also support postgres as a store for the n-gram
models. To create the model for a single cardinality (e.g. unigram or bigrams),
the pressagio library contains a &lt;a class="reference external" href="https://github.com/cidles/pressagio/blob/master/scripts/text2ngram"&gt;text2ngram&lt;/a&gt; script
in the &lt;tt class="docutils literal"&gt;scripts&lt;/tt&gt; folder of the source distribution. This script supports
several command line options, for example to set the cardinality of the model
and the output file. You can get a list of all options by passing &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--help&lt;/span&gt;&lt;/tt&gt; to
the&amp;nbsp;script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;h:\ProjectsWin\git-github\pressagio\scripts&amp;gt;c:\Python33\python.exe text2ngram --help&lt;/span&gt;
&lt;span class="go"&gt;Usage: text2ngram [options] file1 file2 ...&lt;/span&gt;

&lt;span class="go"&gt;Options:&lt;/span&gt;
&lt;span class="go"&gt;  --version             show program&amp;#39;s version number and exit&lt;/span&gt;
&lt;span class="go"&gt;  -h, --help            show this help message and exit&lt;/span&gt;
&lt;span class="go"&gt;  -n NGRAM, --ngram=NGRAM&lt;/span&gt;
&lt;span class="go"&gt;                        Specify ngram cardinality N&lt;/span&gt;
&lt;span class="go"&gt;  -l LOWERCASE, --lowercase=LOWERCASE&lt;/span&gt;
&lt;span class="go"&gt;                        Enable lowercase conversion mode&lt;/span&gt;
&lt;span class="go"&gt;  -a APPEND, --append=APPEND&lt;/span&gt;
&lt;span class="go"&gt;                        Enable append mode for database&lt;/span&gt;
&lt;span class="go"&gt;  -o OUTFILE, --output=OUTFILE&lt;/span&gt;
&lt;span class="go"&gt;                        Output file name O&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We will generate a model for unigrams, bigrams and trigrams, as this is what
we need for the text prediction. In addition to the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-n&lt;/span&gt;&lt;/tt&gt; option we will also
pass a filename for sqlite database (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-o&lt;/span&gt; bar.sqlite&lt;/tt&gt;) and the path to the text
file with the Wikipedia articles (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;barwiki-20131030.txt&lt;/span&gt;&lt;/tt&gt;). We have to call
&lt;tt class="docutils literal"&gt;text2ngram&lt;/tt&gt; three times, once for each cardinality. For the unigrams we&amp;nbsp;use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;h:\ProjectsWin\git-github\pressagio\scripts&amp;gt;c:\Python33\python.exe text2ngram -n 1 -o bar.sqlite barwiki-20131030.txt&lt;/span&gt;
&lt;span class="go"&gt;Parsing barwiki-20131030.txt...&lt;/span&gt;
&lt;span class="go"&gt;Writing result to bar.sqlite...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then the&amp;nbsp;bigrams:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;h:\ProjectsWin\git-github\pressagio\scripts&amp;gt;c:\Python33\python.exe text2ngram -n 2 -o bar.sqlite barwiki-20131030.txt&lt;/span&gt;
&lt;span class="go"&gt;Parsing barwiki-20131030.txt...&lt;/span&gt;
&lt;span class="go"&gt;Writing result to bar.sqlite...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally the&amp;nbsp;trigrams:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;h:\ProjectsWin\git-github\pressagio\scripts&amp;gt;c:\Python33\python.exe text2ngram -n 3 -o bar.sqlite barwiki-20131030.txt&lt;/span&gt;
&lt;span class="go"&gt;Parsing barwiki-20131030.txt...&lt;/span&gt;
&lt;span class="go"&gt;Writing result to bar.sqlite...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The result of the three steps will be a sqlite database with three tables
&lt;tt class="docutils literal"&gt;_1_gram&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;_2_gram&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;_3_gram&lt;/tt&gt;. Those will contain the counts for each
n-gram of the Wikipedia&amp;nbsp;corpus.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="use-pressagio-to-suggest-completions"&gt;
&lt;h2&gt;Use pressagio to suggest&amp;nbsp;completions&lt;/h2&gt;
&lt;p&gt;Based on this information pressagio can now calculate the most likely
completions for any Bavarian string. The whole process is controlled via a
configuration file that points to the database file and contains several option
for smoothing, the number of suggestions etc. You can find an &lt;a class="reference external" href="https://github.com/cidles/pressagio/blob/master/scripts/example_profile.ini"&gt;example config file&lt;/a&gt;
in the &lt;tt class="docutils literal"&gt;scripts&lt;/tt&gt; folder. The same folder also contains an &lt;a class="reference external" href="https://github.com/cidles/pressagio/blob/master/scripts/predict"&gt;example script
for prediction&lt;/a&gt; that makes
use of this config file. This example assumes that there is a file
&lt;tt class="docutils literal"&gt;bar.sqlite&lt;/tt&gt; in the same folder as the prediction script and the config&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;The script first imports the &lt;tt class="docutils literal"&gt;configparser&lt;/tt&gt; module. We emebed the import in
a &lt;tt class="docutils literal"&gt;try&lt;/tt&gt; block in order to support both Python 2 and 3, as the name of the
module changed between the two&amp;nbsp;versions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;import pressagio.callback
import pressagio
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, we define a sub-class of &lt;tt class="docutils literal"&gt;pressagio.callback.Callback&lt;/tt&gt;, which is used
to pass the input string to the predictor. In a real-world setting this callback
is called by the text predictor and has to return the strings before and after
the cursor. For simplicity we assume that there is no text after the&amp;nbsp;cursor:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DemoCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pressagio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Callback&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;past_stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;future_stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can now open and parse the config&amp;nbsp;file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;config_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;example_profile.ini&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;configparser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the parsed configuration and the callback we can create a &lt;tt class="docutils literal"&gt;Pressagio&lt;/tt&gt;
object:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DemoCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Des is a Te&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;prsgio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pressagio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pressagio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The object has a method &lt;tt class="docutils literal"&gt;predict()&lt;/tt&gt; that will return a list of the suggestions
calculated from the n-gram&amp;nbsp;model:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prsgio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;#8217;s it! Feel free to try this out with any corpus you have, and don&amp;#8217;t forget
to try our online demo at the Poio&amp;nbsp;website:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.poio.eu/"&gt;http://www.poio.eu/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Poio is completely open source, the data we use is from Wikipedia and is
completely free for download on the Poio&amp;nbsp;website.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Language"></category><category term="Poio"></category><category term="LM"></category></entry><entry><title>Parsing Wikipedia dumps and conversion to ISO 24612 (GrAF-XML)</title><link href="https://www.peterbouda.eu/parsing-wikipedia-dumps-and-conversion-to-iso-24612-graf-xml.html" rel="alternate"></link><published>2013-09-10T15:53:00+01:00</published><updated>2013-09-10T15:53:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2013-09-10:/parsing-wikipedia-dumps-and-conversion-to-iso-24612-graf-xml.html</id><summary type="html">&lt;p&gt;At the moment I am heavily working on our data management and conversion library
&lt;a href="http://media.cidles.eu/poio/poio-api/"&gt;Poio &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt;. Until now it mainly targets
files formats used in language documentation, but I am quite interested in using
the content of Wikipedias to do some linguistic analysis like finding semantic
classes or testing part-of-speech …&lt;/p&gt;</summary><content type="html">&lt;p&gt;At the moment I am heavily working on our data management and conversion library
&lt;a href="http://media.cidles.eu/poio/poio-api/"&gt;Poio &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt;. Until now it mainly targets
files formats used in language documentation, but I am quite interested in using
the content of Wikipedias to do some linguistic analysis like finding semantic
classes or testing part-of-speech taggers. As you might know, the original
&lt;a href="http://dumps.wikimedia.org/"&gt;Wikipedia dumps&lt;/a&gt; are somehow contaminated with
Wiki markup that is not easy to erase. There are all kind of historical markup
structures in there and sometimes the syntax is plainly wrong, but still works
to generate a good-enough page on the Wikipedia website. In this post I will
explain how to download and clean a Wikipedia dump and then use Poio &lt;span class="caps"&gt;API&lt;/span&gt; to
transform it into a &lt;a href="http://www.balisage.net/Proceedings/vol10/html/Bouda01/BalisageVol10-Bouda01.html"&gt;GrAF-&lt;span class="caps"&gt;XML&lt;/span&gt; file&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;The Wikipeda&amp;nbsp;Extractor&lt;/h1&gt;
&lt;p&gt;Two years ago I tested several Wikipedia extraction tools, and found that the
&lt;a href="http://medialab.di.unipi.it/wiki/Wikipedia_Extractor"&gt;Wikipedia Extractor&lt;/a&gt;
gives the best output. Things might have changed since then, but I stick to it,
also because it is a single Python script that I can easily change if I need
to. The newest version can output &lt;span class="caps"&gt;JSON&lt;/span&gt; or &lt;span class="caps"&gt;XML&lt;/span&gt;. As &lt;span class="caps"&gt;XML&lt;/span&gt; was the one and only
output format two years ago I stick to the &lt;span class="caps"&gt;XML&lt;/span&gt; output as all my tools are based
on this format. In fact, it is not &lt;em&gt;true&lt;/em&gt; &lt;span class="caps"&gt;XML&lt;/span&gt;, as the root element is missing
(the Wikipedia Extractor calls the format &amp;#8220;tanl&amp;#8221;). All the Wikipedia articles
are just enclosed&amp;nbsp;by &lt;code&gt;&amp;lt;doc&amp;gt;&lt;/code&gt; tags, one after the&amp;nbsp;other:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;doc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;55&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;url=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://bar.wikipedia.org/wiki?curid=55&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Wikipedia:Archiv/Boarische Umschrift&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Wikipedia:Archiv/Boarische&lt;span class="w"&gt; &lt;/span&gt;Umschrift
Fürs&lt;span class="w"&gt; &lt;/span&gt;Boarische&lt;span class="w"&gt; &lt;/span&gt;gibts&lt;span class="w"&gt; &lt;/span&gt;koa&lt;span class="w"&gt; &lt;/span&gt;einheitliche&lt;span class="w"&gt; &lt;/span&gt;Umschrift.&lt;span class="w"&gt; &lt;/span&gt;Ma&lt;span class="w"&gt; &lt;/span&gt;orientiert&lt;span class="w"&gt; &lt;/span&gt;si&lt;span class="w"&gt; &lt;/span&gt;in&lt;span class="w"&gt; &lt;/span&gt;da&lt;span class="w"&gt; &lt;/span&gt;Schreibweis&lt;span class="w"&gt; &lt;/span&gt;an&lt;span class="w"&gt; &lt;/span&gt;da&lt;span class="w"&gt; &lt;/span&gt;deutschen&lt;span class="w"&gt; &lt;/span&gt;Orthografie....
&lt;span class="nt"&gt;&amp;lt;/doc&amp;gt;&amp;lt;doc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;60&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;url=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://bar.wikipedia.org/wiki?curid=60&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Deitschland&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Deitschland
Deitschland&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;Staat&lt;span class="w"&gt; &lt;/span&gt;in&lt;span class="w"&gt; &lt;/span&gt;Mittleiropa.&lt;span class="w"&gt; &lt;/span&gt;Ois&lt;span class="w"&gt; &lt;/span&gt;Bundesstaat&lt;span class="w"&gt; &lt;/span&gt;wiad&lt;span class="w"&gt; &lt;/span&gt;de&lt;span class="w"&gt; &lt;/span&gt;&amp;quot;Bundesrepublik&lt;span class="w"&gt; &lt;/span&gt;Deutschland&amp;quot;&lt;span class="w"&gt; &lt;/span&gt;aus&lt;span class="w"&gt; &lt;/span&gt;dena&lt;span class="w"&gt; &lt;/span&gt;16&lt;span class="w"&gt; &lt;/span&gt;deitschn&lt;span class="w"&gt; &lt;/span&gt;Ländan&lt;span class="w"&gt; &lt;/span&gt;buidt....
&lt;span class="nt"&gt;&amp;lt;/doc&amp;gt;&lt;/span&gt;
[...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The whole output is split over several files, where the files&amp;#8217; size is
controllable via a command line variable. I use to call the Wikipedia Extractor
with the following arguments (I use the [Bavarian Wikipedia dump]
(http://dumps.wikimedia.org/barwiki/20130905/) as an example&amp;nbsp;here):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;WikiExtractor.py -w -f tanl barwiki-20130905-pages-articles.xml.bz2 extracted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will put all output files into a&amp;nbsp;folder &lt;code&gt;extracted&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;Concatenate and clean the&amp;nbsp;files&lt;/h1&gt;
&lt;p&gt;The next step is then to create a real &lt;span class="caps"&gt;XML&lt;/span&gt; file from this. It is not too hard,
we just have to add a root tag and clean the data a bit more, otherwise an &lt;span class="caps"&gt;XML&lt;/span&gt;
parser will complain about certain characters like the &amp;#8220;lower&amp;nbsp;than&amp;#8221; &lt;code&gt;&amp;lt;&lt;/code&gt;. I
start with the following code to get rid of certain general problems like
unparsable characters, add the root tags and concatenate all the&amp;nbsp;files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;codecs&lt;/span&gt;

&lt;span class="n"&gt;re_apostroph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;re_title_cleaned&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matchobj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;matchobj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;re_apostroph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;matchobj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;matchobj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# Concatenate output files&lt;/span&gt;
&lt;span class="n"&gt;filenames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;extracted&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*.raw&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;barwiki.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;fname&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;filenames&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# first clean step&lt;/span&gt;
&lt;span class="n"&gt;f1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;barwiki.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;barwiki_cleaned.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;xml&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;re_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;(title=&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;)(.*)(&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;re_xml_tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;(?!/?doc)[^&amp;gt;]*&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;re_and&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;amp;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;re_lower&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re_title&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;re_title_cleaned&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re_xml_tag&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re_and&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;amp;amp;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re_lower&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;amp;lt; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;/xml&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There is one complex regular expression substition here, that cleans&amp;nbsp;the &lt;code&gt;title&lt;/code&gt;
attributes of&amp;nbsp;the &lt;code&gt;&amp;lt;doc&amp;gt;&lt;/code&gt; tags. The titles sometimes contain an&amp;nbsp;apostroph &lt;code&gt;"&lt;/code&gt;,
which is also the seperator for attribute values in &lt;span class="caps"&gt;XML&lt;/span&gt; and cannot be used in
this location. So I just remove them. The output of this script are two files:&amp;nbsp;the &lt;code&gt;barwiki.xml&lt;/code&gt; just contains the concatenated files,&amp;nbsp;the &lt;code&gt;barwiki_cleaned.xml&lt;/code&gt;
contains the cleaned &lt;span class="caps"&gt;XML&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;In the case of the Bavarian Wikipedia there are still
some more quirks in the data. You can find out what kind of problems there are
if you try to parse the file now with the Python ElementTree module, for&amp;nbsp;example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;xml.etree.cElementTree&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;ET&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;xml.etree.ElementTree&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;ET&lt;/span&gt;
&lt;span class="n"&gt;tree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ElementTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;barwiki_cleaned.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The parser will throw an error and tell you which line and column caused the
problem. So I went through all the remaining problems in the Bavarian Wikipedia,
and added several more lines to my clean script to remove or modify the lines
that cause the&amp;nbsp;problems:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;f1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;barwiki_cleaned.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;barwiki_cleaned2.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;re_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\-?\-? ?\d\d?:\d\d, \d\d?. .{2,8}\.? \d\d\d\d \(CES?T\)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;re_dashes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\-\-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;re_wrong_tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;/noinclude[^&amp;gt;]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;re_arrows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;(&amp;lt;==&amp;lt;==&amp;lt;==&amp;lt;|&amp;gt;==&amp;gt;==&amp;gt;==&amp;gt;)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;re_special1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Le&amp;lt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;re_special2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ci&amp;lt;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;re_img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; [^ ]*\.jpg\|&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;lines_to_delete&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;!-- BITTE bei den Biografien der entsprechenden Personen auf der Bearbeitungsseite unten bei  Kategorien die folgende Zeile EINFÜGEN:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;  &amp;lt;/noinclude&amp;lt;/includeonly»&amp;lt;includeonly&amp;lt;/includeonly» BITTSCHÖN ENTFERN DII KOMMENTARE &amp;lt;/includeonly&amp;lt;/includeonly»&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;!-- BITTE bei den Biografien der entsprechenden Personen auf der Bearbeitungsseite unten bei Kategorien die folgende Zeile EINFÜGEN:&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lines_to_delete&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;

    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re_date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;re_empty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re_dashes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re_arrows&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re_wrong_tags&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re_special1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Le&amp;amp;lt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re_special2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ci&amp;amp;lt;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re_img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the end I have a clean&amp;nbsp;file &lt;code&gt;barwiki_cleaned2.xml&lt;/code&gt; that contains &lt;span class="caps"&gt;XML&lt;/span&gt; with
all the articles of the Bavarian Wikipedia and is parsable with&amp;nbsp;EementTree.&lt;/p&gt;
&lt;p&gt;I still add a third cleaning step to remove articles that are not real content.
Wikipedia contains several helper and meta-data articles that contain
explanations for authors and other stuff that we don&amp;#8217;t need. Luckily, those have
a title that contains a prefix that ends with a&amp;nbsp;colon &lt;code&gt;:&lt;/code&gt;, so we can just look
for a certain pattern in the titles and remove&amp;nbsp;those &lt;code&gt;&amp;lt;doc&amp;gt;&lt;/code&gt; elements from the
&lt;span class="caps"&gt;XML&lt;/span&gt; tree. I also remove articles that are smaller than 200
characters (those are too short to measure semantic similarity, in one of my
use&amp;nbsp;cases):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;tree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ElementTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;barwiki_cleaned2.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getroot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;re_special_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\w+:\w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UNICODE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;remove_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attrib&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;re_special_title&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;remove_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;remove_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;remove_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;barwiki_cleaned3.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After this step I finally end up with&amp;nbsp;a &lt;code&gt;barwiki_cleaned3.xml&lt;/code&gt; that contains
clean data with only the content articles. This file can already be used to
process the Wikipedia, but I wanted to also publish the files in a standardized
format. I chose &lt;a href="http://www.iso.org/iso/catalogue_detail.htm?csnumber=37326"&gt;&lt;span class="caps"&gt;ISO&lt;/span&gt; 24612&lt;/a&gt;,
as this makes it extremely easy to later combine heterogenous data sources or
add layers of annotations in the resulting annotation&amp;nbsp;graph.&lt;/p&gt;
&lt;h1&gt;Conversion to GrAF-&lt;span class="caps"&gt;XML&lt;/span&gt; with Poio &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;The last step is extremely simple, as one of Poio &lt;span class="caps"&gt;API&lt;/span&gt;&amp;#8217;s core use case is the
conversion of files. Normally, you would have to write a parser and a writer
for each of the file formats you want to support. But for the &lt;span class="caps"&gt;XML&lt;/span&gt; output of
the Wikipedia Extractor there already exists a parser in Poio &lt;span class="caps"&gt;API&lt;/span&gt;, and GrAF-&lt;span class="caps"&gt;XML&lt;/span&gt;
is supported as the basic pivot format. Which means that any file format that
is supported in Poio &lt;span class="caps"&gt;API&lt;/span&gt; can be converted to GrAF-&lt;span class="caps"&gt;XML&lt;/span&gt;. The conversion is
dead simple: we initialize&amp;nbsp;a &lt;code&gt;Converter&lt;/code&gt; object with the Wikipedia parser
and the GrAF writer, and then tell the converter&amp;nbsp;to &lt;code&gt;parse()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;poioapi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wikipedia_extractor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Parser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Wikipedia.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;poioapi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Writer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;converter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;poioapi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GrAFConverter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;converter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;converter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Wikipedia.hdr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will write a set of GrAF files that you can read and query with the
&lt;a href="http://media.cidles.eu/poio/graf-python/"&gt;graf-python&lt;/a&gt; library or
with any of the &lt;a href="http://www.anc.org/software/"&gt;tools and connectors&lt;/a&gt; that were
developed at the American National Corpus to work with their GrAF-&lt;span class="caps"&gt;XML&lt;/span&gt; corpus&amp;nbsp;files.&lt;/p&gt;
&lt;p&gt;&amp;#8212;&amp;gt;&lt;/p&gt;</content><category term="Language"></category><category term="Poio"></category><category term="Wikipedia"></category></entry><entry><title>Creating a dictionary: Excel to Toolbox conversion</title><link href="https://www.peterbouda.eu/creating-a-dictionary-excel-to-toolbox-conversion.html" rel="alternate"></link><published>2013-08-29T11:18:00+01:00</published><updated>2013-08-29T11:18:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2013-08-29:/creating-a-dictionary-excel-to-toolbox-conversion.html</id><summary type="html">&lt;p&gt;In our current dictionary project &amp;#8220;Bilingual Dictionary Piação-Portuguese&amp;#8221; we
decided to use Microsoft Excel to edit the dictionary data. This choice had
some pragmatic reasons, like that most people/linguists can easily work with a
stylesheet, even if they don&amp;#8217;t know about all the features of Excel, and that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In our current dictionary project &amp;#8220;Bilingual Dictionary Piação-Portuguese&amp;#8221; we
decided to use Microsoft Excel to edit the dictionary data. This choice had
some pragmatic reasons, like that most people/linguists can easily work with a
stylesheet, even if they don&amp;#8217;t know about all the features of Excel, and that
Excel allows to export data in a structured way (as &amp;#8220;comma separated values&amp;#8221; in
a &amp;#8220;&lt;span class="caps"&gt;CSV&lt;/span&gt; file&amp;#8221;). Still, as the &lt;a href="http://www-01.sil.org/computing/toolbox/"&gt;Toolbox&lt;/a&gt;
dictionary generator is state-of-the-art in language documentation, we needed a
way to convert the Excel data to a Toolbox file. We did some first tests with
a simple Python script and everything worked out well until now, so here is a
short description of our&amp;nbsp;workflow.&lt;/p&gt;
&lt;p&gt;We created an empty Toolbox project that will give you a list of standard fields&amp;nbsp;like &lt;code&gt;Lexeme&lt;/code&gt;, &lt;code&gt;Sound file&lt;/code&gt;, etc. We added two or three example sentences,
customized the fields, and generated a first dictionary to see how the output
will look in the end and to get an example data file that we could use as a
template for the Excel data. The data file will be saved in the project folder
somewhere, in our case it was&amp;nbsp;in
&lt;code&gt;Toolbox Project\DictionaryFactoryPackage\Dictionary.txt&lt;/code&gt;. You can open the
file in a simple text editor to see the content. In our case, an entry looked
like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\lx à bia
\sf
\pc
\ph aβiɐ
\se
\ps adv.
\un
\dn rápido, depressa
\sn
\rn rápido
\va
\et antropónimo Bia
\ec referência metonímica à alcunha de
um homem para designar uma
característica que lhe era peculiar
\wh da alcunha de um senhor (Bia) que
achava que tudo se podia resolver
rapidamente, mesmo que sem
qualidade. Doc. em CAORG 2004
\pce
\xv A covana colou do parreiral à bia e
a resmar.
\sfx
\ff
\xn &amp;quot;&amp;quot;A mulher saiu de casa depressa e a
falar sozinha.&amp;quot;
\rf Ferreira 2000-2011. 
\nt
\cf
\dt 19
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For most of the Toolbox fields we defined a column in Excel, with a custom name
so that our editors where able to understand the column&amp;#8217;s content from the name
in Excel. With the column names and the field names in Toolbox we created the
following template in&amp;nbsp;Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;TEMPLATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;lx &lt;/span&gt;&lt;span class="si"&gt;{Lexema}&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;sf &lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;pc &lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;ph {Transcrição Fonética}&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;se&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;ps {Classe de Palavras}&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;un&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;dn &lt;/span&gt;&lt;span class="si"&gt;{Significado}&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;sn&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;rn &lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;va&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;et &lt;/span&gt;&lt;span class="si"&gt;{Etimologia}&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;ec {Comentário de etimologia}&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;wh {Historia da Palavra}&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;pce&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xv &lt;/span&gt;&lt;span class="si"&gt;{Exemplos}&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;sfx&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;ff&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xn {Exemplos PT}&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;rf {Fonte dos exemplos}&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;nt&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;cf&lt;/span&gt;
&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;dt 31.07.2013&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The Excel column names are in the curely brackets, so that we can use&amp;nbsp;Python&amp;#8217;s
&lt;code&gt;format()&lt;/code&gt; method to fill in the content. For the &lt;span class="caps"&gt;CSV&lt;/span&gt; file we had to export the
Excel data in LibreOffice Calc, as Excel does not support &lt;span class="caps"&gt;UTF&lt;/span&gt;-8 export (shame
on you, Microsoft!). We exported a single &lt;span class="caps"&gt;CSV&lt;/span&gt; file for each sheet in Calc,
so that we had a list of &lt;span class="caps"&gt;CSV&lt;/span&gt; files. With the template above and this collection
of &lt;span class="caps"&gt;CSV&lt;/span&gt; files it was easy to create a&amp;nbsp;new &lt;code&gt;Dictionary.txt&lt;/code&gt; for&amp;nbsp;Toolbox:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;codecs&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;glob&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Dictionary.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tbfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;tbfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\_sh v3.0  231  MDF 4.0&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Dictionary_database_NEW_*.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;csvfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;minderico&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csvfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dialect&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;excel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;delimiter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;quotechar&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minderico&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;header&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                        &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;tbfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TEMPLATE&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;KeyError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code even catches the error when a column name is wrong in the Excel sheet.
This will output a&amp;nbsp;file &lt;code&gt;Dictionary.txt&lt;/code&gt; that you can copy to your Toolbox
project folder to overwrite the&amp;nbsp;original &lt;code&gt;Dictionary.txt&lt;/code&gt;. With this we were
able to generate the whole dictionary in&amp;nbsp;Toolbox.&lt;/p&gt;</content><category term="Language"></category><category term="Toolbox"></category><category term="Excel"></category></entry><entry><title>Sirup, Scheiben und Kreissegmente mit SymPy</title><link href="https://www.peterbouda.eu/sirup-scheiben-und-kreissegmente-mit-sympy.html" rel="alternate"></link><published>2013-06-14T14:58:00+01:00</published><updated>2013-06-14T14:58:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2013-06-14:/sirup-scheiben-und-kreissegmente-mit-sympy.html</id><summary type="html">&lt;script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;
&lt;/script&gt;

&lt;p&gt;Ich lese gerade das durchaus empfehlenswerte Buch &lt;a href="http://www.amazon.de/
gp/product/048669609X/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=1638&amp;creative=6742&amp;cr
eativeASIN=048669609X&amp;linkCode=as2&amp;tag=jsusde-21"&gt;Foundations and Fundamental
Concepts of Mathematics&lt;/a&gt;&lt;img src="http://www.assoc-
amazon.de/e/ir?t=jsusde-21&amp;l=as2&amp;o=3&amp;a=048669609X" width="1" height="1"
border="0" alt="" style="border:none !important; margin:0px !important;" /&gt; von
Howard Eves. Das erste Kapitel handelt von vor-Euklidischer Mathematik und
schließt mit einer Reihe interessanter Aufgaben, über die sich schon die
Babylonier und Griechen den Kopf zerbrochen haben. Eine besonders schöne
Fragestellung geht so (Aufgabe&amp;nbsp;1 …&lt;/p&gt;</summary><content type="html">&lt;script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;
&lt;/script&gt;

&lt;p&gt;Ich lese gerade das durchaus empfehlenswerte Buch &lt;a href="http://www.amazon.de/
gp/product/048669609X/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=1638&amp;creative=6742&amp;cr
eativeASIN=048669609X&amp;linkCode=as2&amp;tag=jsusde-21"&gt;Foundations and Fundamental
Concepts of Mathematics&lt;/a&gt;&lt;img src="http://www.assoc-
amazon.de/e/ir?t=jsusde-21&amp;l=as2&amp;o=3&amp;a=048669609X" width="1" height="1"
border="0" alt="" style="border:none !important; margin:0px !important;" /&gt; von
Howard Eves. Das erste Kapitel handelt von vor-Euklidischer Mathematik und
schließt mit einer Reihe interessanter Aufgaben, über die sich schon die
Babylonier und Griechen den Kopf zerbrochen haben. Eine besonders schöne
Fragestellung geht so (Aufgabe&amp;nbsp;1.1.5):&lt;/p&gt;
&lt;p&gt;Eine Scheibe mit Radius R rotiert vertikal an einer horizontalen Achse. Die
Scheibe taucht dabei in eine Flüssigkeit ein, so dass ein Teil davon benetzt
wird. In welcher Höhe muss man die Scheibe über der Flüssigkeit befestigen,
damit die benetzte Fläche &lt;em&gt;über&lt;/em&gt; der Flüssigkeit maximal&amp;nbsp;wird?&lt;/p&gt;
&lt;p&gt;Das Problem trat anscheinend bei der Sirupherstellung in der Antike auf. Ich
habe das Ganze mal versucht zu zeichnen, die rote Fläche soll die gesuchte
benetzte Oberfläche&amp;nbsp;anzeigen:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Scheibe rotiert über Flüssigkeit" src="/static/images/sirupscheibe.png"&gt;&lt;/p&gt;
&lt;p&gt;Man sieht schnell, dass die benetzte Fläche durch das Eintauchen zunächst einmal
größer wird. Je tiefer man die Scheibe eintaucht, desto mehr von dieser Fläche
befindet sich dann aber unter der Oberfläche. Wir wollen jetzt also bestimmen,
wie tief wir die Scheibe maximal eintauchen dürfen, damit die Fläche über der
Flüssigkeit möglichst groß bleibt. Dabei lösen wir das Problem einmal empirisch,
also indem wir alle möglichen Werte ausprobieren und schauen bei welchen Werten
das Maximum auftritt. So wurde das Problem wohl damals gelöst, vor
Kurvendiskussionen. Danach werden wir die Formel differenzen und daraus das
Maximum&amp;nbsp;bestimmten.&lt;/p&gt;
&lt;p&gt;Zur Lösung des Problems verwende ich hier die Bibliothek
&lt;a href="http://sympy.org/"&gt;SymPy&lt;/a&gt;. Dieser Text wurde als &lt;a href="http://ipython.org/notebook.html"&gt;IPython
Notebook&lt;/a&gt; verfasst, dieses gibt es zum&amp;nbsp;Download:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pbouda/peterbouda.eu/blob/master/notebooks/sympy_
scheibensegment.ipynb"&gt;https://github.com/pbouda/peterbouda.eu/blob/master/notebooks/sympy_scheibenseg&amp;nbsp;ment.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Voraussetzungen&lt;/h2&gt;
&lt;p&gt;Wir setzen voraus, dass wir die Formeln für die Flächen der einzelnen Teile der
Scheibe berechnen können. Dazu&amp;nbsp;gehört:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;der gesamte Flächeninhalt der Scheibe: $$A_1 =&amp;nbsp;R^2\pi$$&lt;/li&gt;
&lt;li&gt;der Ring auf der Scheibe, der insgesamt bei Rotation mit der Flüssigkeit in
Berührung&amp;nbsp;kommt(wobei &lt;code&gt;r&lt;/code&gt; dann der Höhe der Achse über der Flüssigkeit
entspricht): $$A_2 =&amp;nbsp;r^2\pi$$&lt;/li&gt;
&lt;li&gt;der Teil der Scheibe, der jeweils unter Wasser ist (siehe
http://de.wikipedia.org/wiki/Kreissegment): $$A_3 = R^2\arccos{r\over R} -
r\sqrt{R^2 -&amp;nbsp;r^2}$$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Die von uns gesuchte Fläche ist dann einfach: $$A = A_1 - A_2 - A_3$$
also eingesetzt: $$A = R^2\pi - r^2\pi - R^2\arccos{r\over R} + r\sqrt{R^2 -&amp;nbsp;r^2}$$&lt;/p&gt;
&lt;p&gt;Diese Formel können wir gleich so in SymPy&amp;nbsp;übernehmen:&lt;/p&gt;
&lt;p&gt;In[54]:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;sympy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;load_ext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sympy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;interactive&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ipythonprinting&lt;/span&gt;

&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;symbols&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;r R&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;acos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;$$- R^{2} \operatorname{acos}{\left (\frac{r}{R} \right )} + \pi R^{2} - \pi r^{2} + r \sqrt{R^{2} -&amp;nbsp;r^{2}}$$&lt;/p&gt;
&lt;h2&gt;Empirisches&amp;nbsp;Maximum&lt;/h2&gt;
&lt;p&gt;Als Erstes wollen wir das Maximum empirisch bestimmen, also einfach gegebene
Werte&amp;nbsp;für &lt;code&gt;R&lt;/code&gt; und &lt;code&gt;r&lt;/code&gt; einsetzen und ausgeben. Dazu können wir als&amp;nbsp;zunächst &lt;code&gt;R&lt;/code&gt;
einen festen Wert zuweisen, ich nehme einfach 10 für den Radius der&amp;nbsp;Scheibe:&lt;/p&gt;
&lt;p&gt;In[52]:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;A_10 = A.subs(R, 10)
A_10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;$$- \pi r^{2} + r \sqrt{- r^{2} + 100} - 100 \operatorname{acos}{\left (\frac{1}{10} r \right )} + 100&amp;nbsp;\pi$$&lt;/p&gt;
&lt;p&gt;Für &lt;code&gt;r&lt;/code&gt; probieren wir jetzt Werte zwischen 0 und&amp;nbsp;9:&lt;/p&gt;
&lt;p&gt;In[55]:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{0}/10 -&amp;gt; {1}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;A_10&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;evalf&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;157.079632679490&lt;/span&gt;
&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;173.904656513122&lt;/span&gt;
&lt;span class="mf"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;184.244972086429&lt;/span&gt;
&lt;span class="mf"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;187.892740241230&lt;/span&gt;
&lt;span class="mf"&gt;4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;184.626440388448&lt;/span&gt;
&lt;span class="mf"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;174.200964088797&lt;/span&gt;
&lt;span class="mf"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;156.332408029586&lt;/span&gt;
&lt;span class="mf"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;130.671341314465&lt;/span&gt;
&lt;span class="mf"&gt;8&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;96.7472246499041&lt;/span&gt;
&lt;span class="mf"&gt;9&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;53.8176697304459&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Die benetzte Fläche ist hier also maximal&amp;nbsp;für &lt;code&gt;r = 3/10*R&lt;/code&gt; (also &lt;code&gt;r = 3&lt;/code&gt; für &lt;code&gt;R
= 10&lt;/code&gt;). Wir können uns die Werte zwischen 2 und 4&amp;nbsp;für &lt;code&gt;r&lt;/code&gt; noch genauer&amp;nbsp;anschauen:&lt;/p&gt;
&lt;p&gt;In[27]:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;numpy&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)]:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{0}&lt;/span&gt;&lt;span class="s2"&gt;/10 -&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;{1}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;A_10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;evalf&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;184.244972086429&lt;/span&gt;
&lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;184.914434156967&lt;/span&gt;
&lt;span class="mf"&gt;2.2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;185.516768466727&lt;/span&gt;
&lt;span class="mf"&gt;2.3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;186.051760290858&lt;/span&gt;
&lt;span class="mf"&gt;2.4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;186.519193409771&lt;/span&gt;
&lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;186.918850022558&lt;/span&gt;
&lt;span class="mf"&gt;2.6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;187.250510657582&lt;/span&gt;
&lt;span class="mf"&gt;2.7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;187.513954080027&lt;/span&gt;
&lt;span class="mf"&gt;2.8&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;187.708957196178&lt;/span&gt;
&lt;span class="mf"&gt;2.9&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;187.835294954213&lt;/span&gt;
&lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;187.892740241230&lt;/span&gt;
&lt;span class="mf"&gt;3.1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;187.881063776257&lt;/span&gt;
&lt;span class="mf"&gt;3.2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;187.800033998950&lt;/span&gt;
&lt;span class="mf"&gt;3.3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;187.649416953652&lt;/span&gt;
&lt;span class="mf"&gt;3.4000000000000004&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;187.428976168492&lt;/span&gt;
&lt;span class="mf"&gt;3.5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;187.138472529157&lt;/span&gt;
&lt;span class="mf"&gt;3.6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;186.777664146939&lt;/span&gt;
&lt;span class="mf"&gt;3.7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;186.346306220629&lt;/span&gt;
&lt;span class="mf"&gt;3.8&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;185.844150891815&lt;/span&gt;
&lt;span class="mf"&gt;3.9000000000000004&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;185.270947093061&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hier ist der Wert&amp;nbsp;bei &lt;code&gt;3.0&lt;/code&gt; maximal. Wir können also annehmen, dass die Höhe der
Scheibe in&amp;nbsp;etwa &lt;code&gt;3/10*R&lt;/code&gt; sein sollte. Das ist auch der Wert, der in der Antike
berechnet und dann für die Höhe der Scheibe verwendet&amp;nbsp;wurde.&lt;/p&gt;
&lt;h2&gt;Analytisches&amp;nbsp;Maximum&lt;/h2&gt;
&lt;p&gt;Das analytische Maximum bestimmen wir einfach aus der Ableitung&amp;nbsp;von &lt;code&gt;A&lt;/code&gt; nach
&lt;code&gt;r&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;In[33]:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;A_diff = diff(A, r, 1)
A_diff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;$$\frac{R}{\sqrt{1 - \frac{r^{2}}{R^{2}}}} - \frac{r^{2}}{\sqrt{R^{2} - r^{2}}} - 2 \pi r + \sqrt{R^{2} -&amp;nbsp;r^{2}}$$&lt;/p&gt;
&lt;p&gt;Es lohnt sich übrigens als Übung diese Ableitung auch einmal manuell aus der
Formel zu berechnen. Um die Extremwerte zu bestimmten setzen wir die Ableitung&amp;nbsp;auf &lt;code&gt;0&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;In[43]:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;extremwerte = solve(A_diff, r)
extremwerte
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;$$\begin{bmatrix}- \frac{\sqrt{R^{2}}}{\sqrt{1 + \pi^{2}}}, &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; \frac{\sqrt{R^{2}}}{\sqrt{1 + \pi^{2}}}, &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; - \frac{\pi \sqrt{R^{2}}}{\sqrt{1 + \pi^{2}}}, &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; \frac{\pi \sqrt{R^{2}}}{\sqrt{1 +&amp;nbsp;\pi^{2}}}\end{bmatrix}$$&lt;/p&gt;
&lt;p&gt;Die negativen Werte können wir in diesem Fall beseite lassen.&amp;nbsp;Für &lt;code&gt;R = 10&lt;/code&gt;
werden die anderen beiden Extremwerte&amp;nbsp;zu:&lt;/p&gt;
&lt;p&gt;In[48]:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;maximum = extremwerte[1].subs(R, 10).evalf()
minimum = extremwerte[3].subs(R, 10).evalf()
maximum, minimum
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;$$\begin{pmatrix}3.03314471053353, &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;9.52890513988687\end{pmatrix}$$&lt;/p&gt;
&lt;p&gt;Das es sich tatsächlich um ein Maximum und ein Minimum handelt sieht man zum
Beispiel, wenn man die Werte in die Formel&amp;nbsp;von &lt;code&gt;A_10&lt;/code&gt; einsetzt:&lt;/p&gt;
&lt;p&gt;In[51]:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;(A_10.subs(r, maximum).evalf(), A_10.subs(r, minimum).evalf())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;$$\begin{pmatrix}187.896539791088, &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;26.9881893328488\end{pmatrix}$$&lt;/p&gt;
&lt;p&gt;Alternativ kann man natürlich die zweite Ableitung bemühen. Das überlasse ich
dem Leser hiermit als&amp;nbsp;Übung.&lt;/p&gt;</content><category term="Python"></category></entry><entry><title>Video: Live Coding GLSL shaders with Python</title><link href="https://www.peterbouda.eu/video-live-coding-glsl-shaders-with-python.html" rel="alternate"></link><published>2013-05-23T17:43:00+01:00</published><updated>2013-05-23T17:43:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2013-05-23:/video-live-coding-glsl-shaders-with-python.html</id><content type="html">&lt;p&gt;Screencast of a (private) live coding session that demonstrates how to modify fragment shaders&amp;nbsp;on-the-fly.&lt;/p&gt;
&lt;p&gt;More info: &lt;a class="reference external" href="http://www.peterbouda.eu/live-coding-glsl-shaders-with-ipython.html"&gt;http://www.peterbouda.eu/live-coding-glsl-shaders-with-ipython.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Music by &lt;span class="caps"&gt;JD&lt;/span&gt; Bass: &lt;a class="reference external" href="https://soundcloud.com/jd-bass-jungleradical-cre/jd-bass-i-just-wanna-be-with"&gt;https://soundcloud.com/jd-bass-jungleradical-cre/jd-bass-i-just-wanna-be-with&lt;/a&gt;&lt;/p&gt;
</content><category term="Videos"></category><category term="Python"></category><category term="Live Coding"></category><category term="GLSL"></category><category term="Graphics"></category></entry><entry><title>Live coding GLSL shaders with IPython</title><link href="https://www.peterbouda.eu/live-coding-glsl-shaders-with-ipython.html" rel="alternate"></link><published>2013-05-23T12:59:00+01:00</published><updated>2013-05-23T12:59:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2013-05-23:/live-coding-glsl-shaders-with-ipython.html</id><summary type="html">&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/kmXRukIcyso?si=Su0U_Kqofej2J-0c" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;I recently started to learn some OpenGL and was looking for a nice way to use
Python for this. I wanted to be able to update the shaders quickly so that I
can quickly try out different code. This is one of the results. I was heavily
inspired by the …&lt;/p&gt;</summary><content type="html">&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/kmXRukIcyso?si=Su0U_Kqofej2J-0c" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;I recently started to learn some OpenGL and was looking for a nice way to use
Python for this. I wanted to be able to update the shaders quickly so that I
can quickly try out different code. This is one of the results. I was heavily
inspired by the live coding video of onomo.jp, in fact I practically copied
and adapted his code to get a&amp;nbsp;start:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://vimeo.com/51993089"&gt;http://vimeo.com/51993089&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The ideas and code of Cyrille Rossant was also very helpful, to get a start
with OpenGL in Python and&amp;nbsp;IPython:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://cyrille.rossant.net/2d-graphics-rendering-tutorial-with-pyopengl/"&gt;http://cyrille.rossant.net/2d-graphics-rendering-tutorial-with-pyopengl/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To get a start you can just run my gl_livecode.py script that I also use in
the beginning of the video. It is available as&amp;nbsp;gist:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://gist.github.com/pbouda/5531821"&gt;https://gist.github.com/pbouda/5531821&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To process the audio I just split the stream in two frequency bins, more or less
randomly. I didn&amp;#8217;t rely on anything sophisticated but just used what gave the
most beautiful visualization in the end. The update function currently looks
like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;move_stuff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;indata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wave&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;h&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;
    &lt;span class="n"&gt;fft_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rfft&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;indata&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;total_sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fft_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;spec_x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fft_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fft_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;spec_y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fft_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fft_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glUniform2f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spec_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spec_y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can easily change the &lt;cite&gt;move_stuff&lt;/cite&gt; function while the programm is running,
just use something like this in&amp;nbsp;IPython:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;move_stuff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;indata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wave&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;h&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;
    &lt;span class="n"&gt;fft_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rfft&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;indata&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;total_sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fft_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;spec_x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fft_data&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;220&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fft_data&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;220&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;spec_y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fft_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;220&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fft_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;220&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;gl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glUniform2f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spec_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spec_y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f_move&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MethodType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;move_stuff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;win&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GLPlotWidget&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;win&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;move_stuff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f_move&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This example changes the location and the size of the two frequency bins. To
update the fragment shader for&amp;nbsp;example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;FS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;#version 330&lt;/span&gt;
&lt;span class="s2"&gt;uniform vec2 resolution;&lt;/span&gt;
&lt;span class="s2"&gt;uniform vec2 spec;&lt;/span&gt;
&lt;span class="s2"&gt;uniform float time;&lt;/span&gt;

&lt;span class="s2"&gt;void main(void) {&lt;/span&gt;
&lt;span class="s2"&gt;  vec2 uv = 2.0 * (gl_FragCoord.xy / resolution) - 1.0;&lt;/span&gt;
&lt;span class="s2"&gt;  float col = 0.0;&lt;/span&gt;
&lt;span class="s2"&gt;  //uv = abs(uv);&lt;/span&gt;
&lt;span class="s2"&gt;  for (float i = 1.0; i&amp;lt;23.0; i++) {&lt;/span&gt;
&lt;span class="s2"&gt;      uv.y += sin(i*20.0 + spec.x*5.0 + time*6.0 + uv.x*.5) * spec.y*2.5;&lt;/span&gt;
&lt;span class="s2"&gt;      col += abs((.5*spec.x)/uv.y) * spec.y;&lt;/span&gt;
&lt;span class="s2"&gt;  }&lt;/span&gt;
&lt;span class="s2"&gt;  gl_FragColor = vec4(col,col,col,1.0);&lt;/span&gt;
&lt;span class="s2"&gt;}&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;win&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FS&lt;/span&gt;
&lt;span class="n"&gt;win&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link_shaders&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;win&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_uniforms&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then iterate. :-) Have&amp;nbsp;fun!&lt;/p&gt;
</content><category term="Live Coding"></category></entry><entry><title>Photos of a live coding session with dance in the theatre in Minde</title><link href="https://www.peterbouda.eu/photos-of-a-live-coding-session-with-dance-in-the-theatre-in.html" rel="alternate"></link><published>2013-03-05T10:26:00+00:00</published><updated>2013-03-05T10:26:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2013-03-05:/photos-of-a-live-coding-session-with-dance-in-the-theatre-in.html</id><content type="html">&lt;p&gt;&lt;img alt="image0" src="/images/dancecoding/tumblr_mj6nonfMZH1qkig5yo1_500.png" /&gt;
&lt;img alt="image1" src="/images/dancecoding/tumblr_mj6nonfMZH1qkig5yo2_500.png" /&gt;
&lt;img alt="image2" src="/images/dancecoding/tumblr_mj6nonfMZH1qkig5yo3_500.png" /&gt;
&lt;img alt="image3" src="/images/dancecoding/tumblr_mj6nonfMZH1qkig5yo4_500.png" /&gt;
&lt;img alt="image4" src="/images/dancecoding/tumblr_mj6nonfMZH1qkig5yo5_500.png" /&gt;&lt;/p&gt;
&lt;p&gt;Photos of a live coding session with dance in the theatre in
Minde/Portugal. Heavily inspired by &lt;a class="reference external" href="http://vimeo.com/30133155"&gt;dancecoding in Budapest&lt;/a&gt;. We used
&lt;a class="reference external" href="http://www.pawfal.org/fluxus/"&gt;fluxus&lt;/a&gt; and &lt;a class="reference external" href="http://pytools.codeplex.com/"&gt;Python Tools for Visual Studio&lt;/a&gt; for Kinect&amp;nbsp;programming.&lt;/p&gt;
</content><category term="Live Coding"></category></entry><entry><title>IPython and Javascript interaction</title><link href="https://www.peterbouda.eu/ipython-and-javascript-interaction.html" rel="alternate"></link><published>2013-01-24T11:56:00+00:00</published><updated>2013-01-24T11:56:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2013-01-24:/ipython-and-javascript-interaction.html</id><summary type="html">&lt;p&gt;This &lt;a class="reference external" href="http://ipython.org/ipython-doc/dev/interactive/htmlnotebook.html"&gt;IPython notebook&lt;/a&gt; demonstrates the interaction between Python and
a popup window that is opened via Javascript. The interaction is one-way
in this case, from the notebook to the popup. We write data to the popup
and call functions in the popup by executing Javascript from within the
notebook. The …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This &lt;a class="reference external" href="http://ipython.org/ipython-doc/dev/interactive/htmlnotebook.html"&gt;IPython notebook&lt;/a&gt; demonstrates the interaction between Python and
a popup window that is opened via Javascript. The interaction is one-way
in this case, from the notebook to the popup. We write data to the popup
and call functions in the popup by executing Javascript from within the
notebook. The goal is to demonstrate some simple interactions. In the
end, I hope that techniques like these could be used for &lt;a class="reference external" href="http://toplap.org/"&gt;livecoding&lt;/a&gt;
in Python, with a &lt;span class="caps"&gt;HTML5&lt;/span&gt; visualization&amp;nbsp;window.&lt;/p&gt;
&lt;p&gt;First, the notebook server and the &lt;span class="caps"&gt;HTML&lt;/span&gt; that we load in the popup must
be located on the same domain. For this, we need to copy the
&lt;a class="reference external" href="https://raw.github.com/pbouda/stuff/master/ipynb/index.html"&gt;index.html&lt;/a&gt; to the root directory of the IPython server.
Unfortunately, it is not easy to find out what the root directory is.
The default is the home directory of the user, so if you didn’t mess
with your config just copy the html file to your home directory. If you
changed your config you probably know whether you changed the root (it’s
the setting &lt;tt class="docutils literal"&gt;ipython_dir&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;index.html&lt;/tt&gt; contains an empty &lt;a class="reference external" href="http://bl.ocks.org/2595950"&gt;D3 scatterplot&lt;/a&gt; that we will fill
with data from within this notebook. The notebook is available on Github&amp;nbsp;here:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/stuff/blob/master/ipynb/Javascript%20Interactions%20I.ipynb"&gt;https://github.com/pbouda/stuff/blob/master/ipynb/Javascript%20Interactions%20I.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="open-a-browser-popup"&gt;
&lt;h2&gt;Open a browser&amp;nbsp;popup&lt;/h2&gt;
&lt;p&gt;IPython contains several helper methods in &lt;tt class="docutils literal"&gt;IPython.display&lt;/tt&gt; to output
&lt;span class="caps"&gt;HTML&lt;/span&gt;, Javascript, etc. to the current cell’s output. We use those
helpers to write Javascript that opens a popup window. We save a
reference to the opened window in &lt;tt class="docutils literal"&gt;window.audiencePopup&lt;/tt&gt;. We can later
access the open popup via this reference. First, we open some &lt;span class="caps"&gt;URL&lt;/span&gt; to see
if something simple&amp;nbsp;works:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;IPython.display&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HTML&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Javascript&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;display&lt;/span&gt;
&lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;window.audiencePopup = window.open(&amp;#39;http://www.heise.de&amp;#39;,&amp;#39;audienceWindow&amp;#39;);&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Javascript&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="change-the-location"&gt;
&lt;h2&gt;Change the&amp;nbsp;location&lt;/h2&gt;
&lt;p&gt;We are now able to change the &lt;span class="caps"&gt;URL&lt;/span&gt; of the popup. We set the &lt;span class="caps"&gt;URL&lt;/span&gt; to the
local &lt;tt class="docutils literal"&gt;index.html&lt;/tt&gt; that you downloaded above. We have to prepend
&lt;tt class="docutils literal"&gt;/files/&lt;/tt&gt; so that the IPython server knows that we are looking for a
local, static file. The notebook server then serves this file to the
popup&amp;nbsp;window:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;window.audiencePopup.location.href = &amp;quot;/files/index.html&amp;quot;;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Javascript&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As said above, the &lt;tt class="docutils literal"&gt;index.html&lt;/tt&gt; has to be served from the same domain
as your current IPython notebook for security reasons. If everything
works than you should now see the empty scatterplot in the&amp;nbsp;popup.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="write-some-data-to-the-popup"&gt;
&lt;h2&gt;Write some data to the&amp;nbsp;popup&lt;/h2&gt;
&lt;p&gt;We will now write some data to the popup. If you look into
&lt;tt class="docutils literal"&gt;index.html&lt;/tt&gt; you will see a Javascript variable &lt;tt class="docutils literal"&gt;data&lt;/tt&gt; that contains
an empty list. The scatterplot is created from coordinates in that list.
In the first step we will set the &lt;tt class="docutils literal"&gt;data&lt;/tt&gt; variable to a Python list of
coordinates. For this we just have to convert the Python list to a &lt;span class="caps"&gt;JSON&lt;/span&gt;
string and set the Javascript variabel to a parsed version of that &lt;span class="caps"&gt;JSON&lt;/span&gt;
string. We use the Javascript function &lt;tt class="docutils literal"&gt;&lt;span class="caps"&gt;JSON&lt;/span&gt;.parse&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;window.audiencePopup.data = JSON.parse(&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;{0}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;);&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Javascript&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The scatterplot don’t change, because we have to tell it to update
itself first. But you can already have a look the the content of the
&lt;tt class="docutils literal"&gt;data&lt;/tt&gt; variable in the popup window. We just display the value in an
&lt;tt class="docutils literal"&gt;alert&lt;/tt&gt; window:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;alert(window.audiencePopup.data);&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Javascript&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;index.html&lt;/tt&gt; also containts a function &lt;tt class="docutils literal"&gt;update()&lt;/tt&gt; that we can
just call to repaint the scatterplot. Again, we are able to call this
Javascript function directly from within the current&amp;nbsp;notebook:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;window.audiencePopup.update();&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Javascript&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should now see the data points in the scatterplot. You can see a
screencast where I execute this notebook&amp;nbsp;here:&lt;/p&gt;
&lt;video poster="https://s3.amazonaws.com/peterbouda.eu/IPython+and+Javascript+interaction.png" style="width:100%" preload="none" controls="" tabindex="0"&gt;
   &lt;source type="video/mp4" src="https://s3.amazonaws.com/peterbouda.eu/IPython+and+Javascript+interaction.m4v"&gt;&lt;/source&gt;
&lt;/video&gt;&lt;/div&gt;
</content><category term="Python"></category><category term="Python"></category><category term="Javascript"></category><category term="IPython"></category></entry><entry><title>XBox Kinect and the Python Tools for Visual Studio</title><link href="https://www.peterbouda.eu/i-played-around-with-an-xbox-kinect-and-the-python-tools-for.html" rel="alternate"></link><published>2013-01-16T11:20:00+00:00</published><updated>2013-01-16T11:20:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2013-01-16:/i-played-around-with-an-xbox-kinect-and-the-python-tools-for.html</id><content type="html">&lt;p&gt;I played around with an XBox Kinect and the &lt;a class="reference external" href="http://pytools.codeplex.com/"&gt;Python Tools for Visual
Studio&lt;/a&gt; last week. The resulting video shows a combination of the Depth
Image, Skeleton Tracking and certain &lt;a class="reference external" href="http://pygame.org"&gt;pygame&lt;/a&gt; effects based on &lt;a class="reference external" href="http://numpy.scipy.org/"&gt;numpy&lt;/a&gt;
and &lt;a class="reference external" href="http://scipy.org/"&gt;scipy&lt;/a&gt;&amp;nbsp;calculations.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/stuff/tree/master/dances/WaterDance2"&gt;https://github.com/pbouda/stuff/tree/master/dances/WaterDance2&lt;/a&gt;&lt;/p&gt;
&lt;iframe width="420" height="315" src="http://www.youtube.com/embed/UxeFgbH10HE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="Python"></category></entry><entry><title>Annotation graphs and the IPython notebook</title><link href="https://www.peterbouda.eu/annotation-graphs-and-the-ipython-notebook.html" rel="alternate"></link><published>2012-12-18T10:53:00+00:00</published><updated>2012-12-18T10:53:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2012-12-18:/annotation-graphs-and-the-ipython-notebook.html</id><summary type="html">&lt;p&gt;I recently became obsessed with annotation graphs and linguistic graphs
in general. Since September I am working with the &lt;a class="reference external" href="https://github.com/cidles/graf-python"&gt;graf-python&lt;/a&gt; library
that implements the &lt;a class="reference external" href="http://www.iso.org/iso/catalogue_detail.htm?csnumber=37326"&gt;&lt;span class="caps"&gt;ISO&lt;/span&gt; 24612 - Linguistic annotation framework (&lt;span class="caps"&gt;LAF&lt;/span&gt;)&lt;/a&gt;
standard. I planned to publish the corpora of our research center in an
&lt;span class="caps"&gt;XML&lt;/span&gt; format that is easy to use …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently became obsessed with annotation graphs and linguistic graphs
in general. Since September I am working with the &lt;a class="reference external" href="https://github.com/cidles/graf-python"&gt;graf-python&lt;/a&gt; library
that implements the &lt;a class="reference external" href="http://www.iso.org/iso/catalogue_detail.htm?csnumber=37326"&gt;&lt;span class="caps"&gt;ISO&lt;/span&gt; 24612 - Linguistic annotation framework (&lt;span class="caps"&gt;LAF&lt;/span&gt;)&lt;/a&gt;
standard. I planned to publish the corpora of our research center in an
&lt;span class="caps"&gt;XML&lt;/span&gt; format that is easy to use, that is somehow officially recognized
and that allows stand-off annotations so that I can share data and sets
of annotations independently. GrAF/&lt;span class="caps"&gt;XML&lt;/span&gt; looked like an optimal solution,
so I gave it a&amp;nbsp;try.&lt;/p&gt;
&lt;p&gt;First, I published a subset of the data of the &lt;a class="reference external" href="http://www.quanthistling.info/"&gt;QuantHistLing&lt;/a&gt; project
as GrAF/&lt;span class="caps"&gt;XML&lt;/span&gt; files. I wrote a tutorial how to access the data in Python
&lt;a class="reference external" href="http://graf-python.readthedocs.org/en/latest/Querying%20GrAF%20graphs.html"&gt;which is available as part of the graf-python documentation&lt;/a&gt;. But I
also had the idea of making the dictionary data of the project more
accessible to researchers. One thing we commonly use in language
comparison are &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Swadesh_list"&gt;Swadesh lists&lt;/a&gt; that contain a fixed set of words for
200 concepts that are supposed to be general and exist in most of the
languages. As most of our dictionaries contain a Spanish translation my
idea was to connect the dictionaries via those translations, but only
use the words of the Spanish Swadesh list. I developed an &lt;a class="reference external" href="http://ipython.org/ipython-doc/dev/interactive/htmlnotebook.html"&gt;IPython
notebook&lt;/a&gt; to connect the dictionaries of the Witotoan language family
via the stem of the Spanish word &lt;em&gt;comer&lt;/em&gt;. I basically transformed the
annotation graphs from GrAF into a &lt;a class="reference external" href="http://networkx.lanl.gov/"&gt;networkX&lt;/a&gt; graph that I could easily
visualize using the &lt;a class="reference external" href="http://d3js.org/"&gt;D3 javascript library&lt;/a&gt;:&lt;/p&gt;
&lt;iframe class="gist-src" style="border: 1px solid #DEDEDE; height: 500px; width: 100%" marginwidth="0" marginheight="0" scrolling="no" src="http://bl.ocks.org/d/4250342/"&gt;&lt;/iframe&gt;&lt;p&gt;Published at &lt;a class="reference external" href="http://bl.ocks.org/4250342"&gt;http://bl.ocks.org/4250342&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can find an in-depth description about the transformation and the
complete notebook &lt;a class="reference external" href="http://graf-python.readthedocs.org/en/latest/Translation%20Graph%20from%20GrAF.html"&gt;in another turotial for graf-python&lt;/a&gt;. It already
looks quite nice, &lt;span class="caps"&gt;IMO&lt;/span&gt;. I am now trying to make the visualization more
useful to linguists, by providing more interactivity and maybe search
options to query for words or sets of words. As an intermediate summary
I can already tell that IPython helped a lot in working interactively
with linguistic data in this case. I could try out different ways to
combine and visualize graphs easily and use a &lt;span class="caps"&gt;JSON&lt;/span&gt; representation of
Python data structures to publish the results in a &lt;span class="caps"&gt;HTML&lt;/span&gt;/Javascript
application. Right now I save the &lt;span class="caps"&gt;JSON&lt;/span&gt; data into files and I am still
looking for a way to directly stream the data from IPython to Javascript
somehow. There are different ways how Python and Javascript can interact
in an IPython notebook, the “official” solution is to provide an &lt;span class="caps"&gt;HTML&lt;/span&gt;
representation of the Python objects as far as I understand. My goal is
to completely decouple the two if&amp;nbsp;possible.&lt;/p&gt;
</content><category term="Language"></category><category term="AG"></category><category term="IPython"></category></entry><entry><title>Personal social web</title><link href="https://www.peterbouda.eu/personal-social-web.html" rel="alternate"></link><published>2012-11-20T13:19:00+00:00</published><updated>2012-11-20T13:19:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2012-11-20:/personal-social-web.html</id><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://tent.io/"&gt;tent.io&lt;/a&gt; looks like the best alternative to centralized social
networks at the moment. It seems to be really focussed on sharing stuff,
while setup of your own server looks straight-forward. Similar to
e-mail, as they state. Definitely something I will try out in the near&amp;nbsp;future.&lt;/p&gt;
</content><category term="Treasures"></category></entry><entry><title>Mozilla Festival in London</title><link href="https://www.peterbouda.eu/mozilla-festival-in-london.html" rel="alternate"></link><published>2012-10-25T09:07:00+01:00</published><updated>2012-10-25T09:07:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2012-10-25:/mozilla-festival-in-london.html</id><summary type="html">&lt;p&gt;Next week I am taking of to the &lt;a class="reference external" href="http://mozillafestival.org/"&gt;Mozilla Festival&lt;/a&gt; in the city of
London. And I just can’t wait, I am really looking forward to it! Here
are a few of the expected&amp;nbsp;highlights:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The &lt;a class="reference external" href="http://meemoo.org/"&gt;Meemoo&lt;/a&gt; project will there, i.e. Forrest Oliphant, the guy
behind the project …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Next week I am taking of to the &lt;a class="reference external" href="http://mozillafestival.org/"&gt;Mozilla Festival&lt;/a&gt; in the city of
London. And I just can’t wait, I am really looking forward to it! Here
are a few of the expected&amp;nbsp;highlights:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The &lt;a class="reference external" href="http://meemoo.org/"&gt;Meemoo&lt;/a&gt; project will there, i.e. Forrest Oliphant, the guy
behind the project, will attend. I found Meemoo a while ago while
looking for live coding environments. Check out &lt;a class="reference external" href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=T_tCyYGLWKM"&gt;this video&lt;/a&gt; and see
what Meemoo can do. As far as I could find out Forrest will perform
live together with slub at the party on Saturday, which brings me to
the second&amp;nbsp;highlight…&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://slub.org/"&gt;slub&lt;/a&gt; will perform! I really appreciate the work of &lt;a class="reference external" href="http://www.pawfal.org/dave/blog/about/"&gt;Dave
Griffiths&lt;/a&gt;, one of the slub performers. Dave is very active as live
coder and also in a few artistic project that build just cool things
all over Europe. Check out his website and especially the stuff about
the Fluxus environment. I try to use it from time to time and wish I
had more time to play with&amp;nbsp;it.&lt;/li&gt;
&lt;li&gt;Last but not least I hope to learn more about Firefox &lt;span class="caps"&gt;OS&lt;/span&gt;. After the
sudden death of MeeGo and Nokia’s switch to Windows Phone, I feel
quite excited about Firefox &lt;span class="caps"&gt;OS&lt;/span&gt; getting published next year. I still
have my N950 developer device around and tried to install the N9 port
of Firefox &lt;span class="caps"&gt;OS&lt;/span&gt; recently, without success yet. Hope to see it live in&amp;nbsp;London.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And I am sure there is a lot of other stuff that I will enjoy. It’s just
one week before Codebits, where I will give &lt;a class="reference external" href="https://codebits.eu/intra/s/session/274"&gt;a talk&lt;/a&gt; this year about my
views on programming as a basic knowledge. I will definitely learn a lot
during the Mozilla Festival about it, to share it then the week after.
This will be just a great&amp;nbsp;November!&lt;/p&gt;
</content><category term="Treasures"></category></entry><entry><title>Kinect, PyGame, Numpy, SciPy</title><link href="https://www.peterbouda.eu/kinect-pygame-numpy-scipy.html" rel="alternate"></link><published>2012-01-26T11:34:00+00:00</published><updated>2012-01-26T11:34:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2012-01-26:/kinect-pygame-numpy-scipy.html</id><summary type="html">&lt;p&gt;Ich habe die letzten Wochen ein bisschen mit den &lt;a class="reference external" href="http://pytools.codeplex.com/"&gt;Python Tools für
Visual Studio&lt;/a&gt; herumgespielt, auf der Website gibt es mit PyKinect
einen schönen Wrapper um das offizielle Kinect-&lt;span class="caps"&gt;SDK&lt;/span&gt; von Microsoft. Ich
wollte das mit einem Wassereffekt auf Basis von PyGame und Numpy
kombinieren, den habe ich &lt;a class="reference external" href="http://www.pygame.org/pcr/water/index.php"&gt;hier&lt;/a&gt; gefunden …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ich habe die letzten Wochen ein bisschen mit den &lt;a class="reference external" href="http://pytools.codeplex.com/"&gt;Python Tools für
Visual Studio&lt;/a&gt; herumgespielt, auf der Website gibt es mit PyKinect
einen schönen Wrapper um das offizielle Kinect-&lt;span class="caps"&gt;SDK&lt;/span&gt; von Microsoft. Ich
wollte das mit einem Wassereffekt auf Basis von PyGame und Numpy
kombinieren, den habe ich &lt;a class="reference external" href="http://www.pygame.org/pcr/water/index.php"&gt;hier&lt;/a&gt; gefunden. Heraus kam&amp;nbsp;das:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://teatrominde.tumblr.com/#15777992755"&gt;http://teatrominde.tumblr.com/#15777992755&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/stuff/blob/master/dances/WaterDance/WaterDance/Program.py"&gt;https://github.com/pbouda/stuff/blob/master/dances/WaterDance/WaterDance/Program.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Das Tiefenbild habe ich noch per Gauss-Filter aus SciPy verschönert,
damit es nicht so kantig aussieht. Alles läuft auf meinem Notebook recht
flüssig, das ist schon beeindruckend. Python gilt als langsam, ist es
wohl auch, aber für die meisten Zwecke reicht es dann&amp;nbsp;doch.&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>Zwischendrin</title><link href="https://www.peterbouda.eu/zwischendrin-dasskriptcom.html" rel="alternate"></link><published>2011-12-29T15:47:00+00:00</published><updated>2011-12-29T15:47:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-12-29:/zwischendrin-dasskriptcom.html</id><summary type="html">&lt;p&gt;In letzter Zeit war es hier leider recht ruhig, Arbeit und andere
Aktivitäten hielten mich weitgehend vom Posten ab. Das soll sich ab
jetzt aber wieder ändern. Hier erst einmal ein kleiner Zwischenbericht,
was in letzter Zeit so passiert&amp;nbsp;ist:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ich war bei der &lt;a class="reference external" href="https://codebits.eu/"&gt;Codebits&lt;/a&gt; in Lissabon. Eine sehr feine …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;In letzter Zeit war es hier leider recht ruhig, Arbeit und andere
Aktivitäten hielten mich weitgehend vom Posten ab. Das soll sich ab
jetzt aber wieder ändern. Hier erst einmal ein kleiner Zwischenbericht,
was in letzter Zeit so passiert&amp;nbsp;ist:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ich war bei der &lt;a class="reference external" href="https://codebits.eu/"&gt;Codebits&lt;/a&gt; in Lissabon. Eine sehr feine
Veranstaltung rund um einen 48-Stunden-Programmierwettbewerb. Wobei
es eher um die Kreativität geht als um Code-Qualität oder Ähnliches.
Und dieses Jahr &lt;a class="reference external" href="http://www.publico.pt/Tecnologia/programacao-com-lego-vence-quinta-edicao-do-codebits-1520682"&gt;haben wir den ersten Preis gewonnen&lt;/a&gt;! Hingefahren
bin ich mit einer groben Idee, zurück kam ich dann mit einem Haufen
Technik. Ich hatte aber auch großartige Unterstützung von Pedro und
Rosana, die ich erst bei der Veranstaltung kennengelernt habe und die
zusammen mit mir das Lego-Coding-Team gebildet haben. Danke an alle!
Und vielleicht gibt&amp;#8217;s hier bald mehr über das Projekt zu&amp;nbsp;berichten&amp;#8230;&lt;/li&gt;
&lt;li&gt;Mein erstes Buch ist fertig! &lt;a class="reference external" href="http://www.amazon.de/gp/product/3941841505/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;amp;tag=jsusde-21&amp;amp;linkCode=as2&amp;amp;camp=1638&amp;amp;creative=6742&amp;amp;creativeASIN=3941841505"&gt;PyQt und PySide. &lt;span class="caps"&gt;GUI&lt;/span&gt;- und
Anwendungsentwicklung mit Python und Qt&lt;/a&gt;&lt;img alt="image0" src="http://www.assoc-amazon.de/e/ir?t=jsusde-21&amp;amp;l=as2&amp;amp;o=3&amp;amp;a=3941841505" /&gt;. Gibt es ab
Januar in jedem gut sortiertem Buchladen. Mit
zahlreichen Highlights über die &lt;span class="caps"&gt;GUI&lt;/span&gt;-Entwicklung mit Python, PyQt und
PySide wie eine komplette Einführung in &lt;span class="caps"&gt;QML&lt;/span&gt; und die
Anwendungspaketerstellung für Linux und Windows. Wer schon immer
einmal wissen wollte, wie man Anwendungen samt Installer
plattformunabhängig entwickelt, der sollte sich das Werk unbedingt&amp;nbsp;zulegen.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Soweit erst einmal für heute. Ich wünsche allen Lesern einen guten
Rutsch ins Neue Jahr&amp;nbsp;2012!&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Maschinenlernen für Fortgeschrittene</title><link href="https://www.peterbouda.eu/maschinenlernen-fur-fortgeschrittene.html" rel="alternate"></link><published>2011-10-07T13:57:00+01:00</published><updated>2011-10-07T13:57:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-10-07:/maschinenlernen-fur-fortgeschrittene.html</id><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://arstechnica.com/science/news/2011/07/running-high-performance-neural-networks-on-a-gamer-gpu.ars/1"&gt;Dieser Artikel&lt;/a&gt; beschreibt recht eindrucksvoll mit welchen Methoden
die Radiochemie heutzutage arbeitet. Und was man doch mit Python alles
machen kann. Ich habe einen Vortrag darüber auf der EuroSciPy 2011 in
Paris gehört, und war mehr als beeindruckt. Nicht nur wegen der&amp;nbsp;Hardware&amp;#8230;&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>Processing in Javascript in QML in Python</title><link href="https://www.peterbouda.eu/processing-in-javascript-in-qml-in-python.html" rel="alternate"></link><published>2011-09-05T10:31:00+01:00</published><updated>2011-09-05T10:31:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-09-05:/processing-in-javascript-in-qml-in-python.html</id><summary type="html">&lt;p&gt;Es gibt gute und vernünftige Gründe, warum man Desktop-Anwendungen mit
Python und PySide entwickeln sollte. Aber man kann damit einfach auch
nur Spaß haben. Diesen hatte ich auch, letzte Woche. Und das ist daraus&amp;nbsp;geworden:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/Process"&gt;https://github.com/pbouda/Process&lt;/a&gt;-&lt;/p&gt;
&lt;p&gt;Eine &lt;a class="reference external" href="http://processing.org"&gt;Processing&lt;/a&gt;-Variante auf Javascript-Basis, die in einer
&lt;span class="caps"&gt;QML&lt;/span&gt;-Webkit-Komponente …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Es gibt gute und vernünftige Gründe, warum man Desktop-Anwendungen mit
Python und PySide entwickeln sollte. Aber man kann damit einfach auch
nur Spaß haben. Diesen hatte ich auch, letzte Woche. Und das ist daraus&amp;nbsp;geworden:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/pbouda/Process"&gt;https://github.com/pbouda/Process&lt;/a&gt;-&lt;/p&gt;
&lt;p&gt;Eine &lt;a class="reference external" href="http://processing.org"&gt;Processing&lt;/a&gt;-Variante auf Javascript-Basis, die in einer
&lt;span class="caps"&gt;QML&lt;/span&gt;-Webkit-Komponente läuft, die wiederum von Python geladen wird. Viel
Spaß&amp;nbsp;damit!&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>Memory Profiling Tools für Python, Teil 2</title><link href="https://www.peterbouda.eu/memory-profiling-tools-fur-python-teil-2.html" rel="alternate"></link><published>2011-09-02T11:33:00+01:00</published><updated>2011-09-02T11:33:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-09-02:/memory-profiling-tools-fur-python-teil-2.html</id><summary type="html">&lt;p&gt;Kaum hatte ich den &lt;a class="reference external" href="https://www.peterbouda.eu/speicherlecks-in-python-skripten-finden.html"&gt;vorhergehenden Blogeintrag&lt;/a&gt; fertig, bin ich mehr
oder weniger zufällig auf zwei weitaus interessantere Projekte gestoßen,
die Speicherlecks in Python-Anwendungen aufspüren sollen. Hier also, der
Vollständigkeit&amp;nbsp;halber:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://launchpad.net/meliae"&gt;Meliae&lt;/a&gt;: Für Python 2, wird aber im Gegensatz zu heapy aktiv weiter
entwickelt. Für meine Zwecke aber derzeit unbrauchbar, bis …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Kaum hatte ich den &lt;a class="reference external" href="https://www.peterbouda.eu/speicherlecks-in-python-skripten-finden.html"&gt;vorhergehenden Blogeintrag&lt;/a&gt; fertig, bin ich mehr
oder weniger zufällig auf zwei weitaus interessantere Projekte gestoßen,
die Speicherlecks in Python-Anwendungen aufspüren sollen. Hier also, der
Vollständigkeit&amp;nbsp;halber:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://launchpad.net/meliae"&gt;Meliae&lt;/a&gt;: Für Python 2, wird aber im Gegensatz zu heapy aktiv weiter
entwickelt. Für meine Zwecke aber derzeit unbrauchbar, bis es auch
mit Python 3&amp;nbsp;funktioniert.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://fedorahosted.org/gdb-heap/"&gt;gdb-heap&lt;/a&gt;: dies scheint aber nun wirklich der beste Ansatz zu sein:
über die Python-Schnittstelle von gdb klinkt man sich direkt in eine
laufende Anwendung ein und schaut sich im Speicher um. Es gibt ein
spezielles Python-Modul zur Analyse der einzelnen Objekte, das an die
Speicherverwaltung von Python angepasst ist. Einziger Wermutstropfen:
das Tool scheint sehr an die gdb-Version von Fedora gebunden zu sein.
Bei einem kurzen Versuch unter Ubuntu wollte jedenfalls das
Python-Modul nicht starten. Definitiv aber ein Projekt, das ich
weiter beobachten werde. Auf der Seite findet sich außerdem ein Link
auf &lt;a class="reference external" href="http://blip.tv/file/4878749?filename=Pycon-PyCon2011DudeWheresMyRAMADeepDiveIntoHowPythonUses441.ogv"&gt;einen Vortrag auf der PyCon &lt;span class="caps"&gt;US&lt;/span&gt; 2011&lt;/a&gt;, der sehr schön die
einzelnen Ansätze zur Speicheranalyse unter Python&amp;nbsp;erklärt.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Python"></category></entry><entry><title>Speicherlecks in Python-Skripten finden</title><link href="https://www.peterbouda.eu/speicherlecks-in-python-skripten-finden.html" rel="alternate"></link><published>2011-08-19T11:10:00+01:00</published><updated>2011-08-19T11:10:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-08-19:/speicherlecks-in-python-skripten-finden.html</id><summary type="html">&lt;p&gt;Da ich gerade ein kleines Speicherproblem mit einer Python-Anwendung
hatte (und ich dachte schon, 8 &lt;span class="caps"&gt;GB&lt;/span&gt; &lt;span class="caps"&gt;RAM&lt;/span&gt; reichen erst einmal&amp;#8230;), habe ich
mich mal nach einem Memory-Profiler für Python-Skripte umgeschaut. Und
leider nichts Vernünftiges gefunden. Was auch daran liegt, dass ich
komplett auf Python 3 umgestiegen bin, und die Python-2-Profiler …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Da ich gerade ein kleines Speicherproblem mit einer Python-Anwendung
hatte (und ich dachte schon, 8 &lt;span class="caps"&gt;GB&lt;/span&gt; &lt;span class="caps"&gt;RAM&lt;/span&gt; reichen erst einmal&amp;#8230;), habe ich
mich mal nach einem Memory-Profiler für Python-Skripte umgeschaut. Und
leider nichts Vernünftiges gefunden. Was auch daran liegt, dass ich
komplett auf Python 3 umgestiegen bin, und die Python-2-Profiler dann
leider komplett den Dienst versagen. Hier mal drei Pakete, die wohl
unter Python 2 funktionieren&amp;nbsp;sollen:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://guppy-pe.sourceforge.net/#Heapy"&gt;heapy&lt;/a&gt;: Ist angeblich das komplexeste, aber auch beste aller Tools.
Als Ergebnis einer Master-Thesis entstanden, die es auch auf der
Webseite zum Herunterladen gibt. Portierung auf Python 3 wohl nicht
in Sicht. Und nach kurzer Ansicht des Quellcodes wohl auch nicht mal
an einem Nachmittag&amp;nbsp;durchführbar.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pysizer.8325.org/"&gt;PySizer&lt;/a&gt;: Weniger mächtig als heapy, und noch älter. Portierung
nicht in&amp;nbsp;Sichtweite.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.aminus.net/wiki/Dowser"&gt;dowser&lt;/a&gt;: Die einfachste Art und Weise für Memory-Profiling. Das
Tool lässt sich äußerst einfach in eigene Python-Skripte einbinden
und stellt die Information dann per cherrypy zur Verfügung. So hat
man während der Laufzeit des Skripts in einem Webbrowser einen
Überblick über die aktuellen Objekte und deren Speicherverbrauch. Ich
habe es fast geschafft, das Ding unter Python 3 zum Laufen zu
bringen; allerdings benutzt es die Python Imaging Library, für die es
noch keine vernünftige Python-3-Version gibt. So fehlen auf der
Ausgabe-Webseite dann die Bilder. Außerdem konnte ich die
&lt;span class="caps"&gt;TRACE&lt;/span&gt;-Seiten nicht öffnen. Es waren wohl einfach zu viele Objekte in
meinem&amp;nbsp;Skript.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Wieder einmal das leidige Thema: Python 3 ist bestimmt toll, aber wenn
es halt jeder ignoriert werden wir in 10 Jahren immer noch Anwendungen
unter Python 2.x entwickeln. Übrigens habe ich letztendlich einen
anderen Weg für das Speicherproblem gefunden. Das Problem war ein
Parser; mit regulären Audrücken komme ich jetzt mit weniger Speicher und
viel schneller ans&amp;nbsp;Ziel.&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>Automatisierung von uic und rcc</title><link href="https://www.peterbouda.eu/automatisierung-von-uic-und-rcc.html" rel="alternate"></link><published>2011-08-09T16:17:00+01:00</published><updated>2011-08-09T16:17:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-08-09:/automatisierung-von-uic-und-rcc.html</id><summary type="html">&lt;p&gt;In einem PyQt- oder PySide-Projekt verwaltet man oft ein oder mehrere Ressourcen- und &lt;span class="caps"&gt;UI&lt;/span&gt;-Dateien. Diese Dateien erstellt man in einem C++-Qt-Projekt innerhalb des Qt Creator mit dem Qt Designer, mit den&amp;nbsp;Kommandozeilen-Utilities &lt;code&gt;uic&lt;/code&gt; bzw. &lt;code&gt;rcc&lt;/code&gt; werden diese Dateien dann in C++-Code umgewandelt. Der Qt Creator bzw. Projektdatei …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In einem PyQt- oder PySide-Projekt verwaltet man oft ein oder mehrere Ressourcen- und &lt;span class="caps"&gt;UI&lt;/span&gt;-Dateien. Diese Dateien erstellt man in einem C++-Qt-Projekt innerhalb des Qt Creator mit dem Qt Designer, mit den&amp;nbsp;Kommandozeilen-Utilities &lt;code&gt;uic&lt;/code&gt; bzw. &lt;code&gt;rcc&lt;/code&gt; werden diese Dateien dann in C++-Code umgewandelt. Der Qt Creator bzw. Projektdatei&amp;nbsp;und &lt;code&gt;qmake&lt;/code&gt; nehmen dem Entwickler dabei die meiste Arbeit ab: die Code-Dateien werden automatisch aus den&amp;nbsp;entsprechenden &lt;code&gt;ui&lt;/code&gt;-&amp;nbsp;und &lt;code&gt;qrc&lt;/code&gt;-Dateien generiert. Sobald man eine der Dateien im visuellen Editor bearbeitet, wird beim nächsten Build alles automatisch aktualisiert. Wie sieht es aber unter Python aus? Häufig verwendet man hier ja nicht einmal eine komplette &lt;span class="caps"&gt;IDE&lt;/span&gt;, für kleine Projekte zut es gut und gern auch ein einfacher Code-Editor. Ich stelle hier ein kleines Skript vor, das auch ohne &lt;span class="caps"&gt;IDE&lt;/span&gt; zumindest einen Teil der Arbeit übernimmt. Zwar muss man das Skript bei jeder Änderung&amp;nbsp;der &lt;code&gt;ui&lt;/code&gt;-&amp;nbsp;und &lt;code&gt;qrc&lt;/code&gt;-Dateien manuell starten, aber zumindest muss man nicht mehr alle Dateien per Hand&amp;nbsp;umwandeln.&lt;/p&gt;
&lt;h1&gt;Projektgerüst&lt;/h1&gt;
&lt;p&gt;Ich setze hier voraus, dass ihr ein bestimmtes Projektgerüst verwendet. Die Ressourcendateien, &lt;span class="caps"&gt;UI&lt;/span&gt;-Dateien sowie Python-Code-Dateien befinden sich dabei in je einem eigenen Ordner. Da Ressourcendateien auf projektweite Dateien verweisen, befinden sie sich häufig im Hauptordner des Projekts. Ein typisches PyQt- bzw. PySide-Projekt sieht bei mir folgendermaßen&amp;nbsp;aus:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Projektgerüst PyQt-Projekt" src="https://www.peterbouda.eu/tutorials/11/tut11_1.png"&gt;&lt;/p&gt;
&lt;p&gt;Der &lt;code&gt;bin&lt;/code&gt;-Ordner enthält das Einstiegsskript der Anwendung. Dieses lädt die Klasse des Hauptfensters aus dem&amp;nbsp;Package &lt;code&gt;helloworld&lt;/code&gt;, das sich im&amp;nbsp;Ordner &lt;code&gt;src&lt;/code&gt; befindet. Die Hauptfensterklasse wiederum lädt den &lt;span class="caps"&gt;UI&lt;/span&gt;-Code aus dem&amp;nbsp;Unterordner &lt;code&gt;ui&lt;/code&gt;, also aus dem&amp;nbsp;Package &lt;code&gt;helloworld.ui&lt;/code&gt;. Die Original-&lt;span class="caps"&gt;UI&lt;/span&gt;-Dateien liegen&amp;nbsp;unter &lt;code&gt;ui&lt;/code&gt;, die&amp;nbsp;Ressourcendatei &lt;code&gt;helloworld.qrc&lt;/code&gt; liegt im Hauptordner des Projekts. Das Ziel ist es jetzt also, möglichst unkompliziert die &lt;span class="caps"&gt;UI&lt;/span&gt;-Dateien&amp;nbsp;aus &lt;code&gt;ui&lt;/code&gt; sowie die Ressourcendatei in Python-Code umzuwandeln und in den enstsprechenden Dateien im&amp;nbsp;Ordner &lt;code&gt;src/helloworld/ui&lt;/code&gt; abzulegen.&lt;/p&gt;
&lt;h1&gt;Das&amp;nbsp;Skript&lt;/h1&gt;
&lt;p&gt;Um diesen Schritt möglichst einfach und möglichst plattformunabhängig durchführen zu können, habe ich folgendes kleines Python-Skript geschrieben, dass diese Arbeit&amp;nbsp;durchführt:&lt;/p&gt;
&lt;pre class="brush:python;"&gt;
#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys, os
from subprocess import call

if sys.platform == "win32":
    bindir = "c:/Python27/Lib/site-packages/PyQt4/bin"
else:
    bindir = "/usr/bin"

uic_path = os.path.join(bindir, "pyuic4")
#uic_path = os.path.join(bindir, "pyside-uic")
rcc_path = os.path.join(bindir, "pyrcc4")
#rcc_path = os.path.join(bindir, "pyside-rcc")

ui_path = "ui"
rc_path = ""
out_path = "src/helloworld/ui"

ui_files = { "helloworld.ui": "ui_helloworld.py" }
rc_files = { "helloworld.qrc": "helloworld_rc.py" }

for file in ui_files:
    file_path = os.path.join(ui_path, file)
    out_file_path = os.path.join(out_path, ui_files[file])
    call([uic_path, file_path, "-o", out_file_path])

for file in rc_files:
    file_path = os.path.join(rc_path, file)
    out_file_path = os.path.join(out_path, rc_files[file])
    call([rcc_path, file_path, "-o", out_file_path])
&lt;/pre&gt;

&lt;p&gt;Das Skript überprüft zunächst die Plattform und setzt entsprechend den Pfad zur&amp;nbsp;den &lt;code&gt;rcc&lt;/code&gt;-&amp;nbsp;und &lt;code&gt;uic&lt;/code&gt;-Tools von PyQt oder PySide (für PySide müssen die Kommentare entfernt werden). Falls die Tools in einem anderen Verzeichnis liegen (z.B.&amp;nbsp;unter &lt;code&gt;/usr/local/bin&lt;/code&gt; statt &lt;code&gt;/usr/bin&lt;/code&gt;) dann müsst ihr nur die&amp;nbsp;Variable &lt;code&gt;bindir&lt;/code&gt; entsprechend anpassen. In den beiden&amp;nbsp;Variablen &lt;code&gt;ui_files&lt;/code&gt; und &lt;code&gt;rc_files&lt;/code&gt; listet ihr dann alle eure &lt;span class="caps"&gt;UI&lt;/span&gt;- und Ressourcendateien auf, und gebt als Wert jeweils den gewünschten Ausgabedateinamen an. Bei mir landen alle Dateien ausschlueßlich&amp;nbsp;in &lt;code&gt;src/helloworld/ui&lt;/code&gt;, aber das könnt ihr selbstverständlich an eure Bedingungen anpassen. Jedes Mal, wenn ihr die Dateien dann in eurem Projekt ändert oder Dateien hinzufügt, dann ruft ihr einfach das Skript&amp;nbsp;auf:&lt;/p&gt;
&lt;pre class="brush:bash;"&gt;
python generate_ui.py
&lt;/pre&gt;

&lt;p&gt;Und schon habt ihr die Code-Dateien wieder auf dem aktuellen&amp;nbsp;Stand.&lt;/p&gt;
&lt;p&gt;Mehr über dieses Thema findet ihr zum Beispiel in meinem Buch &lt;a href="http://www.amazon.de/gp/product/3941841505/ref=as_li_tf_tl?ie=UTF8&amp;camp=1638&amp;creative=6742&amp;creativeASIN=3941841505&amp;linkCode=as2&amp;tag=jsusde-21"&gt;PyQt und PySide. &lt;span class="caps"&gt;GUI&lt;/span&gt;- und Anwendungsentwicklung mit Python und Qt&lt;/a&gt;&lt;img src="http://www.assoc-amazon.de/e/ir?t=jsusde-21&amp;l=as2&amp;o=3&amp;a=3941841505" width="1" height="1" border="0" alt="book cover" style="border:none !important; margin:0px !important;" /&gt;.&lt;/p&gt;</content><category term="Python"></category></entry><entry><title>Python auf dem N9</title><link href="https://www.peterbouda.eu/python-auf-dem-n9.html" rel="alternate"></link><published>2011-07-22T09:40:00+01:00</published><updated>2011-07-22T09:40:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-07-22:/python-auf-dem-n9.html</id><summary type="html">&lt;p&gt;Die Nachricht ist wohl schon länger veröffentlicht, ich sehe das jedoch
gerade erst: auf dem N9, Nokias erstem und letztem (?) MeeGo-Gerät,
werden Python-Anwendungen und C++-Anwendungen praktisch gleichgestellt.
D.h. das &lt;span class="caps"&gt;SDK&lt;/span&gt; unterstützt die Entwicklung von Anwendungen per Python und
PySide, und man kann diese Anwendungen dann im Ovi Store …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Die Nachricht ist wohl schon länger veröffentlicht, ich sehe das jedoch
gerade erst: auf dem N9, Nokias erstem und letztem (?) MeeGo-Gerät,
werden Python-Anwendungen und C++-Anwendungen praktisch gleichgestellt.
D.h. das &lt;span class="caps"&gt;SDK&lt;/span&gt; unterstützt die Entwicklung von Anwendungen per Python und
PySide, und man kann diese Anwendungen dann im Ovi Store
veröffentlichen, oder wie auch immer der Laden jetzt heißt. Hier die
offizielle&amp;nbsp;Ankündigung:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.meegoexperts.com/2011/06/harmattan-python-meego/"&gt;http://www.meegoexperts.com/2011/06/harmattan-python-meego/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Damit ist und bleibt Maemo/MeeGo das einzige mobile Betriebssystem, für
das sich uneingeschränkt Apps in Python entwickeln lassen. Es ergeht
hiermit also ein Kaufbefehl für das N9 an alle&amp;nbsp;Python-Programmierer!&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>Relative Entropie visualisieren mit Mayavi</title><link href="https://www.peterbouda.eu/relative-entropie-visualisieren-mit-mayavi.html" rel="alternate"></link><published>2011-07-07T14:05:00+01:00</published><updated>2011-07-07T14:05:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-07-07:/relative-entropie-visualisieren-mit-mayavi.html</id><summary type="html">&lt;script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;
&lt;/script&gt;

&lt;h1&gt;Das Problem und die&amp;nbsp;Idee&lt;/h1&gt;
&lt;p&gt;Ich lese gerade das wunderbare Buch &lt;a href="http://www.amazon.de/gp/product/0596528124/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;tag=jsusde-21&amp;linkCode=as2&amp;camp=1638&amp;creative=6742&amp;creativeASIN=0471241954"&gt;Elements of Information Theory von Cover und Thomas&lt;/a&gt;, um ein bisschen mehr über die Grundlagen der Informationstheorie zu lernen. Das Buch fordert einen von Anfang an recht ordentlich, und man knabbert ein bisschen, bis man alle Beweise durchgearbeitet und …&lt;/p&gt;</summary><content type="html">&lt;script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;
&lt;/script&gt;

&lt;h1&gt;Das Problem und die&amp;nbsp;Idee&lt;/h1&gt;
&lt;p&gt;Ich lese gerade das wunderbare Buch &lt;a href="http://www.amazon.de/gp/product/0596528124/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;tag=jsusde-21&amp;linkCode=as2&amp;camp=1638&amp;creative=6742&amp;creativeASIN=0471241954"&gt;Elements of Information Theory von Cover und Thomas&lt;/a&gt;, um ein bisschen mehr über die Grundlagen der Informationstheorie zu lernen. Das Buch fordert einen von Anfang an recht ordentlich, und man knabbert ein bisschen, bis man alle Beweise durchgearbeitet und verstanden hat. Auf Seite 32 beispielsweise wird das Theorem über die Konvexität der relativen Entropie D(p||q) bewiesen.&amp;nbsp;D.h.:&lt;/p&gt;
&lt;p&gt;Für jedes Paar Zufallsfunktionen (p, q) ist die Funktion D(p||q) konvex, wobei D(p||q) definiert ist&amp;nbsp;als:&lt;/p&gt;
&lt;p&gt;$$D(p\mid q)=\sum_{x\in&amp;nbsp;X}p(x)*log{\frac{p(x)}{q(x)}}$$&lt;/p&gt;
&lt;p&gt;Das wollte ich dann doch einmal mit eigenen Augen sehen, wo da die Konvexität ist! Als Beispiel nehme ich p und q mit nur zwei Zufallswerten an, der allgemeine Fall ist p(0) = r, p(1) =r-1 sowie q(0)=s, q(1)=1-s. D.h. wir ziehen zwei Zufallswerte, wobei der Wert 0 jeweils die Wahrscheinlichkeit r bzw. s hat. Die relative Entropie gibt nun an, wie weit die beiden Wahrheitsfunktionen auseinander liegen, oder anders: wie ineffezient q ist, um p zu beschreiben. Noch informationtheoretischer: wenn man p mit einem Code der durchschnittlichen Länge H(p) (=Entropie von p in Bits) beschreiben kann, aber stattdessen den Code von q benutzt, dann braucht man dazu im Durschnitt H(p)+D(p||q) Bits. Näheres dazu wie gesagt im Buch von Cover und&amp;nbsp;Thomas.&lt;/p&gt;
&lt;p&gt;Rechnet man nun D(p||q) für unsere beiden gegebenen Wahrheitsfunktionen aus, dann erhält&amp;nbsp;man:&lt;/p&gt;
&lt;p&gt;$$D(p\mid&amp;nbsp;q)=(1-r)*log{\frac{1-r}{1-s}}+r*log{\frac{r}{s}}$$&lt;/p&gt;
&lt;p&gt;Diese Funktion wollte ich nun dreidimensional darstellen, und bin nach ein bisschen Googlen auf das Python-Modul &lt;a href="http://code.enthought.com/projects/mayavi/"&gt;Mayavi&lt;/a&gt; gestoßen. Das Modul ist ein Teil der äußerst umfangreichen Enthought Tool Suite und enthält u.a. eine &lt;span class="caps"&gt;GUI&lt;/span&gt; zur Darstellung dreidimensionaler Daten und parametrischer Oberflächen. Eigentlich ein bisschen viel für unseren Fall, aber eine andere vernünftige 3D-Plotting-Umgebung konnte ich auf Anhieb partout nicht auftreiben. Wenigstens gibt es Mayavi unter Ubuntu als schönes Paket, wenn man im Paketmanager einfach nach &amp;#8220;mayavi&amp;#8221;&amp;nbsp;sucht.&lt;/p&gt;
&lt;p&gt;Das Paket enthält dann u.a. das Modul &lt;a href="http://code.enthought.com/projects/mayavi/docs/development/html/mayavi/mlab.html"&gt;mlab&lt;/a&gt;, dass man in seinen eigenen Skripten nutzen kann. Eigentlich ist die gesamte Tool Suite als &lt;span class="caps"&gt;GUI&lt;/span&gt;-Anwendung ausgelegt, so liegt dem Ubuntu-Paket beispielsweise die Anwendung &amp;#8220;mayavi&amp;#8221; bei, über die man Datendateien oder Objekte per &lt;span class="caps"&gt;GUI&lt;/span&gt; betrachten kann. Dazu gibt es dann eine Szene, die die Objekte und zahlreiche weitere Modifikatoren wie Lichtquellen aufnimmt. Diese kann man schön mit Maus und Tastatur modifizieren, drehen, etc. Wir nehmen aber wie gesagt nur das mlab-Modul in einem eigenen Skript. Lustig ist, dass man nach erfolgter Darstellung im eigenen Skript jederzeit zur kompletten &lt;span class="caps"&gt;GUI&lt;/span&gt; umschalten kann. Die &lt;span class="caps"&gt;GUI&lt;/span&gt; wiederum enthält eine Python-Shell, so dass auch der umgekehrte Weg funktioniert. Besonders schön funktioniert das dann mit &lt;a href="http://ipython.scipy.org"&gt;IPython&lt;/a&gt;, womit ich auch das Skript für diese Tutorial entwickelt&amp;nbsp;habe.&lt;/p&gt;
&lt;p&gt;Kurz und gut: das fertige Skript sieht folgendermaßen&amp;nbsp;aus:&lt;/p&gt;
&lt;pre class="brush: python;"&gt;
import numpy
from enthought.mayavi import mlab

[r,s] = numpy.mgrid[0.01:1:0.01,0.01:1:0.01]
d = (1-r)*numpy.log2((1-r)/(1-s)) + r*numpy.log2(r/s)

x = r
y = s
z = d

surface = mlab.mesh(x, y ,z)
mlab.axes()
mlab.show()
&lt;/pre&gt;

&lt;p&gt;Übersichtlich, oder? Zunächst erzeugen wir&amp;nbsp;in &lt;code&gt;r&lt;/code&gt; und &lt;code&gt;s&lt;/code&gt; die Eingangswerte zwischen 0 und 1 in einem numpy-Grid. Die Funktion der relativen Entropie definieren wir&amp;nbsp;in &lt;code&gt;d&lt;/code&gt;. Danach erfolgt die Definition der&amp;nbsp;Koordinaten &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; und &lt;code&gt;z&lt;/code&gt;. Hier erlaubt mayavi für jede Koordinate die Angabe einer Funktion, so entsteht dann die Oberfläche des Objekts der&amp;nbsp;Klasse &lt;code&gt;ParametricSurface&lt;/code&gt;. In unserem Fall bilden wir die x- und y-Werte einfach auf die Eingangswerte ab, der z-Wert ist dann der Funktionswert. Wir plotten also einfach die Funktion ins Dreidimensional. Schließlich malen wir das Objekt&amp;nbsp;als &lt;code&gt;mesh&lt;/code&gt;, fügen noch Achsen&amp;nbsp;per &lt;code&gt;axes()&lt;/code&gt; hinzu und zeigen das Ganze&amp;nbsp;per &lt;code&gt;show()&lt;/code&gt;, damit sich das Skript nicht gleich beendet und das Ausgabefenster geöffnet bleibt. Es öffnet sich ein Fenster mit unserer&amp;nbsp;Funktion:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Visualization of relative entropy" src="https://www.peterbouda.eu/tutorials/relative_entropy.png"&gt;&lt;/p&gt;
&lt;p&gt;Schön konvex :-) Das Ausgabefenster lädt zum Herumspielen ein, das Objekt lässt sich drehen, Parallelprojektion einschalten und das komplette Mayavi starten, um weitere Daten und Objekte hinzu zu fügen. Oder man arbeitet mit IPython und macht mit der Shell weiter. Viel&amp;nbsp;Spaß!&lt;/p&gt;</content><category term="Python"></category></entry><entry><title>Buchempfehlung: Mastering Regular Expressions von Jeffrey E.F. Friedl</title><link href="https://www.peterbouda.eu/buchempfehlung-mastering-regular-expressions-von-jeffrey-ef-friedl-dasskriptcom.html" rel="alternate"></link><published>2011-05-13T10:28:00+01:00</published><updated>2011-05-13T10:28:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-05-13:/buchempfehlung-mastering-regular-expressions-von-jeffrey-ef-friedl-dasskriptcom.html</id><summary type="html">&lt;p&gt;Und da dachte ich, ich weiß schon so Einiges über reguläre Ausdrücke.
Aber nichts da: spätestens im dritten Kapitel von &lt;em&gt;Mastering Regular
Expressions&lt;/em&gt; von Jeffrey &lt;span class="caps"&gt;E.F.&lt;/span&gt; Friedl schwand der Glaube an meine
Fähigkeiten. Die Einsatzmöglichkeiten von &lt;em&gt;Atomic Groupings&lt;/em&gt; und
&lt;em&gt;Possessive Quantifiers&lt;/em&gt; waren mir gar vollkommen fremd. Nach Lektüre
des …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Und da dachte ich, ich weiß schon so Einiges über reguläre Ausdrücke.
Aber nichts da: spätestens im dritten Kapitel von &lt;em&gt;Mastering Regular
Expressions&lt;/em&gt; von Jeffrey &lt;span class="caps"&gt;E.F.&lt;/span&gt; Friedl schwand der Glaube an meine
Fähigkeiten. Die Einsatzmöglichkeiten von &lt;em&gt;Atomic Groupings&lt;/em&gt; und
&lt;em&gt;Possessive Quantifiers&lt;/em&gt; waren mir gar vollkommen fremd. Nach Lektüre
des Buches war der Glaube aber wieder&amp;nbsp;da.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;Das Buch beginnt mit drei sehr praxisorientierten Kapiteln über reguläre
Ausdrücke, die sich zu Beginn auch dem Anfänger erschließen. Die
Beispiele sind schön ausgewählt, werden im Laufe der Kapitel immer
komplexer, und zeigen den Einsatz der Basisfunktionen in regulären
Ausdrücken. Gleich in der Einleitung empfiehlt Herr Friedl auch dem
fortgeschrittenen Leser, das Buch von vorn bis hinten zu lesen, und dem
kann ich unbedingt zustimmen: selbst wenn man die Basis schon drauf hat,
lernt man gleich zu Beginn Vieles über die Geschwindigkeitsvorteile und
-nachteile bestimmter Alternativen bei Ausdrücken in unterschiedlichen&amp;nbsp;Einsatzgebieten.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;Ab dem vierten Kapitel geht es dann ans Eingemachte. Die interne
Verabeitung der verschiedene Implementierungen werden besprochen,
zunächst grob nach der Einteilung in deterministische bzw.
nicht-deterministische Automaten, in beiden Fällen aber auch immer
wieder mit Hinweisen auf einzelne Implementierung der verschiedenen
Programmiersprachen. Wer hätte es gedacht: Tcl hat die schnellste
Maschine für reguläre Ausdrücke, Perl dafür den umfangreichsten
Wortschatz an Ausdrücken. Das &lt;em&gt;Backtracking&lt;/em&gt; als zentrale Idee des
Parsens regulärer Ausdrücke wird ausführlich und verständlich erläutert,
fast denkt der Leser daran, rasch selber eine solchen Parser zu bauen.
Gerade in diesem Kapitel merkt man die langjährige Erfahrung des Autors,
der durch den Einsatz unterschiedlicher Engines und Fehlersuche in
zahlreichen Projekten einen großen Einfluss auf die ein oder andere
Implementierung&amp;nbsp;hatte.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;Nach den Interna der Verarbeitung folgen dann zwei Kapitel, nach deren
Lektüre man sich durchaus als Experte einordnen darf. Zunächst geht es
um den allgemeinen Aufbau eines regulären Ausdrucks, wiederum an
Praxisbeispielen, und dieses Mal mit dem gesamten, im vorhergegangenen
Kapitel erarbeiteten Inventar. Das darauf folgende Kapitel geht noch
ausführlich auf die Performanz von regulären Ausdrücken ein, so dass man
sich als Leser schließlich für alle Anwendungsfälle gerüstet fühlt. Als
wäre das alles noch nicht genug, folgen schließlich noch vier Kapitel
über die regulären Ausdrücke und ihren praktischen Einsatz in vier
Programmiersprachen bzw. Frameworks (Perl, Java, .&lt;span class="caps"&gt;NET&lt;/span&gt;, &lt;span class="caps"&gt;PHP&lt;/span&gt;). Schade,
dass hier Python keine größere Rolle spielt, aber die derzeitige
Implemtierung scheint auch einfach noch nicht besonders ausgereift zu
sein. Mit dem &lt;a class="reference external" href="http://pypi.python.org/pypi/regex"&gt;neuen Python regex-Modul&lt;/a&gt; steht aber wohl schon der
Ersatz in den&amp;nbsp;Startlöchern.&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;Am Ende bleibt tatsächlich keine Frage offen. Im der täglichen
Entwicklungsarbeit blättert man schnell immer wieder an die
entsprechenden Stellen des Buches, und reift so langsam zum Experten
auch in der Praxis. Atomic Groupings, Possessive Quantifiers,
Backtracking, Laziness vs. Greediness? Alles kein&amp;nbsp;Problem&amp;#8230;&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;Zu kaufen bei&amp;nbsp;Amazon:&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.amazon.de/gp/product/0596528124/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;tag=jsusde-21&amp;amp;linkCode=as2&amp;amp;camp=1638&amp;amp;creative=6742&amp;amp;creativeASIN=0596528124"&gt;Mastering Regular Expressions von Jeffrey &lt;span class="caps"&gt;E.F.&lt;/span&gt;&amp;nbsp;Friedl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;script type="text/javascript"&gt;&lt;/p&gt;&lt;p&gt;var flattr_uid =&amp;nbsp;'12306';&lt;/p&gt;&lt;p&gt;var flattr_tle = 'Buchempfehlung: Mastering Regular Expressions von Jeffrey &lt;span class="caps"&gt;E.F.&lt;/span&gt;&amp;nbsp;Friedl';&lt;/p&gt;&lt;p&gt;var flattr_dsc = 'Und da dachte ich, ich weiß schon so Einiges über reguläre Ausdrücke. Aber nichts da: spätestens im dritten Kapitel von Mastering Regular Expressions von Jeffrey &lt;span class="caps"&gt;E.F.&lt;/span&gt; Friedl schwand der Glaube an&amp;nbsp;...';&lt;/p&gt;&lt;p&gt;var flattr_cat =&amp;nbsp;'text';&lt;/p&gt;&lt;p&gt;var flattr_lng =&amp;nbsp;'de_DE';&lt;/p&gt;&lt;p&gt;var flattr_tag = 'Buchempfehlung, Reguläre&amp;nbsp;Ausdrücke';&lt;/p&gt;&lt;p&gt;var flattr_url =&amp;nbsp;'http://www.dasskript.com/blogposts/89';&lt;/p&gt;&lt;p&gt;var flattr_btn =&amp;nbsp;'compact';&lt;/p&gt;&lt;p&gt;&lt;/script&gt;&lt;/p&gt;&lt;p&gt;&lt;script src="http://api.flattr.com/button/load.js" type="text/javascript"&gt;&lt;/script&gt;&lt;/p&gt;&lt;/p&gt;</content><category term="Museum"></category></entry><entry><title>Ich bin jetzt Qt Ambassador</title><link href="https://www.peterbouda.eu/ich-bin-jetzt-qt-ambassador.html" rel="alternate"></link><published>2011-05-13T09:37:00+01:00</published><updated>2011-05-13T09:37:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-05-13:/ich-bin-jetzt-qt-ambassador.html</id><summary type="html">&lt;p&gt;Vor ein paar Wochen bekam ich von Nokia die freundliche Enladung, mich
mit meiner Anwendung &lt;a class="reference external" href="http://www.dasskript.com/apps/qtranslate"&gt;qTranslate&lt;/a&gt; beim &lt;a class="reference external" href="http://qt.nokia.com/qt-in-use/ambassadors/qtambassador/"&gt;Qt-Ambassador-Programm&lt;/a&gt; zu
bewerben. Und siehe da: die Software wurde akzeptiert, also bin ich
jetzt Botschafter. Nicht schlecht, auch wenn ich in letzter Zeit etwas
weniger in C++ entwickle, stattdessen lieber Python verwende. Gefreut …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Vor ein paar Wochen bekam ich von Nokia die freundliche Enladung, mich
mit meiner Anwendung &lt;a class="reference external" href="http://www.dasskript.com/apps/qtranslate"&gt;qTranslate&lt;/a&gt; beim &lt;a class="reference external" href="http://qt.nokia.com/qt-in-use/ambassadors/qtambassador/"&gt;Qt-Ambassador-Programm&lt;/a&gt; zu
bewerben. Und siehe da: die Software wurde akzeptiert, also bin ich
jetzt Botschafter. Nicht schlecht, auch wenn ich in letzter Zeit etwas
weniger in C++ entwickle, stattdessen lieber Python verwende. Gefreut
hat&amp;#8217;s mich trotzdem, und unten rechts prangt jetzt das schöne Logo. Es
wird bald auch mal wieder Zeit für ein Update, Google scheint dem
Übersetzer ein paar neue Sprachen verpasst zu&amp;nbsp;haben.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Bluetooth mit Arduino, N900 und Python</title><link href="https://www.peterbouda.eu/bluetooth-mit-arduino-n900-und-python.html" rel="alternate"></link><published>2011-04-15T08:25:00+01:00</published><updated>2011-04-15T08:25:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-04-15:/bluetooth-mit-arduino-n900-und-python.html</id><summary type="html">&lt;p&gt;Im Prinzip handelt es sich auch um einen schon etwas älteren Beitrag in
einem meiner alten Blogs, aber neu ist er trotzdem hier im&amp;nbsp;Wiki:&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.dasskript.com/wiki/the_arduino_and_the_n900"&gt;The Arduino and The&amp;nbsp;N900&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;Wie man per Bluetooth zwischen Arduino und dem N900 kommuniziert. Der
Arduino-Teil ist in Processing geschrieben, der Code auf dem …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Im Prinzip handelt es sich auch um einen schon etwas älteren Beitrag in
einem meiner alten Blogs, aber neu ist er trotzdem hier im&amp;nbsp;Wiki:&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.dasskript.com/wiki/the_arduino_and_the_n900"&gt;The Arduino and The&amp;nbsp;N900&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;&lt;p&gt;Wie man per Bluetooth zwischen Arduino und dem N900 kommuniziert. Der
Arduino-Teil ist in Processing geschrieben, der Code auf dem N900 in
Python. Im Prinzip zeigt der Python-Code allgemein die serielle
Bluetooth-Kommunikation per dbus und bluez. Der Beitrag ist in diesem
Fall auf Englisch, ich werde inmer mal wieder englische Beiträge
veröffentlichen, einfach um ein bisserl das Englisch-Schreiben zu üben.
Und um, naja, den potentiellen Leserkreis etwas&amp;nbsp;auszuweiten.&lt;/p&gt;
&lt;p&gt;&lt;script type="text/javascript"&gt;&lt;/p&gt;&lt;p&gt;var flattr_uid =&amp;nbsp;'12306';&lt;/p&gt;&lt;p&gt;var flattr_tle = 'Bluetooth mit Arduino, N900 und&amp;nbsp;Python';&lt;/p&gt;&lt;p&gt;var flattr_dsc = 'Im Prinzip handelt es sich auch um einen schon etwas älteren Beitrag in einem meiner alten Blogs, aber neu ist er trotzdem hier im Wiki:The Arduino and The N900Wie man per Bluetooth zwischen Arduino&amp;nbsp;u...';&lt;/p&gt;&lt;p&gt;var flattr_cat =&amp;nbsp;'text';&lt;/p&gt;&lt;p&gt;var flattr_lng =&amp;nbsp;'de_DE';&lt;/p&gt;&lt;p&gt;var flattr_tag = 'Python, Bluetooth, Arduino,&amp;nbsp;Processing';&lt;/p&gt;&lt;p&gt;var flattr_url =&amp;nbsp;'http://www.dasskript.com/blogposts/87';&lt;/p&gt;&lt;p&gt;var flattr_btn =&amp;nbsp;'compact';&lt;/p&gt;&lt;p&gt;&lt;/script&gt;&lt;/p&gt;&lt;p&gt;&lt;script src="http://api.flattr.com/button/load.js" type="text/javascript"&gt;&lt;/script&gt;&lt;/p&gt;&lt;/p&gt;</content><category term="Python"></category></entry><entry><title>Neues Tutorial: Augmented Reality mit Python</title><link href="https://www.peterbouda.eu/neues-tutorial-augmented-reality-mit-python.html" rel="alternate"></link><published>2011-03-22T15:43:00+00:00</published><updated>2011-03-22T15:43:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-03-22:/neues-tutorial-augmented-reality-mit-python.html</id><summary type="html">&lt;p&gt;Nachdem ich nun alle meine Text über Skriptsprachen ins Wiki umgezogen
habe, folgt heute der erste Teil einer neuen Tutorial-Reihe, die sich
ausschließlich mit der Programmierung von Skriptsprachen beschäftigen
wird. Es geht auch gleich spannend los: mit einem Tutorial über
&lt;a class="reference external" href="http://www.dasskript.com/wiki/augmented_reality_mit_opencv_pyqt_und_opengl"&gt;Augmented Reality mit OpenCV, PyQt und OpenGL&lt;/a&gt;. Ich hatte die …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nachdem ich nun alle meine Text über Skriptsprachen ins Wiki umgezogen
habe, folgt heute der erste Teil einer neuen Tutorial-Reihe, die sich
ausschließlich mit der Programmierung von Skriptsprachen beschäftigen
wird. Es geht auch gleich spannend los: mit einem Tutorial über
&lt;a class="reference external" href="http://www.dasskript.com/wiki/augmented_reality_mit_opencv_pyqt_und_opengl"&gt;Augmented Reality mit OpenCV, PyQt und OpenGL&lt;/a&gt;. Ich hatte die Idee
dazu schon länger, dachte allerdings, dass es recht kompliziert wäre.
Aber nichts da: nach ein bisschen Herumbasteln lief das Ganze schon
recht schön. Und das wollte ich euch natürlich nicht&amp;nbsp;vorenthalten.&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>Die “ersten” Wiki-Einträge</title><link href="https://www.peterbouda.eu/die-ersten-wiki-eintrage.html" rel="alternate"></link><published>2011-03-04T09:39:00+00:00</published><updated>2011-03-04T09:39:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-03-04:/die-ersten-wiki-eintrage.html</id><content type="html">&lt;p&gt;Werft ruhig mal einen kurzen Blick ins &lt;a class="reference external" href="http://www.dasskript.com/wiki"&gt;Wiki&lt;/a&gt;: die ersten (kleineren)
Einträge sind erschienen, über Perl, Python und Ruby (on Rails). Da
werden in den nächsten Tagen noch einige dazu gekommen, was sich halt so
bei mir angesammelt hat. Viel Spaß&amp;nbsp;damit!&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>mobileqt.de wird Das Skript; und rund!</title><link href="https://www.peterbouda.eu/mobileqtde-wird-das-skript-und-rund.html" rel="alternate"></link><published>2011-03-03T09:55:00+00:00</published><updated>2011-03-03T09:55:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-03-03:/mobileqtde-wird-das-skript-und-rund.html</id><summary type="html">&lt;p&gt;Wie hier schon erwähnt, plane ich, diese Seite in Zukunft der
Programmierung mit Skriptsprachen zu widmen. Der erste Teil dazu ist
jetzt abgeschlossen: die Domain mobileqt.de wird bald geschlossen, ab
sofort heißt dieser wundervolle Webauftritt &amp;#8220;Das Skript&amp;#8221; und ist unter
&lt;a class="reference external" href="http://www.dasskript.com"&gt;dasskript.com&lt;/a&gt; erreichbar. Ein Schwenk, den Nokia auch nicht …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Wie hier schon erwähnt, plane ich, diese Seite in Zukunft der
Programmierung mit Skriptsprachen zu widmen. Der erste Teil dazu ist
jetzt abgeschlossen: die Domain mobileqt.de wird bald geschlossen, ab
sofort heißt dieser wundervolle Webauftritt &amp;#8220;Das Skript&amp;#8221; und ist unter
&lt;a class="reference external" href="http://www.dasskript.com"&gt;dasskript.com&lt;/a&gt; erreichbar. Ein Schwenk, den Nokia auch nicht schneller
hinbekommen&amp;nbsp;hätte!&lt;/p&gt;
&lt;p&gt;Thematisch werden in Zukunft allgemein Skriptsprachen, im Besonderen
Python, Ruby, Perl und JavaScript Inhalt sein. Zunächst mit einem
Schwerpunkt auf PyQt und PySide, weil wir ja hier schon beim Thema
waren. Die alten Seiten bleiben alle so erhalten, wie sie jetzt sind.
Das Forum und das Wiki werde ich in den nächsten Tagen nach und nach
umgestalten, aber auch hier wird nichts gelöscht, nur archiviert, wie
man das halt heut so macht. Und damit alles eine runde Sache wird, habe
ich das Design etwas überarbeitet. Rund ist en vogue, wenn man sich so
umsieht, und da dachte ich mir: da springe ich doch mal wieder auf einen
fahrenden Zug&amp;nbsp;auf.&lt;/p&gt;
&lt;p&gt;Ich würde mich freuen, viele der Leser meines Blogs auch auf meinen
neuen Seiten begrüßen zu dürfen. Ich verspreche, es gibt spannende
Projekte zu&amp;nbsp;sehen!&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Servus. Servus!</title><link href="https://www.peterbouda.eu/servus-servus.html" rel="alternate"></link><published>2011-02-15T09:27:00+00:00</published><updated>2011-02-15T09:27:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-02-15:/servus-servus.html</id><summary type="html">&lt;p&gt;Wie man so schön sagt in Bayern. Die &lt;a class="reference external" href="http://www.heise.de/newsticker/meldung/Nokia-tut-sich-mit-Microsoft-zusammen-1187890.html"&gt;Würfel sind also gefallen&lt;/a&gt;, und
meiner Meinung nach ist es die richtige Entscheidung. Es wird nun wieder
mal von allerlei Ökosystemen fabuliert, aber am Ende werden sich alle
mobilen Betriebssystem doch weiter angleichen als im Moment sowieso
schon, und wessen Name da …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Wie man so schön sagt in Bayern. Die &lt;a class="reference external" href="http://www.heise.de/newsticker/meldung/Nokia-tut-sich-mit-Microsoft-zusammen-1187890.html"&gt;Würfel sind also gefallen&lt;/a&gt;, und
meiner Meinung nach ist es die richtige Entscheidung. Es wird nun wieder
mal von allerlei Ökosystemen fabuliert, aber am Ende werden sich alle
mobilen Betriebssystem doch weiter angleichen als im Moment sowieso
schon, und wessen Name da dann drauf steht ist zumindest mir ziemlich
egal. Hauptsache der E-Mail-Client funktioniert und der Browser ist
schnell. Und das ein oder andere Spiel wäre&amp;nbsp;fein.&lt;/p&gt;
&lt;p&gt;Wo wir auch schon beim Thema wären: meiner Meinung nach wird das Thema
&amp;#8220;Spiele&amp;#8221; die Marktaufteilung der nächsten Jahre bestimmen. Und wenn XBox
Live auf Windows Phone mindestens halb so gut wird, wie uns Microsoft
das immer verspricht, dann werden die Karten in nächster Zeit aber mal
gewaltig neu verteilt. Dann kommt vielleicht &lt;a class="reference external" href="http://www.heise.de/mobil/meldung/Playstation-Smartphone-kommt-im-Maerz-1188656.html"&gt;Sony Ericsson mit seinem
Playstation-Telefon&lt;/a&gt; als Star der Android-Szene wieder zu Ruhm und
Ehre. Und ich als XBox-Besitzer und Windows-Home-Server-Schaulustiger
werde dann auch nicht lange zögern, und zu einem (billigen) Nokia-Handy
greifen, wenn die Akku-Laufzeit mal stimmt. Das ganze Gerede über Apps
verkommt mehr und mehr zu einer großen Werbekampagne, Geld macht derweil
der&amp;nbsp;Spieleentwickler.&lt;/p&gt;
&lt;p&gt;Symbian und dem ganzen Ovi-Kram muss man dann auch keinerlei Träne
hinterher weinen. Ein bisserl Schade ist es dagegen um MeeGo, aber ganz
ehrlich: von Technik und Bedienung erinnert mich MeeGo immer noch sehr
an mein erstes Redhat-Linux, dass ich noch im letzten Jahrtausend auf
meinem Rechner installierte. Dual-Boot mit Windows? Dist-Upgrade?
Fehlanzeige. Die ganze Fummelei, bis es auch nur halbwegs so
funktioniert, wie man sich das vorstellt: Nein, danke. Mittlerweile gibt
es Ubuntu und eine Reihe anderer schicker Distributionen, da kann MeeGo
nicht einmal annähernd mithalten. Auch wenn Intel jetzt in Aktionismus
verfällt (14 Blogeinträge an einem Tag im AppUp-Developer-Program-Blog;
so viele Informationen über die Vorteile von MeeGo hätten wir uns doch
früher schon gewünscht, nicht, Intel?), das Projekt wird definitiv
sterben. Sei&amp;#8217;s&amp;nbsp;drum.&lt;/p&gt;
&lt;p&gt;Im Moment findet ihr mich aber dann erst einmal auf WebOS. Seit
Weihnachten bin ich stolzer Besitzer eines Palm Pixi Plus, und ich muss
sagen: das beste Telefon, das ich seit langer Zeit in der Hand hielt.
Das Bedienkonzept ist innovativ und nach kurzer Einarbeitungszeit
erlernt, trotz schwacher Hardware fühlt es sich nicht halb so lahm an
wie mein Nokia X6, und der E-Mail-Client ist der Beste, den ich je auf
einem Handgerät vorgefunden habe. Wenn ich jetzt mit meinem iPod Touch
E-Mails abrufe, ärgere ich mich manchmal sogar ein bisschen über die
schlechte Bedienbarkeit&amp;#8230; Dazu sieht das Handy schick aus, ist klein
und leicht, dazu sehr günstig, und naja, die Akkulaufzeit ist so
einigermaßen akzeptabel. Wenn man das &lt;span class="caps"&gt;WLAN&lt;/span&gt; nicht nutzt. Und Samba läuft
bei mir auch schon drauf, dank &lt;a class="reference external" href="http://preware.org/"&gt;gut gepflegten Open-Source-Repository&lt;/a&gt;.
Allen Maemo- und MeeGo-Fans sei deswegen der Umstieg auf WebOS wärmstens
ans Herz gelegt, im Moment die wohl offenste, mobile Plattform mit
&lt;a class="reference external" href="http://www.heise.de/mobil/meldung/10-Zoll-Tablet-und-neue-Smartphones-mit-WebOS-1185225.html"&gt;guten Zukunfts-Aussichten&lt;/a&gt;. Und &lt;a class="reference external" href="http://www.griffin.net/2010/02/qt-on-the-palm-pre.html"&gt;Qt gibt&amp;#8217;s dafür auch schon&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Was machen wir aber nun hier, mit dieser Seite? &amp;#8220;Mobiles Qt&amp;#8221; hat sich
wohl erst einmal erledigt. Ich dachte daran, &lt;a class="reference external" href="http://dasskript.blogspot.com/"&gt;meinen alten Blog über
Skriptsprachen&lt;/a&gt; hier weiter zu führen, und somit auch das Forum und das
Wiki umzuwidmen. Um etwas Kontinuität zu wahren, wird ein Schwerpunkt
erst einmal &lt;a class="reference external" href="http://www.riverbankcomputing.co.uk/software/pyqt/intro"&gt;PyQt&lt;/a&gt; (und evtl. &lt;a class="reference external" href="http://www.pyside.org/"&gt;PySide&lt;/a&gt;?) sein. Aber auch Python im
Allgemeinen, sowie Perl und Ruby sollen gebührende Aufmerksamkeit
erhalten. Wenn ich schon keine Qt-App mehr verkaufen kann, dann wechsle
ich wenigsten von C++ wieder in die heimischen Gefilde der Skripterei.
Stay&amp;nbsp;tuned!&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Des Kaisers neue Kleider</title><link href="https://www.peterbouda.eu/des-kaisers-neue-kleider.html" rel="alternate"></link><published>2011-02-10T16:00:00+00:00</published><updated>2011-02-10T16:00:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-02-10:/des-kaisers-neue-kleider.html</id><summary type="html">&lt;p&gt;Also nun wird es morgen tatsächlich spannend, wenn der Herr Elop uns die
neue Strategie von Nokia erklärt. Soviel Aufmerksamkeit hatte in letzter
Zeit nicht einmal der Herr Jobs und seine Apfelfirma, und dann kommt
&amp;#8220;zufällig&amp;#8221; noch &lt;a class="reference external" href="http://www.heise.de/newsticker/meldung/Nokia-Chef-Unsere-Plattform-brennt-1186007.html"&gt;ein Schreiben an die Nokia-Mitarbeiter&lt;/a&gt; mit allerlei
Herumgedruckse ums Konkrete ans&amp;nbsp;Tageslicht&amp;#8230;?&lt;/p&gt;
&lt;p&gt;Wenn …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Also nun wird es morgen tatsächlich spannend, wenn der Herr Elop uns die
neue Strategie von Nokia erklärt. Soviel Aufmerksamkeit hatte in letzter
Zeit nicht einmal der Herr Jobs und seine Apfelfirma, und dann kommt
&amp;#8220;zufällig&amp;#8221; noch &lt;a class="reference external" href="http://www.heise.de/newsticker/meldung/Nokia-Chef-Unsere-Plattform-brennt-1186007.html"&gt;ein Schreiben an die Nokia-Mitarbeiter&lt;/a&gt; mit allerlei
Herumgedruckse ums Konkrete ans&amp;nbsp;Tageslicht&amp;#8230;?&lt;/p&gt;
&lt;p&gt;Wenn das alles von langer Hand geplant ist, dann müsste Herr Elop morgen
eigentlich ein fertiges Gerät aus der Tasche ziehen. &amp;#8220;We will ship on
Monday&amp;#8221;, das wär was. Ob&amp;#8217;s dann MeeGo, Windows oder Gummistiefel sind,
das ist mir in dann eigentlich&amp;nbsp;Wurscht&amp;#8230;&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Stand der Dinge</title><link href="https://www.peterbouda.eu/stand-der-dinge.html" rel="alternate"></link><published>2011-02-01T12:42:00+00:00</published><updated>2011-02-01T12:42:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-02-01:/stand-der-dinge.html</id><summary type="html">&lt;p&gt;Da ich im Moment beruflich etwas eingespannt bin hier nur kurz eine
Zusammenfassung, was sich an der Qt- und Nokia-Front so tut. Mit dem
üblichen Geläster,&amp;nbsp;natürlich:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Vorletzte Woche schon gab es das erste &lt;a class="reference external" href="http://labs.qt.nokia.com/2011/01/20/qt-sdk-1-1-technology-preview-released/"&gt;Technical Preview des
nächsten Qt &lt;span class="caps"&gt;SDK&lt;/span&gt; 1.1&lt;/a&gt;. Naja, bei einem &lt;span class="caps"&gt;TP&lt;/span&gt; bin ich immer erst …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Da ich im Moment beruflich etwas eingespannt bin hier nur kurz eine
Zusammenfassung, was sich an der Qt- und Nokia-Front so tut. Mit dem
üblichen Geläster,&amp;nbsp;natürlich:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Vorletzte Woche schon gab es das erste &lt;a class="reference external" href="http://labs.qt.nokia.com/2011/01/20/qt-sdk-1-1-technology-preview-released/"&gt;Technical Preview des
nächsten Qt &lt;span class="caps"&gt;SDK&lt;/span&gt; 1.1&lt;/a&gt;. Naja, bei einem &lt;span class="caps"&gt;TP&lt;/span&gt; bin ich immer erst einmal
skeptisch, aber nach ersten Versuchen scheint es schon auf dem
richtigen Weg zu sein. Vor allem die Integration zum Kompilieren und
Paketbauen schreitet voran, und das will man doch definitiv sehen.
Weiter&amp;nbsp;so!&lt;/li&gt;
&lt;li&gt;Die Weiterentwicklung der hier in letzer Zeit oft erwähnten &lt;a class="reference external" href="http://labs.qt.nokia.com/2011/01/31/well-be-right-back/"&gt;Qt
Components findet ab sofort hinter geschlossenen Türen statt&lt;/a&gt;. Weil
jetzt wird halt das nächste Super-Duper-&lt;span class="caps"&gt;UI&lt;/span&gt; entwickelt, und nicht,
dass da vorher schon was bekannt wird. Soweit also zur &amp;#8220;Offenheit&amp;#8221;
des Entwicklungsprozesses. Ich meine: das Nokia ne Firma ist, die ihr
Zeug gerne schützt, geht klar; aber dann sollte man auch das Umfeld
professionell behandeln und diese Professionalität auch nach außen
deutlich machen. Die sogenannte Community ist halt immer nur dann
gut, wenn sie die Arbeit für einen erledigt, gell,&amp;nbsp;Nokia?&lt;/li&gt;
&lt;li&gt;Und dann darf natürlich auch noch die Gerüchteküche nicht fehlen:
kommt das &lt;a class="reference external" href="http://www.heise.de/mobil/meldung/Nokias-N9-Handy-vermutlich-mit-Intels-Atom-Prozessor-1175073.html"&gt;N9 nun mit Intel-Prozessor&lt;/a&gt;, oder gibt &lt;a class="reference external" href="http://www.heise.de/mobil/meldung/Nokias-neuer-Chef-muss-handeln-1179054.html"&gt;Nokia&amp;#8217;s Herr Elop
nächste Woche doch den Strategiewechsel bekannt&lt;/a&gt;? Meiner Ansicht
nach deuten zumindest bei Letzterem alle Zeichen auf &amp;#8220;weiter so&amp;#8221;.
Nokia heuert weiter fleißig Entwickler für MeeGo an und die Qt
Components sind wie gesagt erst einmal unter Verschluss. Aber man
weiß ja nie&amp;#8230; Das Gerücht über ein Atom-Innenleben macht da schon
mehr Sinn, schließlich arbeiten Intel und Nokia mittlerweile auf
diversen Feldern zusammen. Für Intel wärs ein Glücksgriff, für Nokia
bleibt&amp;#8217;s abzuwarten. Hoffentlich wird es kein Klotz mit 4 Stunden
Akkulaufzeit. Auch auf der Softwareseite bin ich eher skeptisch:
während sowohl Intel als auch Nokia sich in den letzten Jahren ja als
recht potente Hardwarebauer hervortaten, kann man dies auf der
Softwareseite wohl kaum behaupten. Nun, vielleicht kann man dann auf
das Gerät wenigstens einfach ein anderes Betriebssystem installieren,&amp;nbsp;hehe.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Museum"></category></entry><entry><title>Ovi-Chaos-Tage, Update</title><link href="https://www.peterbouda.eu/ovi-chaos-tage-update.html" rel="alternate"></link><published>2011-01-20T09:13:00+00:00</published><updated>2011-01-20T09:13:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-01-20:/ovi-chaos-tage-update.html</id><summary type="html">&lt;p&gt;Jetzt wird&amp;#8217;s langsam witzig: nach &lt;a class="reference external" href="https://www.peterbouda.eu/winterchaos-nicht-nur-auf-schienen.html"&gt;dem ganzen Hin und Her die letzten
Tage&lt;/a&gt; bekomme ich heute folgende E-Mail (und die muss ich hier komplett
zitieren, sonst glaubt&amp;#8217;s mir ja&amp;nbsp;keiner&amp;#8230;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Dear publisher,

We have considered the case where end user might bought this content
when it was in …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;Jetzt wird&amp;#8217;s langsam witzig: nach &lt;a class="reference external" href="https://www.peterbouda.eu/winterchaos-nicht-nur-auf-schienen.html"&gt;dem ganzen Hin und Her die letzten
Tage&lt;/a&gt; bekomme ich heute folgende E-Mail (und die muss ich hier komplett
zitieren, sonst glaubt&amp;#8217;s mir ja&amp;nbsp;keiner&amp;#8230;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Dear publisher,

We have considered the case where end user might bought this content
when it was in maemo content type and will be unable to re-download the
same content for free after migration of content, we decide to not go
ahead with the migration of Maemo to Qt. Therefore, this content will be
left in edit mode. Please do not modify or change this Qt content.

Regards,

Ovi publisher support
&lt;/pre&gt;
&lt;p&gt;Kommando (halb) zurück, also. Das Chaos in meinem Account räumt mir aber
wohl keiner&amp;nbsp;auf.&lt;/p&gt;
&lt;p&gt;Hier, Nokia, mein Vorschlag für die nächste Mail, zwecks eurem&amp;nbsp;Handy-Ausschuss:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Dear customer,

We have considered the case where end user might bought this device and
will be unable to use it and be dissatisfied, we decided not to ahead
with the production of mobile phones. Therefore, we will only build
tires, rubber boots and raincoats again, from now.

Regards,

Ovi Tyres Support
&lt;/pre&gt;
&lt;p&gt;Lustig,&amp;nbsp;oder?&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Winterchaos nicht nur auf Schienen</title><link href="https://www.peterbouda.eu/winterchaos-nicht-nur-auf-schienen.html" rel="alternate"></link><published>2011-01-17T13:01:00+00:00</published><updated>2011-01-17T13:01:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-01-17:/winterchaos-nicht-nur-auf-schienen.html</id><summary type="html">&lt;p&gt;Im Ovi-Store herrscht weiter Chaos: anscheinend hat Nokia alle (alten)
Qt-Anwendungen jetzt automatisch in eine eigene Kategorie geschoben.
Natürlich unangekündigt. Ich habe für alle Anwendungen zuerst folgende
E-Mail&amp;nbsp;bekommen:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Thank you for submitting qbible.

This item is now going through our quality assurance (QA) process.
&lt;/pre&gt;
&lt;p&gt;Wohlgemerkt: für Anwendungen, die schon …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Im Ovi-Store herrscht weiter Chaos: anscheinend hat Nokia alle (alten)
Qt-Anwendungen jetzt automatisch in eine eigene Kategorie geschoben.
Natürlich unangekündigt. Ich habe für alle Anwendungen zuerst folgende
E-Mail&amp;nbsp;bekommen:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Thank you for submitting qbible.

This item is now going through our quality assurance (QA) process.
&lt;/pre&gt;
&lt;p&gt;Wohlgemerkt: für Anwendungen, die schon seit Monaten im Store sind. Da
freut man sich doch, dass die Anwendungen wieder in die &lt;span class="caps"&gt;QA&lt;/span&gt; kommen. Erst
hinterher (!) klärt Nokia dann, in einer weiteren Mail ein paar Tage
später,&amp;nbsp;auf:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
We have migrated the Maemo content below to Qt content and we will
unpublish the Maemo content shortly.
&lt;/pre&gt;
&lt;p&gt;Langsam ist&amp;#8217;s wohl der Mühe nicht mehr wert aber: das ist doch keine Art
und Weise, mit seinen Entwicklern umzugehen! Da ist einfach keine
Besserung in Sicht. Im Zuge der Umstellung wurden außerdem meine
Softwarepakete munter zwischen verschiedenen Anwendungen hin und her
geschoben, so dass ich mir jetzt erst einmal wieder Überblick über meine
(!) Anwendungen verschaffen muss. Von Kommunikation und Aufklärung hält
Nokia einfach gar nichts. Den Support werde ich erst gar nicht
anschreiben, da die Antwort sowieso wieder Tage auf sich warten lassen
wird und dann ein Textblock sein&amp;nbsp;wird.&lt;/p&gt;
&lt;p&gt;Schließlich kriege ich jetzt bei fast jeder Anwendung einen Hinweis über
&amp;#8220;invalid metadata&amp;#8221;, wobei ich nach intensivem Studium noch nicht
Herausfinden konnte, um welche Metadaten es eigentlich geht. Dafür hat
Nokia vorsichtshalber mal gleich das Paket aus dem Store genommen. Geil!
Dann kann ich mit der Veröffentlichung meiner (!) Software mal wieder
von vorn anfangen&amp;#8230; Ich lass es jetzt aber bleiben und warte erst
einmal ab, ob Nokia irgendwann einen brauchbaren Stand erreichen wird.
Daran glaube ich aber nicht mehr. Ich könnte hier noch eine Reihe
weiterer Probleme im und mit dem Ovi Store in den letzten Wochen
auflisten, aber dann reg ich mich nur wieder auf, und das soll ja
schlecht für die Gesundheit&amp;nbsp;sein.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nokia, du hast mittlerweile mehr als ein ernsthaftes Problem, vom
Zustand bei der Hard- und Softwareentwicklung deiner Mobiltelefone sogar
mal ganz&amp;nbsp;abgesehen.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Fall jemand Bock drauf hat: ich wette hiermit, dass ich mit mindestens
noch einem Entwickler-Mitstreiter innerhalb eines halben Jahres einen
funktionieren Alternativ-Store für Qt-Anwendungen auf die Beine stellen
kann. Mit freien und kommerziellen Apps, internationalem und
funktionierendem Bezahlsystem, funktionierender &lt;span class="caps"&gt;GUI&lt;/span&gt;, gutem Support und
Ankündigungen bei Änderungen. Einen Anti-Ovi-Store. Bei Interesse
einfach hier&amp;nbsp;melden.&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;PS&lt;/span&gt;: Ich musste es gerade noch einmal mit eigenen Augen überprüfen: mein
C7 ist jetzt tatsächlich seit 27.11.2010 bei Nokia Care. Weißt du was,
Nokia: wenn dir das Handy so gut gefällt, dann behalt es doch einfach.
So begeistert hat&amp;#8217;s mich nämlich nicht. Natürlich hätt ich gern die fast
400 Euro zurück, aber bevor ich mich immer weiter&amp;nbsp;aufrege&amp;#8230;&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Qt-Quick-/QML-Tutorial</title><link href="https://www.peterbouda.eu/qt-quick-qml-tutorial.html" rel="alternate"></link><published>2011-01-11T13:01:00+00:00</published><updated>2011-01-11T13:01:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-01-11:/qt-quick-qml-tutorial.html</id><summary type="html">&lt;p&gt;Nach dem ganzen (natürlich berechtigtem) Genöhle in Richtung Nokia hier
in letzter Zeit soll natürlich die Hauptsache dieses Blogs nicht aus den
Augen verloren werden: Qt-Programmierung! Spaß macht&amp;#8217;s ja trotzdem, und
vielleicht kann man es ja doch mal wieder brauchen, hehe. Deswegen habe
ich mich mal an Qt Quick …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nach dem ganzen (natürlich berechtigtem) Genöhle in Richtung Nokia hier
in letzter Zeit soll natürlich die Hauptsache dieses Blogs nicht aus den
Augen verloren werden: Qt-Programmierung! Spaß macht&amp;#8217;s ja trotzdem, und
vielleicht kann man es ja doch mal wieder brauchen, hehe. Deswegen habe
ich mich mal an Qt Quick und &lt;span class="caps"&gt;QML&lt;/span&gt;-Programmierung gewagt, und für euch
gleich ein kleines Tutorial dazu&amp;nbsp;erstellt:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.mobileqt.de/wiki/einfuehrung_in_qt_quick_und_qml_hallo_rss"&gt;Einführung in Qt Quick und &lt;span class="caps"&gt;QML&lt;/span&gt;: Hallo &lt;span class="caps"&gt;RSS&lt;/span&gt;!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Meine erstes Fazit: &lt;span class="caps"&gt;QML&lt;/span&gt; macht auf Anhieb erst einmal Spaß. Man hat viele
Freiheiten und kann Anwendungen endlich mal ohne Einschränkung so
gestalten, wie man sich das vorstellt. Bald stellt sich aber auch Frust
ein: um das tatsächlich genau so hinzubekommen, ist schon viel Fummelei
nötig, und die vorhandene Dokumenation hilft einem nur begrenzt weiter,
vor allem wenn es ans Eingemachte geht. Ich habe im Tutorial auch auf
das &lt;a class="reference external" href="http://qt.gitorious.org/qt-components"&gt;Qt-Components-Projekt&lt;/a&gt; hingewiesen, das vielleicht Abhilfe
schafft. Wenn man sich die Komponenten aber genau anschaut, dann sieht
das alles noch nicht besonders schick aus, und irgendwas Spannendes und
Neues ist da auch nicht in Sichtweite. Mal wieder:&amp;nbsp;Abwarten&amp;#8230;&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>MeeGo 2011</title><link href="https://www.peterbouda.eu/meego-2011.html" rel="alternate"></link><published>2011-01-06T09:52:00+00:00</published><updated>2011-01-06T09:52:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2011-01-06:/meego-2011.html</id><summary type="html">&lt;p&gt;Erst einmal an dieser Stelle ein &lt;strong&gt;frohes Neues Jahr&lt;/strong&gt; an all die
unerschrockenen Leser von mobileqt.de! Die &lt;span class="caps"&gt;CES&lt;/span&gt; läuft mittlerweile und
alle (zumindest: ich) warten gespannt auf MeeGo-Ankündigungen&amp;#8230; besser
gesagt: -Geräte. Wenn ich raten dürfte, für welches System es im Jahr
2010 die meisten Ankündigungen gegeben hat, ohne dass …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Erst einmal an dieser Stelle ein &lt;strong&gt;frohes Neues Jahr&lt;/strong&gt; an all die
unerschrockenen Leser von mobileqt.de! Die &lt;span class="caps"&gt;CES&lt;/span&gt; läuft mittlerweile und
alle (zumindest: ich) warten gespannt auf MeeGo-Ankündigungen&amp;#8230; besser
gesagt: -Geräte. Wenn ich raten dürfte, für welches System es im Jahr
2010 die meisten Ankündigungen gegeben hat, ohne dass man dann je wieder
davon gehört hätte, dann würde ich ohne zu zögern laut &amp;#8220;MeeGo!&amp;#8221;
schreien. Davon haben wir eigentlich erst einmal genug, also bitte:
keine weiteren Ankündigungen mehr, her mit der Hard- und&amp;nbsp;Software.&lt;/p&gt;
&lt;p&gt;Dazu passend gleich Nachdenkliches zum Jahresanfang, auf das nach
schwindenden Hoffnungen in 2011 doch noch positive Überraschungen auf
uns&amp;nbsp;warten:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.linux-mag.com/id/7929"&gt;MeeGo’s Community Woes: Improvement in&amp;nbsp;2011?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.techeye.net/software/nokias-meego-is-doomed"&gt;Nokia&amp;#8217;s MeeGo is&amp;nbsp;doomed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Beiden Artikeln kann ich mich größtenteils anschließen, wobei ich das
Ganze aus der Perspektive eines Anwendungsentwicklers sehe. &lt;span class="caps"&gt;OSS&lt;/span&gt; schön
und gut, aber Geld zu verdienen mit Software macht auch Spaß. Und der
Zustand des AppUp- bzw. Ovi-Stores wurde in den Artikeln ja noch gar
nicht mal erwähnt. Ein&amp;nbsp;Trauerspiel.&lt;/p&gt;
&lt;p&gt;Soll ich daraus nun ein &lt;em&gt;ceterum censeo&lt;/em&gt; machen? Wenn&amp;#8217;s denn sein muss:
&amp;#8220;Im Übrigen bin ich der Meinung, dass &lt;a class="reference external" href="http://www.heise.de/newsticker/meldung/Naechste-Windows-Version-Ueber-den-x86-Tellerrand-1164192.html"&gt;Microsoft derzeit alles richtig
macht&lt;/a&gt; und bald der wichtigste Konkurrent für Apple und Google sein
wird.&amp;#8221; Sogar Webdienste können die einigermaßen,&amp;nbsp;gell?&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>König Microsoft</title><link href="https://www.peterbouda.eu/konig-microsoft.html" rel="alternate"></link><published>2010-12-21T09:18:00+00:00</published><updated>2010-12-21T09:18:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-12-21:/konig-microsoft.html</id><summary type="html">&lt;p&gt;Unter den Blinden ist der Einäugige König, sagt man so schön. Und im
Moment ist, dank Windows Phone 7, Microsoft wohl zum König bei den
nicht-so-sehr-im-Vordergrund-stehenden Anbietern mobiler Betriebssysteme
für Smartphones avanciert. Gestern wurden wieder mal &lt;a class="reference external" href="http://www.teltarif.de/nokia-windows-phone-7-smartphone/news/41048.html"&gt;Gerüchte laut&lt;/a&gt;,
dass demnächst auch Nokia Geräte mit dem &lt;span class="caps"&gt;MS&lt;/span&gt;-System bauen könnte. Das …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Unter den Blinden ist der Einäugige König, sagt man so schön. Und im
Moment ist, dank Windows Phone 7, Microsoft wohl zum König bei den
nicht-so-sehr-im-Vordergrund-stehenden Anbietern mobiler Betriebssysteme
für Smartphones avanciert. Gestern wurden wieder mal &lt;a class="reference external" href="http://www.teltarif.de/nokia-windows-phone-7-smartphone/news/41048.html"&gt;Gerüchte laut&lt;/a&gt;,
dass demnächst auch Nokia Geräte mit dem &lt;span class="caps"&gt;MS&lt;/span&gt;-System bauen könnte. Das
wäre natürlich ein ganz schöner Hammer, und würde die bisherige
Strategie von Nokia komplett über den Haufen schmeißen. Aber was tut man
nicht alles, wenn man verzweifelt ist&amp;#8230; wobei ich Windows Phone samt
Programmierung mit Silverlight für ein äußerst spannendes Stück Technik
halte, wie ja schon auf der einen oder anderen Seite hier aufblitzte.
Idealerweise stelle ich mir das so vor, dass Qt- und
Silverlight-Programme sowohl auf Windows Phone als auch auf Symbian
laufen; MeeGo wäre fein, aber Silverlight für Linux, naja, da würde wohl
der Teufel Schlittschuhfahren, demnächst. Aber das ist ja schließlich in
Finnland ganz großer&amp;nbsp;Sport&amp;#8230;&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Linguadict-Wörterbuch im Ovi Store</title><link href="https://www.peterbouda.eu/linguadict-worterbuch-im-ovi-store.html" rel="alternate"></link><published>2010-12-20T09:45:00+00:00</published><updated>2010-12-20T09:45:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-12-20:/linguadict-worterbuch-im-ovi-store.html</id><summary type="html">&lt;p&gt;Jetzt hat es also doch geklappt: die Anwendung &lt;a class="reference external" href="http://store.ovi.com/content/59538"&gt;Linguadict ist im Ovi
Store verfügbar&lt;/a&gt;! Es ist ein feines, und auch gar nicht kleines
Wörterbuch, mit über 500.000 Einträgen. Außerdem gibt es zu jedem
Eintrag eine Sprachausgabe, wobei die Audiodateien von einem Server
geladen werden. Dafür braucht man also eine …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Jetzt hat es also doch geklappt: die Anwendung &lt;a class="reference external" href="http://store.ovi.com/content/59538"&gt;Linguadict ist im Ovi
Store verfügbar&lt;/a&gt;! Es ist ein feines, und auch gar nicht kleines
Wörterbuch, mit über 500.000 Einträgen. Außerdem gibt es zu jedem
Eintrag eine Sprachausgabe, wobei die Audiodateien von einem Server
geladen werden. Dafür braucht man also eine Internetverbindung, das
Wörterbuch selbst ist komplett offline verfügbar. Bisher ist die
Anwendung nur für das N900&amp;nbsp;erhältlich.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Ovi-Krämerladen</title><link href="https://www.peterbouda.eu/ovi-kramerladen-dasskriptcom.html" rel="alternate"></link><published>2010-12-01T10:51:00+00:00</published><updated>2010-12-01T10:51:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-12-01:/ovi-kramerladen-dasskriptcom.html</id><summary type="html">&lt;p&gt;Ich bin ja von Nokia mittlerweile so einiges gewohnt, durch zahlreichen
Workarounds für alle möglichen Bugs in Qt und Qt Mobility für Maemo und
Symbian gestählt, aber was im Moment im Ovi Store passiert übertrifft
alles Andere bei Weitem. Entgegen meiner Gewohnheit muss ich deswegen in
diesem Blog meinem Ärger …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ich bin ja von Nokia mittlerweile so einiges gewohnt, durch zahlreichen
Workarounds für alle möglichen Bugs in Qt und Qt Mobility für Maemo und
Symbian gestählt, aber was im Moment im Ovi Store passiert übertrifft
alles Andere bei Weitem. Entgegen meiner Gewohnheit muss ich deswegen in
diesem Blog meinem Ärger mal Luft machen. Ich hätte mich bisher
tatsächlich als Nokia-Fan bezeichnet. Mein erstes Handy war von Nokia,
mein Jetziges sowieso, dazwischen hab ich immer mal wieder andere
Hersteller ausprobiert, und bin dann reumütig zurückgekehrt. Nokia war
halt das Beste. Seit einiger Zeit entwickle ich nun auch Software für
Nokia-Handys, zuerst Java-Anwendungen, dann Qt; denn großer Qt-Fan war
ich sowieso schon immer. Und so kommt man eben irgendwann auf die Idee,
dass man ja auch mal eine Anwendung verkaufen möchte, und der Ovi Store
soll sowas ja unterstützen. Und man hat ja auch schon Anwendungen
drinnen, die sind nicht so toll, aber hey: die Entwicklung hat Spaß
gemacht, und ein paar Leut&amp;#8217; laden sie auch runter. Also programmiert man
fleißig, testet alles konsequent, baut um Bugs herum, und nach
wochenlanger Arbeit stellt man das Ganze in die &lt;span class="caps"&gt;QA&lt;/span&gt;-Queue bei Ovi
Publish. Dann heißts warten: 5 Wochen hat&amp;#8217;s gedauert, bis Nokia endlich
mal soweit war, für eine Anwendung mit exakt einem (in Zahlen: 1)
Fenster, eine kleine Ewigkeit, während rundherum die tollsten
Anwendungen für Android und iPhone erscheinen, sogar Microsoft bringt in
der Zwischenzeit ein mehr als konkurrenzfähiges Betriebssystem auf den
Markt, der Qt-Entwickler schielt darauf mit neidischen Blicken; trotzdem
große Freude zuerst, aber dann: irgendein Nokia-Mitarbeiter setzt das
Veröffentlichungsdatum noch einmal vier Wochen in die Zukunft.
Kommentarlos. Also eine Mail an den Ovi Publish Support, die Antwort
dauert nur 3 Tage, erfolgt aber in Form einer Standardmail. Thema
verfehlt. Also noch eine Mail hinterher, und dieses Mal antwortet
tatsächlich jemand und&amp;nbsp;sagt:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
After investigating further we found the QA team had indeed change the
start date to December 1, 2010 as OVI Store Maemo firmware PR1.3 mode
for N900 is unavailable so instead of failing your app QA team instead
changed the date till the new firmware PR1.3 is ready. Since QA team
found your application only works with PR1.3, it cannot be published
until the store is set to PR1.3 therefore QA team will update the start
date again on your behalf.
&lt;/pre&gt;
&lt;p&gt;Aber Nokia: was genau funktioniert denn nicht? Ich habe alles für &lt;span class="caps"&gt;PR&lt;/span&gt; 1.2
programmiert, warum sollte es dann nur mit &lt;span class="caps"&gt;PR&lt;/span&gt; 1.3 funktionieren?
Außerdem ist &lt;span class="caps"&gt;PR&lt;/span&gt; 1.3 doch offiziell erschienen, mittlerweile&amp;#8230;? Diese
Fragen bleiben offen, nähere Informationen bekommt man nicht. Aber was
sind schon 4 Wochen für Nokia? Also heißt es noch einmal warten,
geduldig, bis 1.12., der Tag an dem die Anwendung laut Nokia erscheinen
soll. Aber was passiert am 30.11.? Das Startdatum wird wieder geändert,
kommentarlos, auf den 31.12., wieder keine weiteren Informationen für
den kooperationswilligen Entwickler; verdammt, Nokia: dann sagt mir
wenigstens, was ich bei der Anwendung korrigieren soll, damit ihr sie in
den Store aufnehmt! Bei anderen Anwendungen habe ich nichts anderes
hineinprogrammiert, und die habt ihr ohne Probleme angenommen. Und
jetzt? Soll ich noch einmal 4 Wochen warten? Und dann noch einmal? Gibt
es Nokia dann überhaupt&amp;nbsp;noch?&lt;/p&gt;
&lt;p&gt;Was im Moment bei Nokia los ist, weiß der Teufel. Für mich als
Entwickler ist es aber mehr als frustrierend, wenn man nicht einmal ein
vernünftiges Feedback bekommen, um eine einfache Anwendung vernünftig
für den Ovi Store vorbereiten zu können. Ich habe nichts gegen eine
strenge &lt;span class="caps"&gt;QA&lt;/span&gt;, gegen ein bisschen Qualität im Laden. Aber sagt doch
wenigstens, was man tun muss, um in die geheiligten Hallen vorgelassen
zu werden. Und bestimmt nicht einfach hinter meinem Rücken über meine
Anwendung. Erst nach dem Login bei Ovi Publish und Blick in die
Anwendungsdaten habe ich vom geänderten Startdatum erfahren. Das ist
einfach keine Art und Weise mit Entwicklern für das eigene System
umzugehen, finde ich. Schließlich nehmt ihr dafür auch noch 30 Prozent,
da darf man wohl ein bisschen Entgegenkommen&amp;nbsp;erwarten.&lt;/p&gt;
&lt;p&gt;Der Frust hat sich jetzt schon länger bei mir aufgebaut: die
&lt;span class="caps"&gt;QA&lt;/span&gt;-Wartezeiten bei Nokia sind katastrophal, mein zu Entwicklungszwecken
erstandenes C7 funktioniert immer noch nicht, und kein Mensch weiß, wie
man denn in einem Jahr Software für Nokia-Handys entwicklen wird. Qt
wird&amp;#8217;s wohl sein, aber die bisherigen Widgets und Layout passen einfach
nicht zu einem mobilen Betriebssystem, es gibt immer noch keine
vernünftige Lösung für Portrait-Landscape-Darstellung; &lt;span class="caps"&gt;QML&lt;/span&gt; ist gut, aber
sollen wir in Zukunft alle Widgets selber malen? Da muss ich noch einmal
auf Microsoft verweisen, die ein sowohl für Anwender als auch Entwickler
mehr als innovatives System auf die Beine gestellt hat, dass sich meiner
Ansicht nach gerade durch eine klare Definition von &lt;span class="caps"&gt;GUI&lt;/span&gt;-Vorgaben mit
äußerst benutzerfreundlichen und bisher nicht gesehenen Oberflächen und
technischen Schnittstellen auszeichnet und für das man schon mehr als
ein halbes Jahr vor Veröffentlichung ein (fast) definitives &lt;span class="caps"&gt;SDK&lt;/span&gt; bekommen
hat, um seine Anwendungen zu schreiben. So einfach wie Qt, dank
Silverlight mehr oder weniger plattformunabhängig, technisch dank
Zugriff auf zahlreichen Web-APIs und Datenmodelle weit voraus und
trotzdem leicht zu programmieren. Und die restliche Konkurrenz schläft
ja auch nicht. Nokia, ich habe bisher treu zu dir gehalten, und nichts
auf dich kommen lassen, aber mal ganz ehrlich: der Glaube, dass du in
zwei Jahren noch bzw. wieder konkurrenzfähige Mobiltelefone produzieren
wirst schwindet bedenklich, und das nicht erst mit Blick auf die&amp;nbsp;Konkurrenz.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Neues über Neues</title><link href="https://www.peterbouda.eu/neues-uber-neues.html" rel="alternate"></link><published>2010-11-12T08:52:00+00:00</published><updated>2010-11-12T08:52:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-11-12:/neues-uber-neues.html</id><summary type="html">&lt;p&gt;Diese Woche war aber mal in der Tat eine Woche der Veröffentlichungen.
Zuerst gabe es eine Reihe von Qt-spezifischen&amp;nbsp;Updates:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://labs.qt.nokia.com/2010/11/09/qt-creator-2-1-beta-2/"&gt;Qt Creator Beta&amp;nbsp;2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://labs.qt.nokia.com/2010/11/09/qt-4-7-1-released/"&gt;Qt&amp;nbsp;4.7.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://labs.qt.nokia.com/2010/11/09/qt-mobility-1-1-0-released/"&gt;Qt Mobility&amp;nbsp;1.1.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Auf Qt Mobility 1.1 war ich schon gespannt, vor allem die &lt;span class="caps"&gt;API&lt;/span&gt; für Karten
und Navigation …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Diese Woche war aber mal in der Tat eine Woche der Veröffentlichungen.
Zuerst gabe es eine Reihe von Qt-spezifischen&amp;nbsp;Updates:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://labs.qt.nokia.com/2010/11/09/qt-creator-2-1-beta-2/"&gt;Qt Creator Beta&amp;nbsp;2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://labs.qt.nokia.com/2010/11/09/qt-4-7-1-released/"&gt;Qt&amp;nbsp;4.7.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://labs.qt.nokia.com/2010/11/09/qt-mobility-1-1-0-released/"&gt;Qt Mobility&amp;nbsp;1.1.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Auf Qt Mobility 1.1 war ich schon gespannt, vor allem die &lt;span class="caps"&gt;API&lt;/span&gt; für Karten
und Navigation probier ich bald mal aus. Und: Es gibt jetzt auch
&lt;span class="caps"&gt;QML&lt;/span&gt;-Bindings für die mobilen Schnittstellen. Die Zukunft bei Qt ist
definitiv &lt;span class="caps"&gt;QML&lt;/span&gt;, das kann man gar nicht oft genug&amp;nbsp;wiederholen.&lt;/p&gt;
&lt;p&gt;Außerdem, lange erwartet, jetzt ist es da: &lt;a class="reference external" href="http://meego.com/community/blogs/veli/2010/meego-1.1-sdk-beta-release"&gt;eine Beta des MeeGo-&lt;span class="caps"&gt;SDK&lt;/span&gt;&lt;/a&gt;!
Es unterstützt die Entwicklung für die MeeGos auf Netbooks, N900 und
Aava. Es gibt viel Herunterzuladen, also auf ans&amp;nbsp;Werk!&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>N900, Bluetooth und Arduino</title><link href="https://www.peterbouda.eu/n900-bluetooth-und-arduino.html" rel="alternate"></link><published>2010-11-09T09:01:00+00:00</published><updated>2010-11-09T09:01:00+00:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-11-09:/n900-bluetooth-und-arduino.html</id><content type="html">&lt;p&gt;Das hat mit Qt direkt zwar nix zu tun, aber ich hab mal ein bisschen mit
einem Arduino-Board herumgespielt, um Daten per Bluetooth mit dem N900
austauschen; und &lt;a class="reference external" href="http://peterbouda.blogspot.com/2010/11/arduino-and-n900.html"&gt;das ist dabei herausgekommen&lt;/a&gt;. Ein ordentliches Linux
auf dem Mobiltelefon zu haben kann schon Vorteile&amp;nbsp;haben.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Ein herbstliches Hallo, MeeGo 1.1</title><link href="https://www.peterbouda.eu/ein-herbstliches-hallo-meego-11.html" rel="alternate"></link><published>2010-10-30T13:53:00+01:00</published><updated>2010-10-30T13:53:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-10-30:/ein-herbstliches-hallo-meego-11.html</id><summary type="html">&lt;p&gt;Letzte Woche wurde, wie geplant, &lt;a class="reference external" href="http://meego.com/community/blogs/valhalla/2010/meego-1.1-release"&gt;MeeGo in Version 1.1 zum Download
bereit gestellt&lt;/a&gt;. Nun gibt es also drei offizielle Varianten:
In-Vehicle Infotainment (&lt;span class="caps"&gt;IVI&lt;/span&gt;), Handset und Netbook, jeweils als &amp;#8220;User
Experience&amp;#8221; (&lt;span class="caps"&gt;UX&lt;/span&gt;). Die Handset &lt;span class="caps"&gt;UX&lt;/span&gt; lässt sich mit der &lt;a class="reference external" href="http://www.mobileqt.de/blogposts/70"&gt;neuen Firmware &lt;span class="caps"&gt;PR&lt;/span&gt;
1.3&lt;/a&gt; als Dual-Boot auf dem N900 installieren …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Letzte Woche wurde, wie geplant, &lt;a class="reference external" href="http://meego.com/community/blogs/valhalla/2010/meego-1.1-release"&gt;MeeGo in Version 1.1 zum Download
bereit gestellt&lt;/a&gt;. Nun gibt es also drei offizielle Varianten:
In-Vehicle Infotainment (&lt;span class="caps"&gt;IVI&lt;/span&gt;), Handset und Netbook, jeweils als &amp;#8220;User
Experience&amp;#8221; (&lt;span class="caps"&gt;UX&lt;/span&gt;). Die Handset &lt;span class="caps"&gt;UX&lt;/span&gt; lässt sich mit der &lt;a class="reference external" href="http://www.mobileqt.de/blogposts/70"&gt;neuen Firmware &lt;span class="caps"&gt;PR&lt;/span&gt;
1.3&lt;/a&gt; als Dual-Boot auf dem N900 installieren; eine Aufgabe für den
nächsten freien Tag&amp;#8230; Laut &lt;a class="reference external" href="http://www.heise.de/newsticker/meldung/MeeGo-1-1-fuer-Netbooks-IVIs-und-Handset-freigegeben-1127238.html"&gt;heise.de&lt;/a&gt; soll wohl eine Beta des &lt;span class="caps"&gt;SDK&lt;/span&gt; im
Netbook-Image sein, mit der sich Qt-Programme für MeeGo entwickeln
lassen, die finale Version wird für die MeeGo-Konferenz im November
erwartet. Außerdem, rein spekulativ: für MeeGo 1.2 könnte eine
Tablet-&lt;span class="caps"&gt;UX&lt;/span&gt;-Variante kommen. Da sollte doch das Wetab eine geeignete
Hardware-Basis sein,&amp;nbsp;oder?&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>PR 1.3 ist da!</title><link href="https://www.peterbouda.eu/pr-13-ist-da.html" rel="alternate"></link><published>2010-10-25T12:16:00+01:00</published><updated>2010-10-25T12:16:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-10-25:/pr-13-ist-da.html</id><summary type="html">&lt;p&gt;Die erste Meldung über die Veröffentlichung der neuen Firmware &lt;span class="caps"&gt;PR&lt;/span&gt; 1.3
fürs N900 kommt gerade rein: &lt;a class="reference external" href="http://thehandheldblog.com/2010/10/25/nokia-n900-pr-1-3-firmware-now-available/"&gt;in Großbritannien scheint sie schon
Over-The-Air verteilt zu werden&lt;/a&gt;. Weitere Länder folgen, heißt: den
Programmmanager starten und ab sofort in regelmäßigen Abständen auf
&amp;#8220;Aktualisieren&amp;#8221; klicken. Qt 4.7 ist dann wohl auf jedem …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Die erste Meldung über die Veröffentlichung der neuen Firmware &lt;span class="caps"&gt;PR&lt;/span&gt; 1.3
fürs N900 kommt gerade rein: &lt;a class="reference external" href="http://thehandheldblog.com/2010/10/25/nokia-n900-pr-1-3-firmware-now-available/"&gt;in Großbritannien scheint sie schon
Over-The-Air verteilt zu werden&lt;/a&gt;. Weitere Länder folgen, heißt: den
Programmmanager starten und ab sofort in regelmäßigen Abständen auf
&amp;#8220;Aktualisieren&amp;#8221; klicken. Qt 4.7 ist dann wohl auf jedem aktualisierten
N900 drauf, samt Qt-Quick- und &lt;span class="caps"&gt;QML&lt;/span&gt;-Unterstützung.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Hier nun auch der Beitrag im Qt-Blog, über Qt 4.7 auf dem&amp;nbsp;N900:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://blog.qt.nokia.com/2010/10/25/qt-4-7-now-being-deployed-to-nokia-n900s/"&gt;Qt 4.7 now being deployed to Nokia&amp;nbsp;N900s&lt;/a&gt;&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Auf (Nimmer?)Wiedersehen, Symbian</title><link href="https://www.peterbouda.eu/auf-nimmerwiedersehen-symbian.html" rel="alternate"></link><published>2010-10-25T11:13:00+01:00</published><updated>2010-10-25T11:13:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-10-25:/auf-nimmerwiedersehen-symbian.html</id><summary type="html">&lt;p&gt;Mittlerweile &lt;a class="reference external" href="http://www.heise.de/newsticker/meldung/Nokia-will-nur-noch-Qt-und-HTML5-Anwendungen-1124446.html"&gt;pfeifen es die Spatzen von den Dächern&lt;/a&gt;: die Zukunft von
Symbian scheint ungewisser den je. Nachdem sich Samsung schon seit
längerem &lt;a class="reference external" href="http://www.heise.de/mobil/meldung/Kein-Symbian-mehr-bei-Samsung-1099923.html"&gt;von Symbian verabschiedet hat&lt;/a&gt;, Sony Ericsson noch letzten
Monat &lt;a class="reference external" href="http://www.heise.de/mobil/meldung/Bericht-Sony-Ericsson-gibt-Symbian-auf-1097300.html"&gt;angekündigt hat&lt;/a&gt; keine Symbian-Handys mehr zu bauen, scheint nun
auch Nokia die Plattform langsam aufzugeben und komplett auf MeeGo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Mittlerweile &lt;a class="reference external" href="http://www.heise.de/newsticker/meldung/Nokia-will-nur-noch-Qt-und-HTML5-Anwendungen-1124446.html"&gt;pfeifen es die Spatzen von den Dächern&lt;/a&gt;: die Zukunft von
Symbian scheint ungewisser den je. Nachdem sich Samsung schon seit
längerem &lt;a class="reference external" href="http://www.heise.de/mobil/meldung/Kein-Symbian-mehr-bei-Samsung-1099923.html"&gt;von Symbian verabschiedet hat&lt;/a&gt;, Sony Ericsson noch letzten
Monat &lt;a class="reference external" href="http://www.heise.de/mobil/meldung/Bericht-Sony-Ericsson-gibt-Symbian-auf-1097300.html"&gt;angekündigt hat&lt;/a&gt; keine Symbian-Handys mehr zu bauen, scheint nun
auch Nokia die Plattform langsam aufzugeben und komplett auf MeeGo
umzuschwenken. Bisher hat Nokia ja eigentlich drei Geräteklassen
vorgesehen, wobei Symbian sozusagen die Mittelklasse darstellt. Davon
scheint man nun abzukommen, was zunächst durchaus Sinn macht.
Schließlich entwickelt man sowieso alles in Qt, und dieses auf zwei
Plattformen zu pflegen macht halt einfach doppelte Arbeit. Bei einer
Sache muss Nokia aber nun nachlegen: ich benutze immer noch Symbian,
einfach weil ich keine Lust habe mein Handy jeden Tag aufzuladen (bzw.
besser gesagt: jeden Tag daran denken zu müssen&amp;#8230;). Wer viel
telefoniert wird mit dem N900 kaum durch den ganzen Tag kommen, ohne
zwischendrin aufzutanken. Das iPhone und auch einige Android-Geräte
hängen bei der Akkulaufzeit die Latte mittlerweile recht hoch, die Nokia
bisher nur mit Symbian-Geräten locker überspringt. Insofern bin ich nun
umso mehr auf das N9 gespannt, wann immer es denn auch kommt. Die Frage
ist: Schafft es Nokia, ein auch für den Otto-Normal-Verbraucher
konkurrenzfähiges Smartphone auf den Markt zu bringen? Für
(Open-Source-)Entwickler und Linux-Fans ist Maemo sowieso ungeschlagen,
aber MeeGo muss definitiv für die Masse attraktiver&amp;nbsp;werden.&lt;/p&gt;
&lt;p&gt;&lt;script type="text/javascript"&gt;&lt;/p&gt;&lt;p&gt;var flattr_uid =&amp;nbsp;'12306';&lt;/p&gt;&lt;p&gt;var flattr_tle = 'Auf (Nimmer?)Wiedersehen,&amp;nbsp;Symbian';&lt;/p&gt;&lt;p&gt;var flattr_dsc = 'Mittlerweile pfeifen es die Spatzen von den Dächern: die Zukunft von Symbian scheint ungewisser den je. Nachdem sich Samsung schon seit längerem von Symbian verabschiedet hat, Sony Ericsson noch&amp;nbsp;letz...';&lt;/p&gt;&lt;p&gt;var flattr_cat =&amp;nbsp;'text';&lt;/p&gt;&lt;p&gt;var flattr_lng =&amp;nbsp;'de_DE';&lt;/p&gt;&lt;p&gt;var flattr_tag = 'Symbian, MeeGo,&amp;nbsp;Roadmap';&lt;/p&gt;&lt;p&gt;var flattr_url =&amp;nbsp;'http://www.dasskript.com/blogposts/69';&lt;/p&gt;&lt;p&gt;var flattr_btn =&amp;nbsp;'compact';&lt;/p&gt;&lt;p&gt;&lt;/script&gt;&lt;/p&gt;&lt;p&gt;&lt;script src="http://api.flattr.com/button/load.js" type="text/javascript"&gt;&lt;/script&gt;&lt;/p&gt;&lt;/p&gt;</content><category term="Museum"></category></entry><entry><title>MeeGo auf dem N900</title><link href="https://www.peterbouda.eu/meego-auf-dem-n900.html" rel="alternate"></link><published>2010-10-14T07:50:00+01:00</published><updated>2010-10-14T07:50:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-10-14:/meego-auf-dem-n900.html</id><summary type="html">&lt;p&gt;Jetzt wirds langsam ernst: diesen Monat soll ja noch MeeGo in Version
1.1 erscheinen, und dann auch gleich in einer ersten offiziellen
Handset-&lt;span class="caps"&gt;UX&lt;/span&gt;-Version. Die wird erst einmal nur auf dem N900 laufen, und da
berichtet &lt;a class="reference external" href="http://meego.com/community/blogs/harrihakulinen/2010/meego-calling-n900"&gt;Harri Hakulinen von großen Fortschritten&lt;/a&gt;. Interessant: es
steht wohl doch die &lt;span class="caps"&gt;PR …&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Jetzt wirds langsam ernst: diesen Monat soll ja noch MeeGo in Version
1.1 erscheinen, und dann auch gleich in einer ersten offiziellen
Handset-&lt;span class="caps"&gt;UX&lt;/span&gt;-Version. Die wird erst einmal nur auf dem N900 laufen, und da
berichtet &lt;a class="reference external" href="http://meego.com/community/blogs/harrihakulinen/2010/meego-calling-n900"&gt;Harri Hakulinen von großen Fortschritten&lt;/a&gt;. Interessant: es
steht wohl doch die &lt;span class="caps"&gt;PR&lt;/span&gt; 1.3 Firmware für das N900 vor der Tür, die dann
Dual-Boot zwischen Maemo und MeeGo bringen soll. Damit kann man dann
seine Qt-Anwendungen unter beiden Betriebssystemen ausprobieren. Ich bin&amp;nbsp;gespannt!&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Qt-Software auf dem WeTab</title><link href="https://www.peterbouda.eu/qt-software-auf-dem-wetab.html" rel="alternate"></link><published>2010-10-09T17:00:00+01:00</published><updated>2010-10-09T17:00:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-10-09:/qt-software-auf-dem-wetab.html</id><summary type="html">&lt;p&gt;Widerstand war zwecklos: der Media Markt händigte mir letzte Woche mein
wohlverdientes &lt;a class="reference external" href="http://www.amazon.de/gp/product/B003JFKUSK?ie=UTF8&amp;amp;tag=jsusde-21&amp;amp;linkCode=as2&amp;amp;camp=1638&amp;amp;creative=6742&amp;amp;creativeASIN=B003JFKUSK"&gt;WeTab&lt;/a&gt;&lt;img alt="image0" src="http://www.assoc-amazon.de/e/ir?t=jsusde-21&amp;amp;l=as2&amp;amp;o=3&amp;amp;a=B003JFKUSK" /&gt;-Exemplar aus. Trotz geringer
Akkulaufzeit und Genöhle im Twitter-Universum kam ich nicht darum herum,
schließlich &lt;a class="reference external" href="http://www.mobileqt.de/blogposts/59"&gt;läuft da MeeGo drauf&lt;/a&gt; und die Aussicht auf ein Tablet mit
freiem Betriebssystem lässt einen Entwickler mit Interesse an neuen
Technik-Konzepten dann …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Widerstand war zwecklos: der Media Markt händigte mir letzte Woche mein
wohlverdientes &lt;a class="reference external" href="http://www.amazon.de/gp/product/B003JFKUSK?ie=UTF8&amp;amp;tag=jsusde-21&amp;amp;linkCode=as2&amp;amp;camp=1638&amp;amp;creative=6742&amp;amp;creativeASIN=B003JFKUSK"&gt;WeTab&lt;/a&gt;&lt;img alt="image0" src="http://www.assoc-amazon.de/e/ir?t=jsusde-21&amp;amp;l=as2&amp;amp;o=3&amp;amp;a=B003JFKUSK" /&gt;-Exemplar aus. Trotz geringer
Akkulaufzeit und Genöhle im Twitter-Universum kam ich nicht darum herum,
schließlich &lt;a class="reference external" href="http://www.mobileqt.de/blogposts/59"&gt;läuft da MeeGo drauf&lt;/a&gt; und die Aussicht auf ein Tablet mit
freiem Betriebssystem lässt einen Entwickler mit Interesse an neuen
Technik-Konzepten dann doch zugreifen. Und bereut habe ich es mit
Sicherheit nicht, dazu macht das Gerät auch im unfertigen Zustand
einfach zu viel Spaß. Endlich wieder die Süddeutsche und die Zeit am
Frühstückstisch! :-) Aber dazu ein anderes Mal mehr, vielleicht haben
sich dann die meisten Ignoranten wieder beruhigt. Für mich ist das WeTab
das bessere, weil freie&amp;nbsp;Tablet.&lt;/p&gt;
&lt;p&gt;Ich wollte hiermit nun eigentlich auch nur kundtun, dass sich
Qt-Software relativ problemlos auf dem WeTab kompilieren und starten
lässt. Ich habe dazu gleich einen &lt;a class="reference external" href="http://www.mobileqt.de/wiki/wie_man_eine_qt_anwendung_auf_dem_wetab_kompiliert"&gt;Wiki-Artikel online gestellt&lt;/a&gt;, indem
ihr das Prozedere nachlesen könnt. Hm&amp;#8230; Wie startet man nochmal den
C++-Compiler auf dem&amp;nbsp;iPad?&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Beta Qt Mobility 1.1.0</title><link href="https://www.peterbouda.eu/beta-qt-mobility-110.html" rel="alternate"></link><published>2010-10-05T12:29:00+01:00</published><updated>2010-10-05T12:29:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-10-05:/beta-qt-mobility-110.html</id><summary type="html">&lt;p&gt;Letzte Woche schon wurde die erste &lt;a class="reference external" href="http://labs.qt.nokia.com/2010/09/30/qt-mobility-1-1-0-beta-package/"&gt;erste Beta für Qt Mobility 1.1.0
veröffentlicht&lt;/a&gt;. Mittlerweile sind wohl auch &lt;a class="reference external" href="http://labs.qt.nokia.com/2010/10/04/important-update-on-qt-mobility-1-1-0-beta-package/"&gt;Probleme mit den Paketen
behoben&lt;/a&gt;, so dass interessierte Entwickler die erweiterten alten und
neuen APIs ausprobieren können. So gibt es nun u.a. spezielle
Organizer-Schnittstellen sowie Kartenunterstützung in der Location-&lt;span class="caps"&gt;API …&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Letzte Woche schon wurde die erste &lt;a class="reference external" href="http://labs.qt.nokia.com/2010/09/30/qt-mobility-1-1-0-beta-package/"&gt;erste Beta für Qt Mobility 1.1.0
veröffentlicht&lt;/a&gt;. Mittlerweile sind wohl auch &lt;a class="reference external" href="http://labs.qt.nokia.com/2010/10/04/important-update-on-qt-mobility-1-1-0-beta-package/"&gt;Probleme mit den Paketen
behoben&lt;/a&gt;, so dass interessierte Entwickler die erweiterten alten und
neuen APIs ausprobieren können. So gibt es nun u.a. spezielle
Organizer-Schnittstellen sowie Kartenunterstützung in der Location-&lt;span class="caps"&gt;API&lt;/span&gt;.
Außerdem kann man nun auch aus &lt;span class="caps"&gt;QML&lt;/span&gt; auf die Schnittstellen zugreifen.
Wird bald mal Zeit für die ersten &lt;span class="caps"&gt;QML&lt;/span&gt;-Versuche, meine&amp;nbsp;Herrschaften&amp;#8230;&lt;/p&gt;
&lt;p&gt;&lt;script type="text/javascript"&gt;&lt;/p&gt;&lt;p&gt;var flattr_uid =&amp;nbsp;'12306';&lt;/p&gt;&lt;p&gt;var flattr_tle = 'Beta Qt Mobility&amp;nbsp;1.1.0';&lt;/p&gt;&lt;p&gt;var flattr_dsc = 'Letzte Woche schon wurde die erste erste Beta für Qt Mobility 1.1.0 veröffentlicht. Mittlerweile sind wohl auch Probleme mit den Paketen behoben, so dass interessierte Entwickler die erweiterten&amp;nbsp;alte...';&lt;/p&gt;&lt;p&gt;var flattr_cat =&amp;nbsp;'text';&lt;/p&gt;&lt;p&gt;var flattr_lng =&amp;nbsp;'de_DE';&lt;/p&gt;&lt;p&gt;var flattr_tag = 'Qt Mobility, &lt;span class="caps"&gt;QML&lt;/span&gt;';&lt;/p&gt;&lt;p&gt;var flattr_url =&amp;nbsp;'http://www.dasskript.com/blogposts/66';&lt;/p&gt;&lt;p&gt;var flattr_btn =&amp;nbsp;'compact';&lt;/p&gt;&lt;p&gt;&lt;/script&gt;&lt;/p&gt;&lt;p&gt;&lt;script src="http://api.flattr.com/button/load.js" type="text/javascript"&gt;&lt;/script&gt;&lt;/p&gt;&lt;/p&gt;</content><category term="Museum"></category></entry><entry><title>Tutorial zur App-Entwicklung mit dem Nokia Qt SDK - Teil 2</title><link href="https://www.peterbouda.eu/tutorial-zur-app-entwicklung-mit-dem-nokia-qt-sdk-teil-2.html" rel="alternate"></link><published>2010-09-30T15:05:00+01:00</published><updated>2010-09-30T15:05:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-09-30:/tutorial-zur-app-entwicklung-mit-dem-nokia-qt-sdk-teil-2.html</id><summary type="html">&lt;p&gt;Soeben ist er online gegangen, der zweite Teil des Tutorials zur
App-Entwicklung mit Qt. Und wie das letzte Mal auch parallel &lt;a class="reference external" href="http://meego.de/news/1069-tutorial-zur-app-entwicklung-mit-dem-nokia-qt-sdk-fuer-maemo-und-symbian-teil-2.html"&gt;auf
meego.de&lt;/a&gt; sowie hier &lt;a class="reference external" href="http://mobileqt.de/wiki/tutorial_zur_app_entwicklung_mit_dem_nokia_qt_sdk_fuer_maemo_und_symbian"&gt;im Wiki&lt;/a&gt;. Dieses Mal wird das mit &lt;span class="caps"&gt;MADDE&lt;/span&gt;
erstellte Grundgerüst erweitert, so dass man eine allgemeine Grundlage
für Maemo- und Symbian-Anwendungen erhält. Viel Spaß …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Soeben ist er online gegangen, der zweite Teil des Tutorials zur
App-Entwicklung mit Qt. Und wie das letzte Mal auch parallel &lt;a class="reference external" href="http://meego.de/news/1069-tutorial-zur-app-entwicklung-mit-dem-nokia-qt-sdk-fuer-maemo-und-symbian-teil-2.html"&gt;auf
meego.de&lt;/a&gt; sowie hier &lt;a class="reference external" href="http://mobileqt.de/wiki/tutorial_zur_app_entwicklung_mit_dem_nokia_qt_sdk_fuer_maemo_und_symbian"&gt;im Wiki&lt;/a&gt;. Dieses Mal wird das mit &lt;span class="caps"&gt;MADDE&lt;/span&gt;
erstellte Grundgerüst erweitert, so dass man eine allgemeine Grundlage
für Maemo- und Symbian-Anwendungen erhält. Viel Spaß&amp;nbsp;damit!&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Qt 4.7 ist da!</title><link href="https://www.peterbouda.eu/qt-47-ist-da.html" rel="alternate"></link><published>2010-09-21T16:01:00+01:00</published><updated>2010-09-21T16:01:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-09-21:/qt-47-ist-da.html</id><summary type="html">&lt;p&gt;Ohne große Worte: &lt;a class="reference external" href="http://labs.qt.nokia.com/2010/09/21/qt-4-7-0-now-available/"&gt;die finale Version von Qt 4.7.0 wurde heute
veröffentlicht&lt;/a&gt;. Wir warten gespannt auf das Update für das N900. Die
größte Neuerung ist natürlich Qt Quick, mit dem sich in zukunft elegante
Oberflächen auch und vor allem für mobile Geräte erstellen lassen
sollen. Glückwunsch an alle …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ohne große Worte: &lt;a class="reference external" href="http://labs.qt.nokia.com/2010/09/21/qt-4-7-0-now-available/"&gt;die finale Version von Qt 4.7.0 wurde heute
veröffentlicht&lt;/a&gt;. Wir warten gespannt auf das Update für das N900. Die
größte Neuerung ist natürlich Qt Quick, mit dem sich in zukunft elegante
Oberflächen auch und vor allem für mobile Geräte erstellen lassen
sollen. Glückwunsch an alle Trolle und natürlich: weiter&amp;nbsp;so!&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>TechTalk in der Open Source School</title><link href="https://www.peterbouda.eu/techtalk-in-der-open-source-school.html" rel="alternate"></link><published>2010-09-16T11:12:00+01:00</published><updated>2010-09-16T11:12:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-09-16:/techtalk-in-der-open-source-school.html</id><summary type="html">&lt;p&gt;Die Open Source School in München veranstaltet regelmäßig sogenannte
TechTalks. Am 12. Oktober ist der Nächste, zu dem ich &lt;a class="reference external" href="http://www.opensourceschool.de/techtalks/gratis/schulung/techtalk-mobile-anwendungen-mit-qt-eintritt-frei/"&gt;eine kleine
Einführung in die Entwicklung mobiler Qt-Anwendung&lt;/a&gt; mache. Der Eintritt
ist kostenlos, ihr seid alle herzlich&amp;nbsp;eingeladen.&lt;/p&gt;
&lt;p&gt;In diesem Zusammenhang wollte ich auch noch einmal daran erinnern, dass
vom 18 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Die Open Source School in München veranstaltet regelmäßig sogenannte
TechTalks. Am 12. Oktober ist der Nächste, zu dem ich &lt;a class="reference external" href="http://www.opensourceschool.de/techtalks/gratis/schulung/techtalk-mobile-anwendungen-mit-qt-eintritt-frei/"&gt;eine kleine
Einführung in die Entwicklung mobiler Qt-Anwendung&lt;/a&gt; mache. Der Eintritt
ist kostenlos, ihr seid alle herzlich&amp;nbsp;eingeladen.&lt;/p&gt;
&lt;p&gt;In diesem Zusammenhang wollte ich auch noch einmal daran erinnern, dass
vom 18.-20. Oktober mein &lt;a class="reference external" href="http://www.opensourceschool.de/kurse/muenchen/schulung/mobile-anwendungen-mit-qt-4/"&gt;Kurs über die Entwicklung mobiler
Qt-Anwendungen&lt;/a&gt; stattfindet. Ebenfalls in München und an der Open
Source&amp;nbsp;School.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Ovi-Store Neuigkeiten</title><link href="https://www.peterbouda.eu/ovi-store-neuigkeiten.html" rel="alternate"></link><published>2010-09-15T10:53:00+01:00</published><updated>2010-09-15T10:53:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-09-15:/ovi-store-neuigkeiten.html</id><summary type="html">&lt;p&gt;Zur Zeit findet ja nicht nur das Intel Developer Forum statt, auch noch
die Nokia World gibt&amp;#8217;s in London. Deswegen werde ich gerade mit News
zugeschüttet, die ich gar nicht so schnell verarbeiten kann. Ein paar
interessante Neuerungen am Rande gibt es aber &lt;a class="reference external" href="http://blogs.forum.nokia.com/blog/ovi-publisher-alert/2010/09/15/ovi-store-announcements-nokia-world"&gt;für den Ovi Store&lt;/a&gt;: ab
sofort …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Zur Zeit findet ja nicht nur das Intel Developer Forum statt, auch noch
die Nokia World gibt&amp;#8217;s in London. Deswegen werde ich gerade mit News
zugeschüttet, die ich gar nicht so schnell verarbeiten kann. Ein paar
interessante Neuerungen am Rande gibt es aber &lt;a class="reference external" href="http://blogs.forum.nokia.com/blog/ovi-publisher-alert/2010/09/15/ovi-store-announcements-nokia-world"&gt;für den Ovi Store&lt;/a&gt;: ab
sofort startet Nokia zwei Beta-Programme für In-App-Purchase und
In-App-Ads (letzteres nur für Qt- und Web-Runtime-Anwendungen). Klar,
für Apple Apps gibt&amp;#8217;s das schon eine Weile, erfreulich aber, dass Nokia
dieses Mal zügig nachzieht. Hab mich gleich mal für das Werbeprogramm
gemeldet, vielleicht eine gute Möglichkeit, auch mit freien Apps ein
bisschen Geld zu&amp;nbsp;verdienen.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Tutorial zur App-Entwicklung mit dem Nokia Qt SDK</title><link href="https://www.peterbouda.eu/tutorial-zur-app-entwicklung-mit-dem-nokia-qt-sdk.html" rel="alternate"></link><published>2010-09-14T14:01:00+01:00</published><updated>2010-09-14T14:01:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-09-14:/tutorial-zur-app-entwicklung-mit-dem-nokia-qt-sdk.html</id><summary type="html">&lt;p&gt;Ich habe heute einen &lt;a class="reference external" href="http://mobileqt.de/wiki/tutorial_zur_app_entwicklung_mit_dem_nokia_qt_sdk_fuer_maemo_und_symbian"&gt;neuen Wiki-Artikel&lt;/a&gt; online gestellt, der sich mit
der App-Entwicklung mit dem Nokia Qt &lt;span class="caps"&gt;SDK&lt;/span&gt; beschäftigt. Das Tutorial ist
in diesem Fall eine Art Fortsetzungsgeschichte, die auch auf &lt;a class="reference external" href="http://meego.de"&gt;meego.de&lt;/a&gt;
veröffentlicht wird. Das Tutorial wird anhand einer Beispielanwendung
zeigen, wie man eine Qt-App für Maemo und Symbian …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ich habe heute einen &lt;a class="reference external" href="http://mobileqt.de/wiki/tutorial_zur_app_entwicklung_mit_dem_nokia_qt_sdk_fuer_maemo_und_symbian"&gt;neuen Wiki-Artikel&lt;/a&gt; online gestellt, der sich mit
der App-Entwicklung mit dem Nokia Qt &lt;span class="caps"&gt;SDK&lt;/span&gt; beschäftigt. Das Tutorial ist
in diesem Fall eine Art Fortsetzungsgeschichte, die auch auf &lt;a class="reference external" href="http://meego.de"&gt;meego.de&lt;/a&gt;
veröffentlicht wird. Das Tutorial wird anhand einer Beispielanwendung
zeigen, wie man eine Qt-App für Maemo und Symbian erstellt, die sich
ohne großen Aufwand unter beiden Betriebssystemen nutzen lässt.
Vielleicht kommt sogar noch &lt;a class="reference external" href="http://mobileqt.de/blogposts/59"&gt;MeeGo als Betriebssystem&lt;/a&gt; hinzu, mal
sehen&amp;#8230; Für Fragen und Anregungen stehe gern hier im Forum oder auch im
&lt;a class="reference external" href="http://meego.de/forum/schulungen/10911-qt-schulung-von-peter-bouda.html"&gt;meego.de-Forum&lt;/a&gt; zur&amp;nbsp;Verfügung.&lt;/p&gt;
&lt;p&gt;Ich habe außerdem &lt;a class="reference external" href="http://mobileqt.de/wiki/fuer_beginner_scratchbox_madde_sdk_wtf"&gt;hier&lt;/a&gt; mal versucht kurz zusammenzufassen, wie man
denn nun als Einsteiger in die mobile Qt-Programmierung am Besten
vorgeht. Das Wiki war bisher ja etwas durcheinander, dieser Artikel
bietet hoffentlich einen guten Ansatzpunkt für&amp;nbsp;Anfänger.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Apps auf mobileqt.de</title><link href="https://www.peterbouda.eu/apps-auf-mobileqtde.html" rel="alternate"></link><published>2010-09-03T11:59:00+01:00</published><updated>2010-09-03T11:59:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-09-03:/apps-auf-mobileqtde.html</id><content type="html">&lt;p&gt;Ab sofort gibt es auf mobileqt.de einen neuen &lt;a class="reference external" href="http://mobileqt.de/apps"&gt;Apps-Bereich&lt;/a&gt;. Da
veröffentliche ich die von mir entwickelten Qt-Anwendungen, es gibt
jeweils eine kurze Bechreibung, Screenshots und Download-Links. Außerdem
findet ihr dort Links auf die Code-Repositories, falls vorhanden. Viel
Spaß&amp;nbsp;damit!&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Das WeTab läuft mit MeeGo</title><link href="https://www.peterbouda.eu/das-wetab-lauft-mit-meego.html" rel="alternate"></link><published>2010-09-03T11:50:00+01:00</published><updated>2010-09-03T11:50:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-09-03:/das-wetab-lauft-mit-meego.html</id><summary type="html">&lt;p&gt;Feine Sache: das seit Monaten angekündigte &lt;a class="reference external" href="http://www.heise.de/newsticker/meldung/Das-WeTab-basiert-auf-MeeGo-1071855.html"&gt;WeTab wird MeeGo als
Betriebssystem erhalten&lt;/a&gt;. Da hat Intel wohl den ersten zugkräftigen
Partner gefunden. Von Qt lese ich in den Ankündigungen leider nichts,
inwieweit man die Unterstützung nachinstallieren kann muss man mal
sehen. Leider läuft das Ding nur 6 Stunden mit einer Akkuladung …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Feine Sache: das seit Monaten angekündigte &lt;a class="reference external" href="http://www.heise.de/newsticker/meldung/Das-WeTab-basiert-auf-MeeGo-1071855.html"&gt;WeTab wird MeeGo als
Betriebssystem erhalten&lt;/a&gt;. Da hat Intel wohl den ersten zugkräftigen
Partner gefunden. Von Qt lese ich in den Ankündigungen leider nichts,
inwieweit man die Unterstützung nachinstallieren kann muss man mal
sehen. Leider läuft das Ding nur 6 Stunden mit einer Akkuladung, sonst
wäre das WeTab schon so gut wie&amp;nbsp;gekauft.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Release Candidate von Qt 4.7</title><link href="https://www.peterbouda.eu/release-candidate-von-qt-47.html" rel="alternate"></link><published>2010-08-30T14:20:00+01:00</published><updated>2010-08-30T14:20:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-08-30:/release-candidate-von-qt-47.html</id><summary type="html">&lt;p&gt;Letzte Woche schon wurde der erste &lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/08/26/qt-470-release-candidate-available/"&gt;Release Candidate von Qt 4.7
veröffentlicht&lt;/a&gt;, und mit dabei sind die sehnlichst erwarteten
&lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/08/26/qt-47-release-candidate-and-qt-quick/"&gt;Qt-Quick-Bibliotheken&lt;/a&gt;. Diese sollen mit dem Qt Creator 2.1 dann auch
Unterstützung an der &lt;span class="caps"&gt;IDE&lt;/span&gt;-Front erhalten, zunächst einmal gibt es davon
aber &amp;#8220;nur&amp;#8221; einen &lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/08/25/qt-creator-201/"&gt;neuen Bugfix-Release 2.0.1 …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Letzte Woche schon wurde der erste &lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/08/26/qt-470-release-candidate-available/"&gt;Release Candidate von Qt 4.7
veröffentlicht&lt;/a&gt;, und mit dabei sind die sehnlichst erwarteten
&lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/08/26/qt-47-release-candidate-and-qt-quick/"&gt;Qt-Quick-Bibliotheken&lt;/a&gt;. Diese sollen mit dem Qt Creator 2.1 dann auch
Unterstützung an der &lt;span class="caps"&gt;IDE&lt;/span&gt;-Front erhalten, zunächst einmal gibt es davon
aber &amp;#8220;nur&amp;#8221; einen &lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/08/25/qt-creator-201/"&gt;neuen Bugfix-Release 2.0.1&lt;/a&gt;.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Erstes Release von PySide Mobility</title><link href="https://www.peterbouda.eu/erstes-release-von-pyside-mobility.html" rel="alternate"></link><published>2010-08-23T16:00:00+01:00</published><updated>2010-08-23T16:00:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-08-23:/erstes-release-von-pyside-mobility.html</id><summary type="html">&lt;p&gt;Ist zwar schon etwas her, hier wurde es aber noch nicht vermeldet: &lt;a class="reference external" href="http://www.pyside.org/2010/08/pyside-mobility-v0-1-0-released/"&gt;Eine
erste Version (0.1.0) der PySide-Bindings von Qt Mobility wurde
veröffentlicht&lt;/a&gt;. Auch auf dem N900 in extras-devel verfügbar.
Hoffentlich geht&amp;#8217;s weiter so voran mit PySide, und Nokia sollte bald
&lt;a class="reference external" href="http://maemo.org/community/council/open_letter_of_support_for_python_on_the_maemo-meego_platform/"&gt;Python-Anwendungen für Maemo im Ovi Store …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ist zwar schon etwas her, hier wurde es aber noch nicht vermeldet: &lt;a class="reference external" href="http://www.pyside.org/2010/08/pyside-mobility-v0-1-0-released/"&gt;Eine
erste Version (0.1.0) der PySide-Bindings von Qt Mobility wurde
veröffentlicht&lt;/a&gt;. Auch auf dem N900 in extras-devel verfügbar.
Hoffentlich geht&amp;#8217;s weiter so voran mit PySide, und Nokia sollte bald
&lt;a class="reference external" href="http://maemo.org/community/council/open_letter_of_support_for_python_on_the_maemo-meego_platform/"&gt;Python-Anwendungen für Maemo im Ovi Store erlauben&lt;/a&gt;.&lt;/p&gt;
</content><category term="Python"></category></entry><entry><title>MeeGo für Autos</title><link href="https://www.peterbouda.eu/meego-fur-autos.html" rel="alternate"></link><published>2010-08-04T10:40:00+01:00</published><updated>2010-08-04T10:40:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-08-04:/meego-fur-autos.html</id><summary type="html">&lt;p&gt;Auch von MeeGo gibt was Neues, nämlich eine &lt;a class="reference external" href="http://meego.com/community/blogs/margie/2010/meego-ivi-v1.0-announcement"&gt;erste Version für
automobile Unterhaltungssysteme&lt;/a&gt;. Das Ganze &lt;a class="reference external" href="http://meego.com/community/blogs/margie/2010/meego-ivi-v1.0-announcement"&gt;entsteht unter dem Dach
der Genivi-Allianz&lt;/a&gt;, einem Zusammenschluss diverser Fahrzeug- und
Elektronikhersteller. Ich freu mich jetzt schon drauf, meine ersten
Qt-Anwendungen auf dem Bordcomputer irgendwelcher Luxuslimousinen laufen
zu sehen. :-) Obwohl ich ja eigentlich kein Autofahrer …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Auch von MeeGo gibt was Neues, nämlich eine &lt;a class="reference external" href="http://meego.com/community/blogs/margie/2010/meego-ivi-v1.0-announcement"&gt;erste Version für
automobile Unterhaltungssysteme&lt;/a&gt;. Das Ganze &lt;a class="reference external" href="http://meego.com/community/blogs/margie/2010/meego-ivi-v1.0-announcement"&gt;entsteht unter dem Dach
der Genivi-Allianz&lt;/a&gt;, einem Zusammenschluss diverser Fahrzeug- und
Elektronikhersteller. Ich freu mich jetzt schon drauf, meine ersten
Qt-Anwendungen auf dem Bordcomputer irgendwelcher Luxuslimousinen laufen
zu sehen. :-) Obwohl ich ja eigentlich kein Autofahrer bin. Aber
irgendwann werd ich mir mal nen vernünftigen Bordcomputer fürs Fahrrad
basteln, mit einem MeeGo- oder Qt-Symbian-Handy und &lt;a class="reference external" href="http://www.nokia.de/produkte/zubehoer/zubehoer-uebersicht/akkus-und-ladegeraete/ladegeraete/nokia-fahrrad-ladekit"&gt;dem hier&lt;/a&gt;.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Qt-News-Rundumschlag</title><link href="https://www.peterbouda.eu/qt-news-rundumschlag.html" rel="alternate"></link><published>2010-08-04T10:33:00+01:00</published><updated>2010-08-04T10:33:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-08-04:/qt-news-rundumschlag.html</id><summary type="html">&lt;p&gt;Trotz Urlaubszeit in Finnland gab es in der letzten Woche zwei
Neuigkeiten von der Qt-Front, für die ich erst jetzt die Zeit finde
einen Blogeintrag zu verfassen. Deswegen alles gesammelt an dieser&amp;nbsp;Stelle.&lt;/p&gt;
&lt;p&gt;Von Qt Mobility gibt es nun die &lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/07/27/qt-mobility-102-released/"&gt;Version 1.0.2&lt;/a&gt;, mit einem (zumindest
von mir) lange …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Trotz Urlaubszeit in Finnland gab es in der letzten Woche zwei
Neuigkeiten von der Qt-Front, für die ich erst jetzt die Zeit finde
einen Blogeintrag zu verfassen. Deswegen alles gesammelt an dieser&amp;nbsp;Stelle.&lt;/p&gt;
&lt;p&gt;Von Qt Mobility gibt es nun die &lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/07/27/qt-mobility-102-released/"&gt;Version 1.0.2&lt;/a&gt;, mit einem (zumindest
von mir) lange erwarteten Patch für die Sensoren unter Maemo. Auf die
hatte man bisher nur als Superuser Zugriff, so dass man entsprechende
Anwendungen immer als root starten musste. Offen bleibt, wann es ein
Update für das N900 geben wird. Und ob überhaupt. Sonst bringts
natürlich nicht viel. Gleichzeitig wurde eine technische Vorschau auf
&lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/07/27/qt-mobility-110-technology-preview/"&gt;Qt Mobility 1.1.0 veröffentlicht&lt;/a&gt;, mit einer ganzen Reihe von neuen
APIs und erweiterten&amp;nbsp;alten.&lt;/p&gt;
&lt;p&gt;Nachdem man nun ja Qt-Programme in den Ovi Store stellen darf, hat Nokia
dazu ein informatives &lt;a class="reference external" href="http://blogs.forum.nokia.com/blog/ovi-publisher-alert/2010/08/02/qt-content-qa"&gt;Dokument mit Informationen für Entwickler
veröffentlicht&lt;/a&gt;. Eine schöne Zusammenfassung, wie ich&amp;nbsp;finde.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Neuigkeiten aus den Qt-Laboren</title><link href="https://www.peterbouda.eu/neuigkeiten-aus-den-qt-laboren.html" rel="alternate"></link><published>2010-07-12T11:02:00+01:00</published><updated>2010-07-12T11:02:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-07-12:/neuigkeiten-aus-den-qt-laboren.html</id><summary type="html">&lt;p&gt;Letzte Woche gab es zwei interessante Nachrichten aus den Qt-Laboren.
Zunächst wurde die &lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/07/08/qt-47-beta2-and-qt-creator-21-snapshots-available/"&gt;zweite Beta von Qt 4.7&lt;/a&gt; heraus gebracht, passend
dazu gab es einen aktuellen Schnappschuss des Qt Creator 2.1. Hier bin
ich vor allem auf den Update-Pfad gespannt. Maemo und die bisher
unterstützten Symbian-Geräte verwenden ja …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Letzte Woche gab es zwei interessante Nachrichten aus den Qt-Laboren.
Zunächst wurde die &lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/07/08/qt-47-beta2-and-qt-creator-21-snapshots-available/"&gt;zweite Beta von Qt 4.7&lt;/a&gt; heraus gebracht, passend
dazu gab es einen aktuellen Schnappschuss des Qt Creator 2.1. Hier bin
ich vor allem auf den Update-Pfad gespannt. Maemo und die bisher
unterstützten Symbian-Geräte verwenden ja Qt 4.6, dafür möchte man wohl
weiter Software entwickeln. Wenn der Qt Creator in Zukunft nur mit 4.7
ausgeliefert wird, wie erstellt man dann Pakete für die älteren Geräte?
Mal sehen, wie sich Nokia das vorstellt. Zweitens, und aus meiner Sicht
spannender: das Qt-Entwickler-Netzwerk &lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/07/08/the-qt-developer-network-opens-the-gates/"&gt;hat endlich seine Türen
geöffnet&lt;/a&gt;. Alle Qt-Entwickler sollten sich da natürlich sofort
anmelden. Es gibt viel Dokus und kompetente Leute in Foren an einem Ort&amp;nbsp;versammelt.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>MeeGo Handgeräteoberfläche Tag eins</title><link href="https://www.peterbouda.eu/meego-handgerateoberflache-tag-eins.html" rel="alternate"></link><published>2010-07-02T09:09:00+01:00</published><updated>2010-07-02T09:09:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-07-02:/meego-handgerateoberflache-tag-eins.html</id><summary type="html">&lt;p&gt;Das MeeGo-Projekt hat, wie geplant, am ersten Juli eine erste Version
der sogenannten &lt;a class="reference external" href="http://meego.com/community/blogs/valhalla/2010/meego-handset-project-day-1-here"&gt;&amp;#8220;Handset &lt;span class="caps"&gt;UI&lt;/span&gt;&amp;#8221; veröffentlicht&lt;/a&gt;. Screenshots findet ihr
hinter dem Link, das Ganze kann man auf Intel-Geräten und dem N900
ausprobieren. Für Oktober ist die erste &amp;#8220;richtige&amp;#8221; Ausgabe geplant,
bisher stellt es mehr oder weniger eine Demo dar. Qt …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Das MeeGo-Projekt hat, wie geplant, am ersten Juli eine erste Version
der sogenannten &lt;a class="reference external" href="http://meego.com/community/blogs/valhalla/2010/meego-handset-project-day-1-here"&gt;&amp;#8220;Handset &lt;span class="caps"&gt;UI&lt;/span&gt;&amp;#8221; veröffentlicht&lt;/a&gt;. Screenshots findet ihr
hinter dem Link, das Ganze kann man auf Intel-Geräten und dem N900
ausprobieren. Für Oktober ist die erste &amp;#8220;richtige&amp;#8221; Ausgabe geplant,
bisher stellt es mehr oder weniger eine Demo dar. Qt für die
Anwendungsentwicklung ist natürlich schon&amp;nbsp;dabei.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Unterstützt mobileqt.de per Flattr</title><link href="https://www.peterbouda.eu/unterstutzt-mobileqtde-per-flattr.html" rel="alternate"></link><published>2010-06-25T09:01:00+01:00</published><updated>2010-06-25T09:01:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-06-25:/unterstutzt-mobileqtde-per-flattr.html</id><summary type="html">&lt;p&gt;Fahrende Züge soll man ja nicht aufhalten, da soll man lieber
aufspringen. Deswegen gibt es jetzt hier rechts einen &lt;a class="reference external" href="https://flattr.com"&gt;Flattr&lt;/a&gt;-Button,
per Klick könnt ihr mobileqt.de mit dem ein oder anderen Cent
unterstützen. Die Idee von Flattr ist so simpel wie bestechend: Man legt
einen monatlichen Betrag fest, den …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Fahrende Züge soll man ja nicht aufhalten, da soll man lieber
aufspringen. Deswegen gibt es jetzt hier rechts einen &lt;a class="reference external" href="https://flattr.com"&gt;Flattr&lt;/a&gt;-Button,
per Klick könnt ihr mobileqt.de mit dem ein oder anderen Cent
unterstützen. Die Idee von Flattr ist so simpel wie bestechend: Man legt
einen monatlichen Betrag fest, den man auf sein Flattr-Konto legt. Mit
jedem Klick auf einen Flattr-Button verteilt ihr den monatlichen Betrag
auf Inhalte im Netz, die euch gefallen. Wenn ihr also 2 Euro im Monat
geben wollt, und dann 10 mal irgendwo den Button klickt, bekommt jede
Seite etwa 20 Cent. Nicht ganz, den 10 Prozent von allem bleiben bei den
Betreibern von Flattr. Gute Sache, und mittlerweile auf vielen Seiten zu
finden: hier jetzt eben&amp;nbsp;auch.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Nokia veröffentlicht fertiges Qt-SDK</title><link href="https://www.peterbouda.eu/nokia-veroffentlicht-fertiges-qt-sdk.html" rel="alternate"></link><published>2010-06-23T08:22:00+01:00</published><updated>2010-06-23T08:22:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-06-23:/nokia-veroffentlicht-fertiges-qt-sdk.html</id><summary type="html">&lt;p&gt;Knapp zwei Wochen nach der Veröffentlichung des Release Canditate hat
Nokia heute offiziell die fertige Version des Nokia Qt &lt;span class="caps"&gt;SDK&lt;/span&gt; &lt;a class="reference external" href="http://www.forum.nokia.com/Develop/Qt/"&gt;zum Download
bereit gestellt&lt;/a&gt;. Man kann nun per &amp;#8220;Remote Compiler&amp;#8221; auch Symbian Apps
mit Linux und Mac kompilieren. Nicht schlecht, schon&amp;nbsp;einmal.&lt;/p&gt;
&lt;p&gt;Zwei weitere Ankündigungen haben mir sogar noch besser …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Knapp zwei Wochen nach der Veröffentlichung des Release Canditate hat
Nokia heute offiziell die fertige Version des Nokia Qt &lt;span class="caps"&gt;SDK&lt;/span&gt; &lt;a class="reference external" href="http://www.forum.nokia.com/Develop/Qt/"&gt;zum Download
bereit gestellt&lt;/a&gt;. Man kann nun per &amp;#8220;Remote Compiler&amp;#8221; auch Symbian Apps
mit Linux und Mac kompilieren. Nicht schlecht, schon&amp;nbsp;einmal.&lt;/p&gt;
&lt;p&gt;Zwei weitere Ankündigungen haben mir sogar noch besser gefallen: es gibt
ein öffentliches Beta-Programm für ein kostenfreies (!) und relativ
unkompliziertes (nur zwei Wochen Wartezeit!!!) Singnieren von
Symbian-Anwendungen. Außerdem nimmt der Ovi Store ab sofort
Qt-Anwendungen entgegen, und zwar für das N900, das N97 mini und das X6.
Per &amp;#8220;Smart Installer&amp;#8221; werden dabei je nach Bedarf noch die
Qt-Bibliotheken auf das Gerät installiert. Weitere Geräte sollen bald&amp;nbsp;folgen.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>MicroB machts in 3D</title><link href="https://www.peterbouda.eu/microb-machts-in-3d.html" rel="alternate"></link><published>2010-06-20T09:17:00+01:00</published><updated>2010-06-20T09:17:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-06-20:/microb-machts-in-3d.html</id><summary type="html">&lt;p&gt;Ich muss sagen, dass mich Nokia nach langer Zeit mal wieder beeindruckt
hat, und dass ausgerechnet auf der technischen Seite. Bisher dachte ich,
dass die neue Firmware für das N900 vor allem kleine Verbesserungen,
Bugfixes und natürlich Qt 4.6 bringt. Aber weit gefehlt: ich wollte mich
mal ein bisschen …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ich muss sagen, dass mich Nokia nach langer Zeit mal wieder beeindruckt
hat, und dass ausgerechnet auf der technischen Seite. Bisher dachte ich,
dass die neue Firmware für das N900 vor allem kleine Verbesserungen,
Bugfixes und natürlich Qt 4.6 bringt. Aber weit gefehlt: ich wollte mich
mal ein bisschen mit &lt;a class="reference external" href="http://en.wikipedia.org/wiki/WebGL"&gt;WebGL&lt;/a&gt; auseinandersetzen, und der einzige
Browser, der das von Hause aus unterstützt ist tatsächlich: MicroB auf
dem N900, der Standardbrowser des Geräts. &lt;a class="reference external" href="http://learningwebgl.com/blog/?p=2303"&gt;Gil Thomas&lt;/a&gt; hat eine Reihe
von Demos gelistet, die ihr euch auf dem N900 anschauen könnt. Auf der
Seite wird auch erwähnt (und das war die nächste Überraschung), dass
MicroB das MozOrientation-Event untersützt, für den
Beschleunigungssensor. Ich konnte es nicht lassen, und habe &lt;a class="reference external" href="http://learningwebgl.com/webgl-cube/index-n900-hack.html"&gt;eines der
Demos&lt;/a&gt; von Gil abgewandelt, um die WebGL-Szene per Sensor zu steuern.
Ein Video habe ich für euch davon gemacht, damit ihr auch beeindruckt
sein&amp;nbsp;könnt:&lt;/p&gt;
&lt;iframe width="420" height="315" src="http://www.youtube.com/embed/CYwGY_A3Ck4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;Und wer das Ganze live samt Code sehen&amp;nbsp;will:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.peterbouda.de/webgl"&gt;http://www.peterbouda.de/webgl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Mittlerweile würde ich es sogar unterschreiben, dass MicroB der
beste mobile Browser ist. Nicht der Schnellste, aber dank Flash und
WebGL definitiv der technisch&amp;nbsp;Fortgeschrittenste.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Qt SDK 1.0 Release Candidate ist draußen</title><link href="https://www.peterbouda.eu/qt-sdk-10-release-candidate-ist-draussen.html" rel="alternate"></link><published>2010-06-11T10:04:00+01:00</published><updated>2010-06-11T10:04:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-06-11:/qt-sdk-10-release-candidate-ist-draussen.html</id><summary type="html">&lt;p&gt;Vorgestern wurde nun der erste und letzte (?) &lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/06/09/nokia-qt-sdk-10rc-released/"&gt;Release Candidate des Qt
&lt;span class="caps"&gt;SDK&lt;/span&gt; 1.0 veröffentlicht&lt;/a&gt;, ein großer Schritt hin zum fertigen
Entwicklungskit. Das &lt;span class="caps"&gt;SDK&lt;/span&gt; wird die Qt-Version 4.6.3 enthalten, und damit
kein Qt Quick und den ganzen dekarativen Kram, der erst mit Qt 4.7
kommen soll. Dazu …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Vorgestern wurde nun der erste und letzte (?) &lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/06/09/nokia-qt-sdk-10rc-released/"&gt;Release Candidate des Qt
&lt;span class="caps"&gt;SDK&lt;/span&gt; 1.0 veröffentlicht&lt;/a&gt;, ein großer Schritt hin zum fertigen
Entwicklungskit. Das &lt;span class="caps"&gt;SDK&lt;/span&gt; wird die Qt-Version 4.6.3 enthalten, und damit
kein Qt Quick und den ganzen dekarativen Kram, der erst mit Qt 4.7
kommen soll. Dazu gab es, auch vorgestern, ein &lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/06/09/updated-release-schedule-for-qt-47-qt-creator-20-and-qt-creator-21/"&gt;Update der Roadmap&lt;/a&gt; zur
Veröffentlichung des Qt Creators 2.0 und 2.1 sowie Qt 4.7. Das &lt;span class="caps"&gt;SDK&lt;/span&gt; 1.0
wird demnach außerdem den Qt Creator 2.0 enthalten, der &lt;a class="reference external" href="http://labs.trolltech.com/blogs/2010/06/09/qt-creator-20-its-a-release-candidate/"&gt;ab sofort auch
als Release Candidate&lt;/a&gt; verfügbar ist. Soweit ich das überblicke, ist,
außer Bugfixes und Verbesserungen der Oberfläche, die Hauptneuigkeit,
dass man mit dem Qt Creator 2.0 auf dem Nokia N8 debuggen kann. Bzw.
debuggen können wird, sobald das Gerät verfügbar&amp;nbsp;ist.&lt;/p&gt;
</content><category term="Museum"></category></entry><entry><title>Vorteil Kommandozeile</title><link href="https://www.peterbouda.eu/vorteil-kommandozeile.html" rel="alternate"></link><published>2010-06-04T10:19:00+01:00</published><updated>2010-06-04T10:19:00+01:00</updated><author><name>Peter Bouda</name></author><id>tag:www.peterbouda.eu,2010-06-04:/vorteil-kommandozeile.html</id><summary type="html">&lt;p&gt;Das N900 wird ja allgemein (noch?) nicht so sehr als &lt;strong&gt;der&lt;/strong&gt; iPhone-
oder Android-Konkurrent wahrgenommen. Als halbwegs interessierter
Linux-Anwender oder gar -Entwickler ist aber schnell festzustellen, wo
ein offenes Betriebssystem einen Vorteil hat: es gibt die Kommandozeile,
also eine Shell :-). Zwei schöne Beispiel wurden dazu in den letzten
Wochen veröffentlicht …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Das N900 wird ja allgemein (noch?) nicht so sehr als &lt;strong&gt;der&lt;/strong&gt; iPhone-
oder Android-Konkurrent wahrgenommen. Als halbwegs interessierter
Linux-Anwender oder gar -Entwickler ist aber schnell festzustellen, wo
ein offenes Betriebssystem einen Vorteil hat: es gibt die Kommandozeile,
also eine Shell :-). Zwei schöne Beispiel wurden dazu in den letzten
Wochen veröffentlicht, also zeigt die folgenden Sachen mal euren Kumpels
mit den Apfel-Handys. Sie werden zwar nicht kapieren worum es geht, aber
Hauptsache ihr selbst wisst den Vorteil auf eurer&amp;nbsp;Seite.&lt;/p&gt;
&lt;p&gt;Beim ersten Beispiel handelt es sich &lt;a class="reference external" href="http://blog.adl.pl/saving-n900-battery-power-with-simple-shell-script/495"&gt;um eine kleines Shell-Skript zum
Energiesparen&lt;/a&gt;. Dazu schaltet es einfach die Internetverbindung aus,
setzt das Netz auf 2G und schaltet den automatischen E-Mail-Abruf aus.
Genauso schnell lässts sich alles auch wieder aktiveren, drei bzw. vier
Zeilen Code reichen aus. Und weil es so elegant ist, hier das ganze&amp;nbsp;Skript:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#!/bin/sh

# Simple shell script created in order to preserve battery power in your N900

# Actions taken:
# 1. Sets internet connection mode 'Always ask' /(available under Settings -&amp;gt; Internet connections -&amp;gt; Connect automatically).
# 2. Disconnects current internet connection.
# 3. Switches cellular radio into 2G-only mode.
# 4. Disables automatic email send&amp;amp;receive in Modest email client.

# Created by Dawid Lorenz aka evad, http://adl.pl

if [ &amp;quot;$1&amp;quot; == &amp;quot;off&amp;quot; ]
 then
  echo &amp;quot;Restoring power suckers...&amp;quot;
  gconftool-2 --set --type list --list-type string /system/osso/connectivity/network_type/auto_connect [*]
  gconftool-2 --set --type bool /apps/modest/auto_update true
  run-standalone.sh dbus-send --system --type=method_call --dest=com.nokia.phone.net /com/nokia/phone/net Phone.Net.set_selected_radio_access_technology byte:0
 else
  echo &amp;quot;Going into power saving mode...&amp;quot;
  gconftool-2 --set --type list --list-type string /system/osso/connectivity/network_type/auto_connect []
  gconftool-2 --set --type bool /apps/modest/auto_update false
  run-standalone.sh dbus-send --system --dest=com.nokia.icd /com/nokia/icd_ui com.nokia.icd_ui.disconnect boolean:true
  run-standalone.sh dbus-send --system --type=method_call --dest=com.nokia.phone.net /com/nokia/phone/net Phone.Net.set_selected_radio_access_technology byte:1
fi
&lt;/pre&gt;
&lt;p&gt;Einfach als &amp;#8220;power-saver.sh&amp;#8221; auf dem N900 ablegen, und dann per
&amp;#8220;power-saver.sh&amp;#8221; den Energiesparmodus aktivieren bzw. per
&amp;#8220;power-saver.sh off&amp;#8221; wieder&amp;nbsp;deaktivieren.&lt;/p&gt;
&lt;p&gt;Das zweite Beispiel ist wohl etwas allgemeinverständlicher: &lt;a class="reference external" href="http://thpmaemo.blogspot.com/2010/06/streaming-video-to-big-screen.html"&gt;Videos per
&lt;span class="caps"&gt;HTTP&lt;/span&gt; oder &lt;span class="caps"&gt;SSH&lt;/span&gt; vom N900 auf den Desktop streamen&lt;/a&gt;. Benutzt werden nur
auf dem Gerät vorinstallierte Programme. Dekodiert wird dabei alles auf
dem Desktop, so dass bei ausreichend potenter Netzverbindung sogar
&lt;span class="caps"&gt;HD&lt;/span&gt;-Videos gestreamt werden können. Da lacht das Linux-Anwender-Herz und
der Apfelfan schaut in die Röhre, wenigstens&amp;nbsp;kurzzeitig.&lt;/p&gt;
</content><category term="Museum"></category></entry></feed>